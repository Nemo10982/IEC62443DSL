<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:properties="http://www.eclipse.org/sirius/properties/1.0.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/description/tool/1.1.0" name="IEC" version="12.0.0.2017041100">
  <ownedViewpoints name="IEC" modelFileExtension="miec">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" dropDescriptions="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='DragDropZoneToModel']" name="model" pasteDescriptions="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='PasteZone']" domainClass="mIEC::Model" enablePopupBars="true">
      <metamodel href="../../org.xtext.iec62443.baseModel/model/custom/MIEC.ecore#/"/>
      <defaultLayer name="Default">
        <edgeMappings name="Conduit" deletionDescription="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='deleteConnection']" sourceMapping="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']" targetMapping="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']" targetFinderExpression="aql: if self.oclIsKindOf(mIEC::Conduit) then self.oclAsType(mIEC::Conduit).connects else null endif">
          <style sizeComputationExpression="2" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="Zone" pasteDescriptions="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='pasteComponentProperly'] //@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='pasteCountermeasure'] //@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='PasteZone']" semanticCandidatesExpression="aql:if self.oclIsKindOf(mIEC::Model) then (self.zones + self.conduits) else (if self.oclIsKindOf(mIEC::ClassicalZone) then self.oclAsType(mIEC::ClassicalZone).subZones else null endif) endif" domainClass="Zone" dropDescriptions="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='ComponentToZone'] //@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='DragDropZoneToZone']" childrenPresentation="HorizontalStack">
          <subContainerMappings name="PaddingZone" pasteDescriptions="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='pasteComponentProperly'] //@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='pasteCountermeasure'] //@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='PasteZone']" semanticCandidatesExpression="aql:self" domainClass="mIEC::Zone" dropDescriptions="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='ComponentToZone'] //@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='DragDropZoneToZone']" childrenPresentation="HorizontalStack">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="" hideLabelByDefault="true">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_gray']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_gray']"/>
            </style>
          </subContainerMappings>
          <subContainerMappings name="ZoneAndSubzones" pasteDescriptions="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='pasteComponentProperly'] //@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='pasteCountermeasure'] //@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='PasteZone']" semanticCandidatesExpression="aql:self" domainClass="mIEC::Zone" dropDescriptions="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='ComponentToZone'] //@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='DragDropZoneToZone']" reusedContainerMappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']" childrenPresentation="VerticalStack">
            <subContainerMappings name="ZoneDescription" pasteDescriptions="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='pasteComponentProperly'] //@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='pasteCountermeasure']" semanticCandidatesExpression="aql:self" domainClass="mIEC::Zone" dropDescriptions="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='ComponentToZone'] //@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='DragDropZoneToZone']" childrenPresentation="HorizontalStack">
              <subContainerMappings name="SLContainer" semanticCandidatesExpression="aql:self" domainClass="mIEC::Zone" childrenPresentation="List">
                <subNodeMappings name="targetSL" semanticCandidatesExpression="feature:target" domainClass="mIEC::SecurityLevels">
                  <style xsi:type="style:SquareDescription" labelSize="12" showIcon="false" labelExpression="aql:'[' + self.accessControl + ',' + self.useControl + ',' + self.systemIntegrity + ',' + self.dataConfidentiality + ',' + self.restrictedDataFlow + ',' + self.timelyResponse + ',' + self.resourceAvailability + ']'" tooltipExpression="aql:self.toString()" labelPosition="node" resizeKind="NSEW">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                  </style>
                </subNodeMappings>
                <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql:'Target Security Level:'">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                  <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </style>
              </subContainerMappings>
              <subContainerMappings name="Component" pasteDescriptions="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='pasteProperty'] //@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='pasteConstraint']" semanticCandidatesExpression="aql: if self.oclIsKindOf(mIEC::Zone) then self.components else self.devices endif" doubleClickDescription="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconfigureWithout']" domainClass="Component" childrenPresentation="VerticalStack">
                <subContainerMappings name="SLContainerComp" semanticCandidatesExpression="aql:self" doubleClickDescription="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconfigureWithout']" domainClass="mIEC::Component" childrenPresentation="List">
                  <subNodeMappings name="capabilitySLComp" semanticCandidatesExpression="feature:capability" domainClass="mIEC::SecurityLevels">
                    <style xsi:type="style:SquareDescription" labelSize="12" showIcon="false" labelExpression="aql:'capability [' + self.accessControl + ',' + self.useControl + ',' + self.systemIntegrity + ',' + self.dataConfidentiality + ',' + self.restrictedDataFlow + ',' + self.timelyResponse + ',' + self.resourceAvailability + ']'" tooltipExpression="aql:self.toString()" labelPosition="node" resizeKind="NSEW">
                      <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                    </style>
                  </subNodeMappings>
                  <subNodeMappings name="neededSLComp" semanticCandidatesExpression="feature:sLevelConstraint" domainClass="mIEC::SecurityLevels">
                    <style xsi:type="style:SquareDescription" labelSize="12" showIcon="false" labelExpression="aql:'needs [' + self.accessControl + ',' + self.useControl + ',' + self.systemIntegrity + ',' + self.dataConfidentiality + ',' + self.restrictedDataFlow + ',' + self.timelyResponse + ',' + self.resourceAvailability + ']'" tooltipExpression="aql:self.toString()" labelPosition="node" resizeKind="NSEW">
                      <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                    </style>
                  </subNodeMappings>
                  <subNodeMappings name="scoreFormula" semanticCandidatesExpression="feature:scoreExpr" domainClass="mIEC::NumberExpression">
                    <style xsi:type="style:BundledImageDescription" labelSize="12" showIcon="false" labelExpression="aql:'Score: ' + self.toString()" labelPosition="node" resizeKind="NSEW">
                      <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    </style>
                  </subNodeMappings>
                  <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql:'Security Level Capability:'">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                    <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                  </style>
                  <conditionnalStyles predicateExpression="aql: self.oclIsKindOf(mIEC::Application)">
                    <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql:'Capability security level, needed security level and score:'">
                      <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                      <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                    </style>
                  </conditionnalStyles>
                </subContainerMappings>
                <subContainerMappings name="Properties" pasteDescriptions="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='pasteProperty']" semanticCandidatesExpression="aql:self" doubleClickDescription="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconfigureWithout']" domainClass="mIEC::Component" childrenPresentation="VerticalStack">
                  <subContainerMappings name="Property" semanticCandidatesExpression="feature:properties" domainClass="mIEC::Property" childrenPresentation="List">
                    <subNodeMappings name="Value" semanticCandidatesExpression="feature:value" domainClass="mIEC::Value">
                      <style xsi:type="style:SquareDescription" labelSize="12" showIcon="false" labelExpression="aql:'value: ' + self.value" labelPosition="node" resizeKind="NSEW">
                        <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                      </style>
                    </subNodeMappings>
                    <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql:'name: ' +  self.name" heightComputationExpression="2">
                      <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                      <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
                    </style>
                    <conditionnalStyles predicateExpression="aql:self.name=='capacity'">
                      <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" labelExpression="aql:'name: ' +  self.name" iconPath="/MIEC.project.design/icons/capacity.png" heightComputationExpression="2">
                        <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_green']"/>
                        <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
                      </style>
                    </conditionnalStyles>
                    <conditionnalStyles predicateExpression="aql:self.name=='size'">
                      <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" labelExpression="aql:'name: ' +  self.name" iconPath="/MIEC.project.design/icons/size.png" heightComputationExpression="2">
                        <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_green']"/>
                        <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
                      </style>
                    </conditionnalStyles>
                  </subContainerMappings>
                  <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql:'properties'" iconPath="/MIEC.project.design/icons/attribute.png" widthComputationExpression="10">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                    <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                  </style>
                </subContainerMappings>
                <subContainerMappings name="ExecutedOn" semanticCandidatesExpression="aql:self" doubleClickDescription="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconfigureWithout']" domainClass="mIEC::Application">
                  <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql:'executed on ' + self.executedOn.name">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                    <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
                  </style>
                </subContainerMappings>
                <subContainerMappings name="Constraints" pasteDescriptions="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='pasteConstraint']" semanticCandidatesExpression="aql:self" domainClass="mIEC::Application" childrenPresentation="VerticalStack">
                  <subContainerMappings name="Constraint" semanticCandidatesExpression="feature:constraints" doubleClickDescription="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconfigureWithout']" domainClass="mIEC::Constraint" childrenPresentation="HorizontalStack">
                    <subContainerMappings name="operation" semanticCandidatesExpression="aql:self" domainClass="mIEC::OperationConstraint">
                      <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql:self.operation">
                        <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                        <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
                      </style>
                    </subContainerMappings>
                    <subContainerMappings name="valueOrRef" semanticCandidatesExpression="aql:self.value" domainClass="mIEC::ValueOrReference" childrenPresentation="List">
                      <subNodeMappings name="isValue" semanticCandidatesExpression="aql:self" domainClass="mIEC::Value">
                        <style xsi:type="style:SquareDescription" labelSize="12" showIcon="false" labelExpression="aql:'value: ' + self.value" labelPosition="node" resizeKind="NSEW">
                          <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                          <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                        </style>
                      </subNodeMappings>
                      <subNodeMappings name="isRef" semanticCandidatesExpression="aql:self" domainClass="mIEC::Reference">
                        <style xsi:type="style:SquareDescription" labelSize="12" showIcon="false" labelExpression="aql:'ref: ' + self.reference" labelPosition="node" resizeKind="NSEW">
                          <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                          <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                        </style>
                      </subNodeMappings>
                    </subContainerMappings>
                    <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql:'property name: ' +  self.propertyName">
                      <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                      <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
                    </style>
                    <conditionnalStyles predicateExpression="aql:self.optional">
                      <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql:'property name: ' +  self.propertyName">
                        <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
                        <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                      </style>
                    </conditionnalStyles>
                  </subContainerMappings>
                  <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql:'constraints'" iconPath="/MIEC.project.design/icons/requirement.png">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                    <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                  </style>
                </subContainerMappings>
                <subContainerMappings name="SystemComposition" pasteDescriptions="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='pasteComponentProperly']" semanticCandidatesExpression="aql:self" doubleClickDescription="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconfigureWithout']" domainClass="mIEC::System" reusedContainerMappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones']/@subContainerMappings[name='ZoneDescription']/@subContainerMappings[name='Component']" childrenPresentation="VerticalStack">
                  <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql:'Contains:'">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                    <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
                  </style>
                </subContainerMappings>
                <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql: if self.oclIsKindOf(mIEC::Device) then 'device ' else (if self.oclIsKindOf(mIEC::Application) then 'application ' else 'system ' endif) endif +   self.name">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                  <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
                </style>
                <conditionnalStyles predicateExpression="aql: self.oclIsKindOf(mIEC::Device)">
                  <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" labelExpression="aql: 'device ' + self.name" iconPath="/MIEC.project.design/icons/device.png">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                    <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
                  </style>
                </conditionnalStyles>
                <conditionnalStyles predicateExpression="aql: self.oclIsKindOf(mIEC::Application)">
                  <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" labelExpression="aql: 'application ' + self.name" iconPath="/MIEC.project.design/icons/application.png">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                    <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
                  </style>
                </conditionnalStyles>
                <conditionnalStyles predicateExpression="aql: self.oclIsKindOf(mIEC::System)">
                  <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" labelExpression="aql: 'system ' + self.name" iconPath="/MIEC.project.design/icons/system.png">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                    <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
                  </style>
                </conditionnalStyles>
              </subContainerMappings>
              <subContainerMappings name="Countermeasure" pasteDescriptions="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='pasteCountermeasure']" semanticCandidatesExpression="feature:countermeasures" domainClass="mIEC::CounterMeasure" childrenPresentation="VerticalStack">
                <subContainerMappings name="SLContainerCount" semanticCandidatesExpression="aql:self" domainClass="mIEC::CounterMeasure" childrenPresentation="List">
                  <subNodeMappings name="capabilitySLCount" semanticCandidatesExpression="feature:capability" domainClass="mIEC::SecurityLevels">
                    <style xsi:type="style:SquareDescription" labelSize="12" showIcon="false" labelExpression="aql:'[' + self.accessControl + ',' + self.useControl + ',' + self.systemIntegrity + ',' + self.dataConfidentiality + ',' + self.restrictedDataFlow + ',' + self.timelyResponse + ',' + self.resourceAvailability + ']'" tooltipExpression="aql:self.toString()" labelPosition="node" resizeKind="NSEW">
                      <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                    </style>
                  </subNodeMappings>
                  <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql:'Security Level Capability:'" hideLabelByDefault="true">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                    <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                  </style>
                </subContainerMappings>
                <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" iconPath="/MIEC.project.design/icons/countermeasure.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                  <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_red']"/>
                </style>
                <conditionnalStyles predicateExpression="aql:self.inactive">
                  <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" iconPath="/MIEC.project.design/icons/countermeasure.png">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                    <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
                  </style>
                </conditionnalStyles>
              </subContainerMappings>
              <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql:'Description:'">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
              </style>
            </subContainerMappings>
            <subContainerMappings name="PaddingZone" pasteDescriptions="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='pasteComponentProperly'] //@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='PasteZone']" semanticCandidatesExpression="aql:self" domainClass="mIEC::Zone" dropDescriptions="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='ComponentToZone'] //@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='DragDropZoneToZone']" childrenPresentation="HorizontalStack">
              <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="" hideLabelByDefault="true">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subContainerMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql:self.name + ' content'">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="3" labelSize="12" labelExpression="aql: 'zone ' + self.name" iconPath="/MIEC.project.design/icons/zone.png" roundedCorner="true">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='orange']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
          </style>
          <conditionnalStyles predicateExpression="aql:self. oclIsTypeOf(mIEC::Conduit)">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="3" labelSize="12" labelExpression="aql: 'conduit ' + self.name" iconPath="/MIEC.project.design/icons/connect.png" roundedCorner="true">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='purple']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
            </style>
          </conditionnalStyles>
        </containerMappings>
        <toolSections>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="createZoneInModel" precondition="aql:container.oclIsKindOf(mIEC::Model)" containerMappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']" iconPath="/MIEC.project.design/icons/zone_small.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::ClassicalZone" referenceName="zones">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="target"/>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="achieved"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'noname'"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="createConduitInModel" precondition="aql:container.oclIsKindOf(mIEC::Model)" containerMappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']" iconPath="/MIEC.project.design/icons/connect_small.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Conduit" referenceName="conduits">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="target"/>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="achieved"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'noname'"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="createConduitInZone" precondition="aql:container.oclIsKindOf(mIEC::ClassicalZone)" containerMappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']" iconPath="/MIEC.project.design/icons/connect_small.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Conduit" referenceName="subZones">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="target"/>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="achieved"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'noname'"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="createZoneInZone" precondition="aql:container.oclIsKindOf(mIEC::ClassicalZone)" containerMappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']" iconPath="/MIEC.project.design/icons/zone_small.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::ClassicalZone" referenceName="subZones">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="target"/>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="achieved"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'noname'"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="addApplication" precondition="aql:container.oclIsKindOf(mIEC::Zone)" forceRefresh="true" containerMappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones']/@subContainerMappings[name='ZoneDescription']/@subContainerMappings[name='Component']" iconPath="/MIEC.project.design/icons/application_small.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Application" referenceName="components">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'noName'"/>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability"/>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="sLevelConstraint">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql:SLEC::SecurityLevel::SL0"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql:SLEC::SecurityLevel::SL0"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql:SLEC::SecurityLevel::SL0"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql:SLEC::SecurityLevel::SL0"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql:SLEC::SecurityLevel::SL0"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql:SLEC::SecurityLevel::SL0"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql:SLEC::SecurityLevel::SL0"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="scoreExpr">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="1"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="addDeviceToZone" precondition="aql:container.oclIsKindOf(mIEC::Zone)" forceRefresh="true" containerMappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones']/@subContainerMappings[name='ZoneDescription']/@subContainerMappings[name='Component']" iconPath="/MIEC.project.design/icons/device_small.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Device" referenceName="components">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'noName'"/>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="addSystem" precondition="aql:container.oclIsKindOf(mIEC::Zone)" forceRefresh="true" containerMappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones']/@subContainerMappings[name='ZoneDescription']/@subContainerMappings[name='Component']" iconPath="/MIEC.project.design/icons/system_small.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::System" referenceName="components">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'noName'"/>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="addDeviceToSystem" precondition="aql:container.oclIsKindOf(mIEC::Component)" forceRefresh="true" containerMappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones']/@subContainerMappings[name='ZoneDescription']/@subContainerMappings[name='Component']" iconPath="/MIEC.project.design/icons/device_small.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Device" referenceName="devices">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'noName'"/>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="addProperty" containerMappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones']/@subContainerMappings[name='ZoneDescription']/@subContainerMappings[name='Component']/@subContainerMappings[name='Properties']/@subContainerMappings[name='Property']" iconPath="/MIEC.project.design/icons/attribute_small.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Property" referenceName="properties">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'noName'"/>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:''"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="newBoolValue" nodeMappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones']/@subContainerMappings[name='ZoneDescription']/@subContainerMappings[name='Component']/@subContainerMappings[name='Properties']/@subContainerMappings[name='Property']/@subNodeMappings[name='Value']" iconPath="/MIEC.project.design/icons/bool_small.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.value">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:true"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="newIntValue" nodeMappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones']/@subContainerMappings[name='ZoneDescription']/@subContainerMappings[name='Component']/@subContainerMappings[name='Properties']/@subContainerMappings[name='Property']/@subNodeMappings[name='Value']" iconPath="/MIEC.project.design/icons/integer_small.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.value">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:0"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="newFloatValue" nodeMappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones']/@subContainerMappings[name='ZoneDescription']/@subContainerMappings[name='Component']/@subContainerMappings[name='Properties']/@subContainerMappings[name='Property']/@subNodeMappings[name='Value']" iconPath="/MIEC.project.design/icons/decimal_small.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.value">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="newStringValue" nodeMappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones']/@subContainerMappings[name='ZoneDescription']/@subContainerMappings[name='Component']/@subContainerMappings[name='Properties']/@subContainerMappings[name='Property']/@subNodeMappings[name='Value']" iconPath="/MIEC.project.design/icons/string_small.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.value">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:''"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="addPresenceConstraint" containerMappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones']/@subContainerMappings[name='ZoneDescription']/@subContainerMappings[name='Component']/@subContainerMappings[name='Constraints']/@subContainerMappings[name='Constraint']" iconPath="/MIEC.project.design/icons/requirement_small.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::PresenceConstraint" referenceName="constraints">
                  <subModelOperations xsi:type="tool_1:SetValue"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="addValueConstraint" containerMappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones']/@subContainerMappings[name='ZoneDescription']/@subContainerMappings[name='Component']/@subContainerMappings[name='Constraints']/@subContainerMappings[name='Constraint']" iconPath="/MIEC.project.design/icons/requirement_small.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::OperationConstraint" referenceName="constraints">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:''"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="newBoolValueCs" containerMappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones']/@subContainerMappings[name='ZoneDescription']/@subContainerMappings[name='Component']/@subContainerMappings[name='Constraints']/@subContainerMappings[name='Constraint']/@subContainerMappings[name='valueOrRef']" iconPath="/MIEC.project.design/icons/bool_small.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.value">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:true"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="newIntValueCs" containerMappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones']/@subContainerMappings[name='ZoneDescription']/@subContainerMappings[name='Component']/@subContainerMappings[name='Constraints']/@subContainerMappings[name='Constraint']/@subContainerMappings[name='valueOrRef']" iconPath="/MIEC.project.design/icons/integer_small.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.value">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="newFloatValueCs" containerMappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones']/@subContainerMappings[name='ZoneDescription']/@subContainerMappings[name='Component']/@subContainerMappings[name='Constraints']/@subContainerMappings[name='Constraint']/@subContainerMappings[name='valueOrRef']" iconPath="/MIEC.project.design/icons/decimal_small.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.value">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="newStringValueCs" containerMappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones']/@subContainerMappings[name='ZoneDescription']/@subContainerMappings[name='Component']/@subContainerMappings[name='Constraints']/@subContainerMappings[name='Constraint']/@subContainerMappings[name='valueOrRef']" iconPath="/MIEC.project.design/icons/string_small.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.value">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:''"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="DragDropZoneToModel" forceRefresh="true" mappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']" dragSource="BOTH">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:oldSemanticContainer">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(mIEC::ClassicalZone)">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="subZones" elementExpression="var:element"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newSemanticContainer">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(mIEC::Model)">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.oclIsKindOf(mIEC::Conduit)">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="conduits" valueExpression="var:element"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.oclIsKindOf(mIEC::ClassicalZone)">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="zones" valueExpression="var:element"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="DragDropZoneToZone" precondition="aql:container.oclIsKindOf(mIEC::ClassicalZone)" forceRefresh="true" mappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone'] //@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='PaddingZone'] //@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones'] //@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones']/@subContainerMappings[name='ZoneDescription']" dragSource="BOTH">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:oldSemanticContainer">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(mIEC::ClassicalZone)">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="subZones" elementExpression="var:element"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(mIEC::Model)">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.oclIsKindOf(mIEC::Conduit)">
                    <subModelOperations xsi:type="tool_1:Unset" featureName="conduits" elementExpression="var:element"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.oclIsKindOf(mIEC::ClassicalZone)">
                    <subModelOperations xsi:type="tool_1:Unset" featureName="zones" elementExpression="var:element"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newSemanticContainer">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(mIEC::ClassicalZone)">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="subZones" valueExpression="var:element"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="ComponentToZone" forceRefresh="true" mappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones']/@subContainerMappings[name='ZoneDescription']/@subContainerMappings[name='Component']" dragSource="BOTH">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:oldSemanticContainer">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(mIEC::Zone)">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="components" elementExpression="var:element"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(mIEC::System)">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="devices" elementExpression="var:element"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newSemanticContainer">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(mIEC::Zone)">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="components" valueExpression="var:element"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="AddConnection" precondition="aql:preTarget.oclIsKindOf(mIEC::ClassicalZone) and preSource.oclIsKindOf(mIEC::Conduit) and preSource.connects != preTarget" edgeMappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@edgeMappings[name='Conduit']" connectionStartPrecondition="aql:preSource.oclIsKindOf(mIEC::Conduit)">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(mIEC::Conduit)">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="connects" valueExpression="var:target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="deleteConnection">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(mIEC::Conduit)">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="connects" elementExpression="aql:elementView.targetNode.target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="addCounterMeasure" precondition="aql:container.oclIsKindOf(mIEC::Zone)" forceRefresh="true" containerMappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones']/@subContainerMappings[name='ZoneDescription']/@subContainerMappings[name='Countermeasure']" iconPath="/MIEC.project.design/icons/countermeasure_small.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::CounterMeasure" referenceName="countermeasures">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'noName'"/>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:PasteDescription" name="pasteProperty" forceRefresh="true">
            <container name="container"/>
            <containerView name="containerView"/>
            <copiedView name="copiedView"/>
            <copiedElement name="copiedElement"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(mIEC::Component) and copiedElement.oclIsKindOf(mIEC::Property)">
                  <subModelOperations xsi:type="tool_1:Let" variableName="prop" valueExpression="var:copiedElement"/>
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Property" referenceName="properties">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:prop.name"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:prop.value"/>
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                        </subModelOperations>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                        </subModelOperations>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                        </subModelOperations>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:PasteDescription" name="pasteComponentProperly" precondition="aql:copiedElement.oclIsKindOf(mIEC::Component)" forceRefresh="true">
            <container name="container"/>
            <containerView name="containerView"/>
            <copiedView name="copiedView"/>
            <copiedElement name="copiedElement"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:copiedElement.oclIsKindOf(mIEC::Component)">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mIEC::Zone)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:copiedElement.oclIsKindOf(mIEC::Device)">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Device" referenceName="components">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:copiedElement.name"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="embedded" valueExpression="aql:copiedElement.embedded"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="host" valueExpression="aql:copiedElement.host"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="network" valueExpression="aql:copiedElement.network"/>
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability" variableName="instance2">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.capability.accessControl"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.capability.useControl"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.capability.systemIntegrity"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.capability.dataConfidentiality"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.capability.restrictedDataFlow"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.capability.timelyResponse"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.capability.resourceAvailability"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.properties" iteratorName="prop">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Property" referenceName="properties">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:prop.name"/>
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:prop.value"/>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="properties:WizardModelOperation"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:copiedElement.oclIsKindOf(mIEC::System)">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::System" referenceName="components">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:copiedElement.name"/>
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability" variableName="instance2">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.capability.accessControl"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.capability.useControl"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.capability.systemIntegrity"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.capability.dataConfidentiality"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.capability.restrictedDataFlow"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.capability.timelyResponse"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.capability.resourceAvailability"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.properties" iteratorName="prop">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Property" referenceName="properties">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:prop.name"/>
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:prop.value"/>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.devices" iteratorName="device">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Device" referenceName="devices">
                              <subModelOperations xsi:type="tool_1:Let" variableName="copiedElement" valueExpression="var:device"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:copiedElement.name"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="embedded" valueExpression="aql:copiedElement.embedded"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="host" valueExpression="aql:copiedElement.host"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="network" valueExpression="aql:copiedElement.network"/>
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.capability.accessControl"/>
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.capability.useControl"/>
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.capability.systemIntegrity"/>
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.capability.dataConfidentiality"/>
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.capability.restrictedDataFlow"/>
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.capability.timelyResponse"/>
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.capability.resourceAvailability"/>
                                </subModelOperations>
                              </subModelOperations>
                              <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.properties" iteratorName="prop">
                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Property" referenceName="properties">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:prop.name"/>
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                      <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:prop.value"/>
                                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                        </subModelOperations>
                                      </subModelOperations>
                                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                        </subModelOperations>
                                      </subModelOperations>
                                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                        </subModelOperations>
                                      </subModelOperations>
                                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                        </subModelOperations>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:copiedElement.oclIsKindOf(mIEC::Application)">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Application" referenceName="components">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:copiedElement.name"/>
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability" variableName="instance2">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.capability.accessControl"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.capability.useControl"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.capability.systemIntegrity"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.capability.dataConfidentiality"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.capability.restrictedDataFlow"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.capability.timelyResponse"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.capability.resourceAvailability"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.properties" iteratorName="prop">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Property" referenceName="properties">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:prop.name"/>
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:prop.value"/>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.constraints" iteratorName="constraint">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.oclIsKindOf(mIEC::OperationConstraint)">
                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::OperationConstraint" referenceName="constraints">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="propertyName" valueExpression="aql:constraint.propertyName"/>
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="optional" valueExpression="aql:constraint.optional"/>
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="operation" valueExpression="aql:constraint.operation"/>
                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.value.oclIsKindOf(mIEC::Reference)">
                                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.value.oclIsKindOf(mIEC::SelfReference)">
                                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SelfReference" referenceName="value">
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="reference" valueExpression="aql:constraint.value.reference"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.value.oclIsKindOf(mIEC::DeviceReference)">
                                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::DeviceReference" referenceName="value">
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="reference" valueExpression="aql:constraint.value.reference"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.value.oclIsKindOf(mIEC::Value)">
                                    <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:constraint.value"/>
                                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.oclIsKindOf(mIEC::PresenceConstraint)">
                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::PresenceConstraint" referenceName="constraints">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="propertyName" valueExpression="aql:constraint.propertyName"/>
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="optional" valueExpression="aql:constraint.optional"/>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mIEC::System) and copiedElement.oclIsKindOf(mIEC::Device)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Device" referenceName="devices">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:copiedElement.name"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="embedded" valueExpression="aql:copiedElement.embedded"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="host" valueExpression="aql:copiedElement.host"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="network" valueExpression="aql:copiedElement.network"/>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability" variableName="instance2">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.capability.accessControl"/>
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.capability.useControl"/>
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.capability.systemIntegrity"/>
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.capability.dataConfidentiality"/>
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.capability.restrictedDataFlow"/>
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.capability.timelyResponse"/>
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.capability.resourceAvailability"/>
                        </subModelOperations>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.properties" iteratorName="prop">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Property" referenceName="properties">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:prop.name"/>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                              <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:prop.value"/>
                              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                </subModelOperations>
                              </subModelOperations>
                              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                </subModelOperations>
                              </subModelOperations>
                              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                </subModelOperations>
                              </subModelOperations>
                              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:PasteDescription" name="pasteConstraint" precondition="aql:container.oclIsKindOf(mIEC::Application)" forceRefresh="true">
            <container name="container"/>
            <containerView name="containerView"/>
            <copiedView name="copiedView"/>
            <copiedElement name="copiedElement"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mIEC::Application) and copiedElement.oclIsKindOf(mIEC::Constraint)">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:Let" variableName="constraint" valueExpression="var:copiedElement">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.oclIsKindOf(mIEC::OperationConstraint)">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::OperationConstraint" referenceName="constraints">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="propertyName" valueExpression="aql:constraint.propertyName"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="optional" valueExpression="aql:constraint.optional"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="operation" valueExpression="aql:constraint.operation"/>
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.value.oclIsKindOf(mIEC::Reference)">
                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.value.oclIsKindOf(mIEC::SelfReference)">
                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SelfReference" referenceName="value">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="reference" valueExpression="aql:constraint.value.reference"/>
                              </subModelOperations>
                            </subModelOperations>
                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.value.oclIsKindOf(mIEC::DeviceReference)">
                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::DeviceReference" referenceName="value">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="reference" valueExpression="aql:constraint.value.reference"/>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.value.oclIsKindOf(mIEC::Value)">
                            <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:constraint.value"/>
                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                              </subModelOperations>
                            </subModelOperations>
                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                              </subModelOperations>
                            </subModelOperations>
                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                              </subModelOperations>
                            </subModelOperations>
                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.oclIsKindOf(mIEC::PresenceConstraint)">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::PresenceConstraint" referenceName="constraints">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="propertyName" valueExpression="aql:constraint.propertyName"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="optional" valueExpression="aql:constraint.optional"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:PasteDescription" name="pasteCountermeasure" precondition="aql:copiedElement.oclIsKindOf(mIEC::CounterMeasure)" forceRefresh="true">
            <container name="container"/>
            <containerView name="containerView"/>
            <copiedView name="copiedView"/>
            <copiedElement name="copiedElement"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(mIEC::Zone) and copiedElement.oclIsKindOf(mIEC::CounterMeasure)">
                  <subModelOperations xsi:type="tool_1:Let" variableName="cnt" valueExpression="var:copiedElement"/>
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::CounterMeasure" referenceName="countermeasures">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:cnt.name"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability" variableName="instance2">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.capability.accessControl"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.capability.useControl"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.capability.systemIntegrity"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.capability.dataConfidentiality"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.capability.restrictedDataFlow"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.capability.timelyResponse"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.capability.resourceAvailability"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:PasteDescription" name="PasteZone" precondition="aql:(container.oclIsKindOf(mIEC::Model) or container.oclIsKindOf(mIEC::ClassicalZone)) and copiedElement.oclIsKindOf(mIEC::Zone)" forceRefresh="true">
            <container name="container"/>
            <containerView name="containerView"/>
            <copiedView name="copiedView"/>
            <copiedElement name="copiedElement"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:copiedElement.oclIsKindOf(mIEC::Zone)">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mIEC::Model)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:copiedElement.oclIsKindOf(mIEC::ClassicalZone)">
                      <subModelOperations xsi:type="tool_1:Let" variableName="toCopy" valueExpression="aql:copiedElement">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::ClassicalZone" referenceName="zones" variableName="instance3">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:copiedElement.name"/>
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="trusted" valueExpression="aql:copiedElement.trusted"/>
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="physical" valueExpression="aql:copiedElement.physical"/>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance3">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="target" variableName="instance2">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.target.accessControl"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.target.useControl"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.target.systemIntegrity"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.target.dataConfidentiality"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.target.restrictedDataFlow"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.target.timelyResponse"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.target.resourceAvailability"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:For" expression="aql:toCopy.components" iteratorName="comp">
                            <subModelOperations xsi:type="tool_1:Let" variableName="copiedElement" valueExpression="aql:comp">
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance3">
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:copiedElement.oclIsKindOf(mIEC::Device)">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Device" referenceName="components">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:copiedElement.name"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="embedded" valueExpression="aql:copiedElement.embedded"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="host" valueExpression="aql:copiedElement.host"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="network" valueExpression="aql:copiedElement.network"/>
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability" variableName="instance2">
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.capability.accessControl"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.capability.useControl"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.capability.systemIntegrity"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.capability.dataConfidentiality"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.capability.restrictedDataFlow"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.capability.timelyResponse"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.capability.resourceAvailability"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                    <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.properties" iteratorName="prop">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Property" referenceName="properties">
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:prop.name"/>
                                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                            <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:prop.value"/>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                          </subModelOperations>
                                        </subModelOperations>
                                      </subModelOperations>
                                      <subModelOperations xsi:type="properties:WizardModelOperation"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:copiedElement.oclIsKindOf(mIEC::System)">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::System" referenceName="components">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:copiedElement.name"/>
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability" variableName="instance2">
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.capability.accessControl"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.capability.useControl"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.capability.systemIntegrity"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.capability.dataConfidentiality"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.capability.restrictedDataFlow"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.capability.timelyResponse"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.capability.resourceAvailability"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                    <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.properties" iteratorName="prop">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Property" referenceName="properties">
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:prop.name"/>
                                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                            <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:prop.value"/>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                          </subModelOperations>
                                        </subModelOperations>
                                      </subModelOperations>
                                    </subModelOperations>
                                    <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.devices" iteratorName="device">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Device" referenceName="devices">
                                          <subModelOperations xsi:type="tool_1:Let" variableName="copiedElement" valueExpression="var:device"/>
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:copiedElement.name"/>
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="embedded" valueExpression="aql:copiedElement.embedded"/>
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="host" valueExpression="aql:copiedElement.host"/>
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="network" valueExpression="aql:copiedElement.network"/>
                                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability">
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.capability.accessControl"/>
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.capability.useControl"/>
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.capability.systemIntegrity"/>
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.capability.dataConfidentiality"/>
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.capability.restrictedDataFlow"/>
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.capability.timelyResponse"/>
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.capability.resourceAvailability"/>
                                            </subModelOperations>
                                          </subModelOperations>
                                          <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.properties" iteratorName="prop">
                                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Property" referenceName="properties">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:prop.name"/>
                                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                                  <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:prop.value"/>
                                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                                                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                    </subModelOperations>
                                                  </subModelOperations>
                                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                                                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                    </subModelOperations>
                                                  </subModelOperations>
                                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                                                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                    </subModelOperations>
                                                  </subModelOperations>
                                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                                                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                    </subModelOperations>
                                                  </subModelOperations>
                                                </subModelOperations>
                                              </subModelOperations>
                                            </subModelOperations>
                                          </subModelOperations>
                                        </subModelOperations>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:copiedElement.oclIsKindOf(mIEC::Application)">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Application" referenceName="components">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:copiedElement.name"/>
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability" variableName="instance2">
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.capability.accessControl"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.capability.useControl"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.capability.systemIntegrity"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.capability.dataConfidentiality"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.capability.restrictedDataFlow"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.capability.timelyResponse"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.capability.resourceAvailability"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                    <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.properties" iteratorName="prop">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Property" referenceName="properties">
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:prop.name"/>
                                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                            <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:prop.value"/>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                          </subModelOperations>
                                        </subModelOperations>
                                      </subModelOperations>
                                    </subModelOperations>
                                    <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.constraints" iteratorName="constraint">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.oclIsKindOf(mIEC::OperationConstraint)">
                                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::OperationConstraint" referenceName="constraints">
                                            <subModelOperations xsi:type="tool_1:SetValue" featureName="propertyName" valueExpression="aql:constraint.propertyName"/>
                                            <subModelOperations xsi:type="tool_1:SetValue" featureName="optional" valueExpression="aql:constraint.optional"/>
                                            <subModelOperations xsi:type="tool_1:SetValue" featureName="operation" valueExpression="aql:constraint.operation"/>
                                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.value.oclIsKindOf(mIEC::Reference)">
                                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.value.oclIsKindOf(mIEC::SelfReference)">
                                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SelfReference" referenceName="value">
                                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="reference" valueExpression="aql:constraint.value.reference"/>
                                                  </subModelOperations>
                                                </subModelOperations>
                                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.value.oclIsKindOf(mIEC::DeviceReference)">
                                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::DeviceReference" referenceName="value">
                                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="reference" valueExpression="aql:constraint.value.reference"/>
                                                  </subModelOperations>
                                                </subModelOperations>
                                              </subModelOperations>
                                              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.value.oclIsKindOf(mIEC::Value)">
                                                <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:constraint.value"/>
                                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                  </subModelOperations>
                                                </subModelOperations>
                                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                  </subModelOperations>
                                                </subModelOperations>
                                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                  </subModelOperations>
                                                </subModelOperations>
                                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                  </subModelOperations>
                                                </subModelOperations>
                                              </subModelOperations>
                                            </subModelOperations>
                                          </subModelOperations>
                                        </subModelOperations>
                                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.oclIsKindOf(mIEC::PresenceConstraint)">
                                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::PresenceConstraint" referenceName="constraints">
                                            <subModelOperations xsi:type="tool_1:SetValue" featureName="propertyName" valueExpression="aql:constraint.propertyName"/>
                                            <subModelOperations xsi:type="tool_1:SetValue" featureName="optional" valueExpression="aql:constraint.optional"/>
                                          </subModelOperations>
                                        </subModelOperations>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:For" expression="aql:toCopy.countermeasures" iteratorName="cnt">
                            <subModelOperations xsi:type="tool_1:Let" variableName="copiedElement" valueExpression="aql:cnt">
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance3">
                                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::CounterMeasure" referenceName="countermeasures">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:cnt.name"/>
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability" variableName="instance2">
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.capability.accessControl"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.capability.useControl"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.capability.systemIntegrity"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.capability.dataConfidentiality"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.capability.restrictedDataFlow"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.capability.timelyResponse"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.capability.resourceAvailability"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:copiedElement.oclIsKindOf(mIEC::Conduit)">
                      <subModelOperations xsi:type="tool_1:Let" variableName="toCopy" valueExpression="aql:copiedElement">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Conduit" referenceName="conduits" variableName="instance3">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:copiedElement.name"/>
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="trusted" valueExpression="aql:copiedElement.trusted"/>
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="physical" valueExpression="aql:copiedElement.physical"/>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance3">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="target" variableName="instance2">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.target.accessControl"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.target.useControl"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.target.systemIntegrity"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.target.dataConfidentiality"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.target.restrictedDataFlow"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.target.timelyResponse"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.target.resourceAvailability"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:For" expression="aql:toCopy.components" iteratorName="comp">
                            <subModelOperations xsi:type="tool_1:Let" variableName="copiedElement" valueExpression="aql:comp">
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance3">
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:copiedElement.oclIsKindOf(mIEC::Device)">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Device" referenceName="components">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:copiedElement.name"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="embedded" valueExpression="aql:copiedElement.embedded"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="host" valueExpression="aql:copiedElement.host"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="network" valueExpression="aql:copiedElement.network"/>
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability" variableName="instance2">
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.capability.accessControl"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.capability.useControl"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.capability.systemIntegrity"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.capability.dataConfidentiality"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.capability.restrictedDataFlow"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.capability.timelyResponse"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.capability.resourceAvailability"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                    <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.properties" iteratorName="prop">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Property" referenceName="properties">
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:prop.name"/>
                                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                            <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:prop.value"/>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                          </subModelOperations>
                                        </subModelOperations>
                                      </subModelOperations>
                                      <subModelOperations xsi:type="properties:WizardModelOperation"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:copiedElement.oclIsKindOf(mIEC::System)">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::System" referenceName="components">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:copiedElement.name"/>
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability" variableName="instance2">
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.capability.accessControl"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.capability.useControl"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.capability.systemIntegrity"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.capability.dataConfidentiality"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.capability.restrictedDataFlow"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.capability.timelyResponse"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.capability.resourceAvailability"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                    <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.properties" iteratorName="prop">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Property" referenceName="properties">
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:prop.name"/>
                                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                            <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:prop.value"/>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                          </subModelOperations>
                                        </subModelOperations>
                                      </subModelOperations>
                                    </subModelOperations>
                                    <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.devices" iteratorName="device">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Device" referenceName="devices">
                                          <subModelOperations xsi:type="tool_1:Let" variableName="copiedElement" valueExpression="var:device"/>
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:copiedElement.name"/>
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="embedded" valueExpression="aql:copiedElement.embedded"/>
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="host" valueExpression="aql:copiedElement.host"/>
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="network" valueExpression="aql:copiedElement.network"/>
                                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability">
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.capability.accessControl"/>
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.capability.useControl"/>
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.capability.systemIntegrity"/>
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.capability.dataConfidentiality"/>
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.capability.restrictedDataFlow"/>
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.capability.timelyResponse"/>
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.capability.resourceAvailability"/>
                                            </subModelOperations>
                                          </subModelOperations>
                                          <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.properties" iteratorName="prop">
                                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Property" referenceName="properties">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:prop.name"/>
                                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                                  <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:prop.value"/>
                                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                                                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                    </subModelOperations>
                                                  </subModelOperations>
                                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                                                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                    </subModelOperations>
                                                  </subModelOperations>
                                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                                                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                    </subModelOperations>
                                                  </subModelOperations>
                                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                                                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                    </subModelOperations>
                                                  </subModelOperations>
                                                </subModelOperations>
                                              </subModelOperations>
                                            </subModelOperations>
                                          </subModelOperations>
                                        </subModelOperations>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:copiedElement.oclIsKindOf(mIEC::Application)">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Application" referenceName="components">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:copiedElement.name"/>
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability" variableName="instance2">
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.capability.accessControl"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.capability.useControl"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.capability.systemIntegrity"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.capability.dataConfidentiality"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.capability.restrictedDataFlow"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.capability.timelyResponse"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.capability.resourceAvailability"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                    <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.properties" iteratorName="prop">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Property" referenceName="properties">
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:prop.name"/>
                                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                            <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:prop.value"/>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                          </subModelOperations>
                                        </subModelOperations>
                                      </subModelOperations>
                                    </subModelOperations>
                                    <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.constraints" iteratorName="constraint">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.oclIsKindOf(mIEC::OperationConstraint)">
                                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::OperationConstraint" referenceName="constraints">
                                            <subModelOperations xsi:type="tool_1:SetValue" featureName="propertyName" valueExpression="aql:constraint.propertyName"/>
                                            <subModelOperations xsi:type="tool_1:SetValue" featureName="optional" valueExpression="aql:constraint.optional"/>
                                            <subModelOperations xsi:type="tool_1:SetValue" featureName="operation" valueExpression="aql:constraint.operation"/>
                                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.value.oclIsKindOf(mIEC::Reference)">
                                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.value.oclIsKindOf(mIEC::SelfReference)">
                                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SelfReference" referenceName="value">
                                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="reference" valueExpression="aql:constraint.value.reference"/>
                                                  </subModelOperations>
                                                </subModelOperations>
                                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.value.oclIsKindOf(mIEC::DeviceReference)">
                                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::DeviceReference" referenceName="value">
                                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="reference" valueExpression="aql:constraint.value.reference"/>
                                                  </subModelOperations>
                                                </subModelOperations>
                                              </subModelOperations>
                                              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.value.oclIsKindOf(mIEC::Value)">
                                                <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:constraint.value"/>
                                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                  </subModelOperations>
                                                </subModelOperations>
                                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                  </subModelOperations>
                                                </subModelOperations>
                                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                  </subModelOperations>
                                                </subModelOperations>
                                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                  </subModelOperations>
                                                </subModelOperations>
                                              </subModelOperations>
                                            </subModelOperations>
                                          </subModelOperations>
                                        </subModelOperations>
                                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.oclIsKindOf(mIEC::PresenceConstraint)">
                                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::PresenceConstraint" referenceName="constraints">
                                            <subModelOperations xsi:type="tool_1:SetValue" featureName="propertyName" valueExpression="aql:constraint.propertyName"/>
                                            <subModelOperations xsi:type="tool_1:SetValue" featureName="optional" valueExpression="aql:constraint.optional"/>
                                          </subModelOperations>
                                        </subModelOperations>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:For" expression="aql:toCopy.countermeasures" iteratorName="cnt">
                            <subModelOperations xsi:type="tool_1:Let" variableName="copiedElement" valueExpression="aql:cnt">
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance3">
                                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::CounterMeasure" referenceName="countermeasures">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:cnt.name"/>
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability" variableName="instance2">
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.capability.accessControl"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.capability.useControl"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.capability.systemIntegrity"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.capability.dataConfidentiality"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.capability.restrictedDataFlow"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.capability.timelyResponse"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.capability.resourceAvailability"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsKindOf(mIEC::ClassicalZone)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:copiedElement.oclIsKindOf(mIEC::ClassicalZone)">
                      <subModelOperations xsi:type="tool_1:Let" variableName="toCopy" valueExpression="aql:copiedElement">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::ClassicalZone" referenceName="subZones" variableName="instance3">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:copiedElement.name"/>
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="trusted" valueExpression="aql:copiedElement.trusted"/>
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="physical" valueExpression="aql:copiedElement.physical"/>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance3">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="target" variableName="instance2">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.target.accessControl"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.target.useControl"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.target.systemIntegrity"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.target.dataConfidentiality"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.target.restrictedDataFlow"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.target.timelyResponse"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.target.resourceAvailability"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:For" expression="aql:toCopy.components" iteratorName="comp">
                            <subModelOperations xsi:type="tool_1:Let" variableName="copiedElement" valueExpression="aql:comp">
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance3">
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:copiedElement.oclIsKindOf(mIEC::Device)">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Device" referenceName="components">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:copiedElement.name"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="embedded" valueExpression="aql:copiedElement.embedded"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="host" valueExpression="aql:copiedElement.host"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="network" valueExpression="aql:copiedElement.network"/>
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability" variableName="instance2">
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.capability.accessControl"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.capability.useControl"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.capability.systemIntegrity"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.capability.dataConfidentiality"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.capability.restrictedDataFlow"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.capability.timelyResponse"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.capability.resourceAvailability"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                    <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.properties" iteratorName="prop">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Property" referenceName="properties">
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:prop.name"/>
                                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                            <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:prop.value"/>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                          </subModelOperations>
                                        </subModelOperations>
                                      </subModelOperations>
                                      <subModelOperations xsi:type="properties:WizardModelOperation"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:copiedElement.oclIsKindOf(mIEC::System)">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::System" referenceName="components">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:copiedElement.name"/>
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability" variableName="instance2">
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.capability.accessControl"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.capability.useControl"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.capability.systemIntegrity"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.capability.dataConfidentiality"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.capability.restrictedDataFlow"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.capability.timelyResponse"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.capability.resourceAvailability"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                    <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.properties" iteratorName="prop">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Property" referenceName="properties">
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:prop.name"/>
                                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                            <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:prop.value"/>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                          </subModelOperations>
                                        </subModelOperations>
                                      </subModelOperations>
                                    </subModelOperations>
                                    <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.devices" iteratorName="device">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Device" referenceName="devices">
                                          <subModelOperations xsi:type="tool_1:Let" variableName="copiedElement" valueExpression="var:device"/>
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:copiedElement.name"/>
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="embedded" valueExpression="aql:copiedElement.embedded"/>
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="host" valueExpression="aql:copiedElement.host"/>
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="network" valueExpression="aql:copiedElement.network"/>
                                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability">
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.capability.accessControl"/>
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.capability.useControl"/>
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.capability.systemIntegrity"/>
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.capability.dataConfidentiality"/>
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.capability.restrictedDataFlow"/>
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.capability.timelyResponse"/>
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.capability.resourceAvailability"/>
                                            </subModelOperations>
                                          </subModelOperations>
                                          <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.properties" iteratorName="prop">
                                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Property" referenceName="properties">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:prop.name"/>
                                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                                  <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:prop.value"/>
                                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                                                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                    </subModelOperations>
                                                  </subModelOperations>
                                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                                                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                    </subModelOperations>
                                                  </subModelOperations>
                                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                                                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                    </subModelOperations>
                                                  </subModelOperations>
                                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                                                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                    </subModelOperations>
                                                  </subModelOperations>
                                                </subModelOperations>
                                              </subModelOperations>
                                            </subModelOperations>
                                          </subModelOperations>
                                        </subModelOperations>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:copiedElement.oclIsKindOf(mIEC::Application)">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Application" referenceName="components">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:copiedElement.name"/>
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability" variableName="instance2">
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.capability.accessControl"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.capability.useControl"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.capability.systemIntegrity"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.capability.dataConfidentiality"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.capability.restrictedDataFlow"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.capability.timelyResponse"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.capability.resourceAvailability"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                    <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.properties" iteratorName="prop">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Property" referenceName="properties">
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:prop.name"/>
                                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                            <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:prop.value"/>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                          </subModelOperations>
                                        </subModelOperations>
                                      </subModelOperations>
                                    </subModelOperations>
                                    <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.constraints" iteratorName="constraint">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.oclIsKindOf(mIEC::OperationConstraint)">
                                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::OperationConstraint" referenceName="constraints">
                                            <subModelOperations xsi:type="tool_1:SetValue" featureName="propertyName" valueExpression="aql:constraint.propertyName"/>
                                            <subModelOperations xsi:type="tool_1:SetValue" featureName="optional" valueExpression="aql:constraint.optional"/>
                                            <subModelOperations xsi:type="tool_1:SetValue" featureName="operation" valueExpression="aql:constraint.operation"/>
                                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.value.oclIsKindOf(mIEC::Reference)">
                                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.value.oclIsKindOf(mIEC::SelfReference)">
                                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SelfReference" referenceName="value">
                                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="reference" valueExpression="aql:constraint.value.reference"/>
                                                  </subModelOperations>
                                                </subModelOperations>
                                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.value.oclIsKindOf(mIEC::DeviceReference)">
                                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::DeviceReference" referenceName="value">
                                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="reference" valueExpression="aql:constraint.value.reference"/>
                                                  </subModelOperations>
                                                </subModelOperations>
                                              </subModelOperations>
                                              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.value.oclIsKindOf(mIEC::Value)">
                                                <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:constraint.value"/>
                                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                  </subModelOperations>
                                                </subModelOperations>
                                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                  </subModelOperations>
                                                </subModelOperations>
                                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                  </subModelOperations>
                                                </subModelOperations>
                                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                  </subModelOperations>
                                                </subModelOperations>
                                              </subModelOperations>
                                            </subModelOperations>
                                          </subModelOperations>
                                        </subModelOperations>
                                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.oclIsKindOf(mIEC::PresenceConstraint)">
                                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::PresenceConstraint" referenceName="constraints">
                                            <subModelOperations xsi:type="tool_1:SetValue" featureName="propertyName" valueExpression="aql:constraint.propertyName"/>
                                            <subModelOperations xsi:type="tool_1:SetValue" featureName="optional" valueExpression="aql:constraint.optional"/>
                                          </subModelOperations>
                                        </subModelOperations>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:For" expression="aql:toCopy.countermeasures" iteratorName="cnt">
                            <subModelOperations xsi:type="tool_1:Let" variableName="copiedElement" valueExpression="aql:cnt">
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance3">
                                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::CounterMeasure" referenceName="countermeasures">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:cnt.name"/>
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability" variableName="instance2">
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.capability.accessControl"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.capability.useControl"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.capability.systemIntegrity"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.capability.dataConfidentiality"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.capability.restrictedDataFlow"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.capability.timelyResponse"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.capability.resourceAvailability"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="New Dialog">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                          <initialOperation/>
                        </buttons>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation/>
                        </buttons>
                        <page name="Default Page" labelExpression="Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@toolSections.0/@ownedTools[name='PasteZone']/@initialOperation/@firstModelOperations/@subModelOperations.1/@subModelOperations.0/@subModelOperations.0/@subModelOperations.1/@groups.0"/>
                        <groups name="Default Group" labelExpression="3" semanticCandidateExpression="var:self"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:copiedElement.oclIsKindOf(mIEC::Conduit)">
                      <subModelOperations xsi:type="tool_1:Let" variableName="toCopy" valueExpression="aql:copiedElement">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Conduit" referenceName="subZones" variableName="instance3">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:copiedElement.name"/>
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="trusted" valueExpression="aql:copiedElement.trusted"/>
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="physical" valueExpression="aql:copiedElement.physical"/>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance3">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="target" variableName="instance2">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.target.accessControl"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.target.useControl"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.target.systemIntegrity"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.target.dataConfidentiality"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.target.restrictedDataFlow"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.target.timelyResponse"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.target.resourceAvailability"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:For" expression="aql:toCopy.components" iteratorName="comp">
                            <subModelOperations xsi:type="tool_1:Let" variableName="copiedElement" valueExpression="aql:comp">
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance3">
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:copiedElement.oclIsKindOf(mIEC::Device)">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Device" referenceName="components">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:copiedElement.name"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="embedded" valueExpression="aql:copiedElement.embedded"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="host" valueExpression="aql:copiedElement.host"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="network" valueExpression="aql:copiedElement.network"/>
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability" variableName="instance2">
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.capability.accessControl"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.capability.useControl"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.capability.systemIntegrity"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.capability.dataConfidentiality"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.capability.restrictedDataFlow"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.capability.timelyResponse"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.capability.resourceAvailability"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                    <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.properties" iteratorName="prop">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Property" referenceName="properties">
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:prop.name"/>
                                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                            <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:prop.value"/>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                          </subModelOperations>
                                        </subModelOperations>
                                      </subModelOperations>
                                      <subModelOperations xsi:type="properties:WizardModelOperation"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:copiedElement.oclIsKindOf(mIEC::System)">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::System" referenceName="components">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:copiedElement.name"/>
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability" variableName="instance2">
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.capability.accessControl"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.capability.useControl"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.capability.systemIntegrity"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.capability.dataConfidentiality"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.capability.restrictedDataFlow"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.capability.timelyResponse"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.capability.resourceAvailability"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                    <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.properties" iteratorName="prop">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Property" referenceName="properties">
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:prop.name"/>
                                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                            <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:prop.value"/>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                          </subModelOperations>
                                        </subModelOperations>
                                      </subModelOperations>
                                    </subModelOperations>
                                    <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.devices" iteratorName="device">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Device" referenceName="devices">
                                          <subModelOperations xsi:type="tool_1:Let" variableName="copiedElement" valueExpression="var:device"/>
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:copiedElement.name"/>
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="embedded" valueExpression="aql:copiedElement.embedded"/>
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="host" valueExpression="aql:copiedElement.host"/>
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="network" valueExpression="aql:copiedElement.network"/>
                                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability">
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.capability.accessControl"/>
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.capability.useControl"/>
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.capability.systemIntegrity"/>
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.capability.dataConfidentiality"/>
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.capability.restrictedDataFlow"/>
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.capability.timelyResponse"/>
                                              <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.capability.resourceAvailability"/>
                                            </subModelOperations>
                                          </subModelOperations>
                                          <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.properties" iteratorName="prop">
                                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Property" referenceName="properties">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:prop.name"/>
                                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                                  <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:prop.value"/>
                                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                                                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                    </subModelOperations>
                                                  </subModelOperations>
                                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                                                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                    </subModelOperations>
                                                  </subModelOperations>
                                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                                                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                    </subModelOperations>
                                                  </subModelOperations>
                                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                                                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                    </subModelOperations>
                                                  </subModelOperations>
                                                </subModelOperations>
                                              </subModelOperations>
                                            </subModelOperations>
                                          </subModelOperations>
                                        </subModelOperations>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:copiedElement.oclIsKindOf(mIEC::Application)">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Application" referenceName="components">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:copiedElement.name"/>
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability" variableName="instance2">
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.capability.accessControl"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.capability.useControl"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.capability.systemIntegrity"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.capability.dataConfidentiality"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.capability.restrictedDataFlow"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.capability.timelyResponse"/>
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.capability.resourceAvailability"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                    <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.properties" iteratorName="prop">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Property" referenceName="properties">
                                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:prop.name"/>
                                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                            <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:prop.value"/>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                                                <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                              </subModelOperations>
                                            </subModelOperations>
                                          </subModelOperations>
                                        </subModelOperations>
                                      </subModelOperations>
                                    </subModelOperations>
                                    <subModelOperations xsi:type="tool_1:For" expression="aql:copiedElement.constraints" iteratorName="constraint">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.oclIsKindOf(mIEC::OperationConstraint)">
                                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::OperationConstraint" referenceName="constraints">
                                            <subModelOperations xsi:type="tool_1:SetValue" featureName="propertyName" valueExpression="aql:constraint.propertyName"/>
                                            <subModelOperations xsi:type="tool_1:SetValue" featureName="optional" valueExpression="aql:constraint.optional"/>
                                            <subModelOperations xsi:type="tool_1:SetValue" featureName="operation" valueExpression="aql:constraint.operation"/>
                                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.value.oclIsKindOf(mIEC::Reference)">
                                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.value.oclIsKindOf(mIEC::SelfReference)">
                                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SelfReference" referenceName="value">
                                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="reference" valueExpression="aql:constraint.value.reference"/>
                                                  </subModelOperations>
                                                </subModelOperations>
                                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.value.oclIsKindOf(mIEC::DeviceReference)">
                                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::DeviceReference" referenceName="value">
                                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="reference" valueExpression="aql:constraint.value.reference"/>
                                                  </subModelOperations>
                                                </subModelOperations>
                                              </subModelOperations>
                                              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.value.oclIsKindOf(mIEC::Value)">
                                                <subModelOperations xsi:type="tool_1:Let" variableName="val" valueExpression="aql:constraint.value"/>
                                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::BooleanValue)">
                                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::BooleanValue" referenceName="value">
                                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                  </subModelOperations>
                                                </subModelOperations>
                                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::IntegerValue)">
                                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                  </subModelOperations>
                                                </subModelOperations>
                                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::FloatValue)">
                                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::FloatValue" referenceName="value">
                                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                  </subModelOperations>
                                                </subModelOperations>
                                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:val.oclIsKindOf(mIEC::StringValue)">
                                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::StringValue" referenceName="value">
                                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:val.value"/>
                                                  </subModelOperations>
                                                </subModelOperations>
                                              </subModelOperations>
                                            </subModelOperations>
                                          </subModelOperations>
                                        </subModelOperations>
                                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:constraint.oclIsKindOf(mIEC::PresenceConstraint)">
                                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::PresenceConstraint" referenceName="constraints">
                                            <subModelOperations xsi:type="tool_1:SetValue" featureName="propertyName" valueExpression="aql:constraint.propertyName"/>
                                            <subModelOperations xsi:type="tool_1:SetValue" featureName="optional" valueExpression="aql:constraint.optional"/>
                                          </subModelOperations>
                                        </subModelOperations>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:For" expression="aql:toCopy.countermeasures" iteratorName="cnt">
                            <subModelOperations xsi:type="tool_1:Let" variableName="copiedElement" valueExpression="aql:cnt">
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance3">
                                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::CounterMeasure" referenceName="countermeasures">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:cnt.name"/>
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::SecurityLevels" referenceName="capability" variableName="instance2">
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="accessControl" valueExpression="aql: copiedElement.capability.accessControl"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="useControl" valueExpression="aql: copiedElement.capability.useControl"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="systemIntegrity" valueExpression="aql: copiedElement.capability.systemIntegrity"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="dataConfidentiality" valueExpression="aql: copiedElement.capability.dataConfidentiality"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="restrictedDataFlow" valueExpression="aql: copiedElement.capability.restrictedDataFlow"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="timelyResponse" valueExpression="aql: copiedElement.capability.timelyResponse"/>
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="resourceAvailability" valueExpression="aql: copiedElement.capability.resourceAvailability"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="ReconfigureWithout" mappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones']/@subContainerMappings[name='ZoneDescription']/@subContainerMappings[name='Component'] //@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones']/@subContainerMappings[name='ZoneDescription']/@subContainerMappings[name='Component']/@subContainerMappings[name='Properties'] //@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones']/@subContainerMappings[name='ZoneDescription']/@subContainerMappings[name='Component']/@subContainerMappings[name='ExecutedOn'] //@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones']/@subContainerMappings[name='ZoneDescription']/@subContainerMappings[name='Component']/@subContainerMappings[name='Constraints']/@subContainerMappings[name='Constraint'] //@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones']/@subContainerMappings[name='ZoneDescription']/@subContainerMappings[name='Component']/@subContainerMappings[name='SLContainerComp'] //@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones']/@subContainerMappings[name='ZoneDescription']/@subContainerMappings[name='Component']/@subContainerMappings[name='SystemComposition']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.eResource().getContents()->first()">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(mIEC::Model)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:self.reconfigure(element)"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="addCapacity" precondition="aql:container.oclIsKindOf(mIEC::Device) and container.properties->forAll(p | p.name != 'capacity')" containerMappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones']/@subContainerMappings[name='ZoneDescription']/@subContainerMappings[name='Component']/@subContainerMappings[name='Properties']/@subContainerMappings[name='Property']" iconPath="/MIEC.project.design/icons/capacity_small.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Property" referenceName="properties">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'capacity'"/>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:100"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="addSize" precondition="aql:container.oclIsKindOf(mIEC::Application) and container.properties->forAll(p | p.name != 'size')" containerMappings="//@ownedViewpoints[name='IEC']/@ownedRepresentations[name='model']/@defaultLayer/@containerMappings[name='Zone']/@subContainerMappings[name='ZoneAndSubzones']/@subContainerMappings[name='ZoneDescription']/@subContainerMappings[name='Component']/@subContainerMappings[name='Properties']/@subContainerMappings[name='Property']" iconPath="/MIEC.project.design/icons/size_small.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::Property" referenceName="properties">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'size'"/>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="mIEC::IntegerValue" referenceName="value">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="aql:50"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="MIEC.project.design.Services"/>
  </ownedViewpoints>
</description:Group>
