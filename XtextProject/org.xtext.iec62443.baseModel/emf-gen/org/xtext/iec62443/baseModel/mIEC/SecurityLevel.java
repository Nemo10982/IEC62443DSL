/**
 * generated by Xtext 2.31.0
 */
package org.xtext.iec62443.baseModel.mIEC;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Security Level</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see org.xtext.iec62443.baseModel.mIEC.MIECPackage#getSecurityLevel()
 * @model
 * @generated
 */
public enum SecurityLevel implements Enumerator {
	/**
	 * The '<em><b>SL0</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #SL0_VALUE
	 * @generated
	 * @ordered
	 */
	SL0(0, "SL0", "SL0"),

	/**
	 * The '<em><b>SL1</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #SL1_VALUE
	 * @generated
	 * @ordered
	 */
	SL1(1, "SL1", "SL1"),

	/**
	 * The '<em><b>SL2</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #SL2_VALUE
	 * @generated
	 * @ordered
	 */
	SL2(2, "SL2", "SL2"),

	/**
	 * The '<em><b>SL3</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #SL3_VALUE
	 * @generated
	 * @ordered
	 */
	SL3(3, "SL3", "SL3"),

	/**
	 * The '<em><b>SL4</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #SL4_VALUE
	 * @generated
	 * @ordered
	 */
	SL4(4, "SL4", "SL4"), /**
	 * The '<em><b>NR</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #NR_VALUE
	 * @generated
	 * @ordered
	 */
	NR(-1, "NR", "NR");

	/**
	 * The '<em><b>SL0</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #SL0
	 * @model
	 * @generated
	 * @ordered
	 */
	public static final int SL0_VALUE = 0;

	/**
	 * The '<em><b>SL1</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #SL1
	 * @model
	 * @generated
	 * @ordered
	 */
	public static final int SL1_VALUE = 1;

	/**
	 * The '<em><b>SL2</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #SL2
	 * @model
	 * @generated
	 * @ordered
	 */
	public static final int SL2_VALUE = 2;

	/**
	 * The '<em><b>SL3</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #SL3
	 * @model
	 * @generated
	 * @ordered
	 */
	public static final int SL3_VALUE = 3;

	/**
	 * The '<em><b>SL4</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #SL4
	 * @model
	 * @generated
	 * @ordered
	 */
	public static final int SL4_VALUE = 4;

	/**
	 * The '<em><b>NR</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #NR
	 * @model
	 * @generated
	 * @ordered
	 */
	public static final int NR_VALUE = -1;

	/**
	 * An array of all the '<em><b>Security Level</b></em>' enumerators.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private static final SecurityLevel[] VALUES_ARRAY =
		new SecurityLevel[] {
			SL0,
			SL1,
			SL2,
			SL3,
			SL4,
			NR,
		};

	/**
	 * A public read-only list of all the '<em><b>Security Level</b></em>' enumerators.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final List<SecurityLevel> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

	/**
	 * Returns the '<em><b>Security Level</b></em>' literal with the specified literal value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param literal the literal.
	 * @return the matching enumerator or <code>null</code>.
	 * @generated
	 */
	public static SecurityLevel get(String literal) {
		for (int i = 0; i < VALUES_ARRAY.length; ++i) {
			SecurityLevel result = VALUES_ARRAY[i];
			if (result.toString().equals(literal)) {
				return result;
			}
		}
		return null;
	}

	/**
	 * Returns the '<em><b>Security Level</b></em>' literal with the specified name.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param name the name.
	 * @return the matching enumerator or <code>null</code>.
	 * @generated
	 */
	public static SecurityLevel getByName(String name) {
		for (int i = 0; i < VALUES_ARRAY.length; ++i) {
			SecurityLevel result = VALUES_ARRAY[i];
			if (result.getName().equals(name)) {
				return result;
			}
		}
		return null;
	}

	/**
	 * Returns the '<em><b>Security Level</b></em>' literal with the specified integer value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the integer value.
	 * @return the matching enumerator or <code>null</code>.
	 * @generated
	 */
	public static SecurityLevel get(int value) {
		switch (value) {
			case SL0_VALUE: return SL0;
			case SL1_VALUE: return SL1;
			case SL2_VALUE: return SL2;
			case SL3_VALUE: return SL3;
			case SL4_VALUE: return SL4;
			case NR_VALUE: return NR;
		}
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private final int value;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private final String name;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private final String literal;

	/**
	 * Only this class can construct instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private SecurityLevel(int value, String name, String literal) {
		this.value = value;
		this.name = name;
		this.literal = literal;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public int getValue() {
	  return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String getName() {
	  return name;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String getLiteral() {
	  return literal;
	}

	/**
	 * Returns the literal value of the enumerator, which is its string representation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString() {
		return literal;
	}

} //SecurityLevel
