/**
 * generated by Xtext 2.31.0
 */
package org.xtext.iec62443.baseModel.mIEC;

import org.eclipse.emf.common.util.EList;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Application</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.iec62443.baseModel.mIEC.Application#getConstraints <em>Constraints</em>}</li>
 *   <li>{@link org.xtext.iec62443.baseModel.mIEC.Application#getExecutedOn <em>Executed On</em>}</li>
 *   <li>{@link org.xtext.iec62443.baseModel.mIEC.Application#getCommunicatesWith <em>Communicates With</em>}</li>
 *   <li>{@link org.xtext.iec62443.baseModel.mIEC.Application#getScoreExpr <em>Score Expr</em>}</li>
 *   <li>{@link org.xtext.iec62443.baseModel.mIEC.Application#getSLevelConstraint <em>SLevel Constraint</em>}</li>
 * </ul>
 *
 * @see org.xtext.iec62443.baseModel.mIEC.MIECPackage#getApplication()
 * @model
 * @generated
 */
public interface Application extends Component {

	/**
	 * Returns the value of the '<em><b>Constraints</b></em>' containment reference list.
	 * The list contents are of type {@link org.xtext.iec62443.baseModel.mIEC.Constraint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Constraints</em>' containment reference list.
	 * @see org.xtext.iec62443.baseModel.mIEC.MIECPackage#getApplication_Constraints()
	 * @model containment="true"
	 * @generated
	 */
	EList<Constraint> getConstraints();

	/**
	 * Returns the value of the '<em><b>Executed On</b></em>' reference.
	 * It is bidirectional and its opposite is '{@link org.xtext.iec62443.baseModel.mIEC.Device#getRunning <em>Running</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Executed On</em>' reference.
	 * @see #setExecutedOn(Device)
	 * @see org.xtext.iec62443.baseModel.mIEC.MIECPackage#getApplication_ExecutedOn()
	 * @see org.xtext.iec62443.baseModel.mIEC.Device#getRunning
	 * @model opposite="running" resolveProxies="false"
	 * @generated
	 */
	Device getExecutedOn();

	/**
	 * Sets the value of the '{@link org.xtext.iec62443.baseModel.mIEC.Application#getExecutedOn <em>Executed On</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Executed On</em>' reference.
	 * @see #getExecutedOn()
	 * @generated
	 */
	void setExecutedOn(Device value);

	/**
	 * Returns the value of the '<em><b>Communicates With</b></em>' reference list.
	 * The list contents are of type {@link org.xtext.iec62443.baseModel.mIEC.Component}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Communicates With</em>' reference list.
	 * @see org.xtext.iec62443.baseModel.mIEC.MIECPackage#getApplication_CommunicatesWith()
	 * @model
	 * @generated
	 */
	EList<Component> getCommunicatesWith();
	
	/**
	 * Returns the value of the '<em><b>Score Expr</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Score Expr</em>' containment reference.
	 * @see #setScoreExpr(NumberExpression)
	 * @see org.xtext.iec62443.baseModel.mIEC.MIECPackage#getApplication_ScoreExpr()
	 * @model containment="true"
	 * @generated
	 */
	NumberExpression getScoreExpr();

	/**
	 * Sets the value of the '{@link org.xtext.iec62443.baseModel.mIEC.Application#getScoreExpr <em>Score Expr</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Score Expr</em>' containment reference.
	 * @see #getScoreExpr()
	 * @generated
	 */
	void setScoreExpr(NumberExpression value);

	/**
	 * Returns the value of the '<em><b>SLevel Constraint</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>SLevel Constraint</em>' containment reference.
	 * @see #setSLevelConstraint(SecurityLevels)
	 * @see org.xtext.iec62443.baseModel.mIEC.MIECPackage#getApplication_SLevelConstraint()
	 * @model containment="true"
	 * @generated
	 */
	SecurityLevels getSLevelConstraint();

	/**
	 * Sets the value of the '{@link org.xtext.iec62443.baseModel.mIEC.Application#getSLevelConstraint <em>SLevel Constraint</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>SLevel Constraint</em>' containment reference.
	 * @see #getSLevelConstraint()
	 * @generated
	 */
	void setSLevelConstraint(SecurityLevels value);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation" required="true"
	 * @generated
	 */
	int getScore();
	
	// Get the score the application would have if executed on the given device
	int getScoreOnDevice(Device d);

	// Get the application score. If it is not defined, return 0
	public int getScore(int state);
	
	// Get the application size. If it is not defined, return 0
	public int getSize();
	
} // Application
