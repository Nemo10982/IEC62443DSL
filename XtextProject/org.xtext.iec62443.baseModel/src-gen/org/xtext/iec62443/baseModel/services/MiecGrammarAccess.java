/*
 * generated by Xtext 2.32.0
 */
package org.xtext.iec62443.baseModel.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MiecGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cModelAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cModelKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cDescriptionKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Keyword cNameKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Keyword cEqualsSignKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Assignment cNameAssignment_1_5 = (Assignment)cGroup_1.eContents().get(5);
		private final RuleCall cNameIDTerminalRuleCall_1_5_0 = (RuleCall)cNameAssignment_1_5.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_6 = (Keyword)cGroup_1.eContents().get(6);
		private final Keyword cFunctionKeyword_1_7 = (Keyword)cGroup_1.eContents().get(7);
		private final Keyword cEqualsSignKeyword_1_8 = (Keyword)cGroup_1.eContents().get(8);
		private final Assignment cFunctionAssignment_1_9 = (Assignment)cGroup_1.eContents().get(9);
		private final RuleCall cFunctionSTRINGTerminalRuleCall_1_9_0 = (RuleCall)cFunctionAssignment_1_9.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_10 = (Keyword)cGroup_1.eContents().get(10);
		private final Keyword cEquipmentKeyword_1_11 = (Keyword)cGroup_1.eContents().get(11);
		private final Keyword cEqualsSignKeyword_1_12 = (Keyword)cGroup_1.eContents().get(12);
		private final Assignment cEquipmentDescriptionAssignment_1_13 = (Assignment)cGroup_1.eContents().get(13);
		private final RuleCall cEquipmentDescriptionSTRINGTerminalRuleCall_1_13_0 = (RuleCall)cEquipmentDescriptionAssignment_1_13.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_14 = (Keyword)cGroup_1.eContents().get(14);
		private final Keyword cAssumptionsKeyword_1_15 = (Keyword)cGroup_1.eContents().get(15);
		private final Keyword cEqualsSignKeyword_1_16 = (Keyword)cGroup_1.eContents().get(16);
		private final Assignment cAssumptionsOnLocationAssignment_1_17 = (Assignment)cGroup_1.eContents().get(17);
		private final RuleCall cAssumptionsOnLocationSTRINGTerminalRuleCall_1_17_0 = (RuleCall)cAssumptionsOnLocationAssignment_1_17.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_18 = (Keyword)cGroup_1.eContents().get(18);
		private final Keyword cRightCurlyBracketKeyword_1_19 = (Keyword)cGroup_1.eContents().get(19);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cZonesAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cZonesClassicalZoneParserRuleCall_2_0_0 = (RuleCall)cZonesAssignment_2_0.eContents().get(0);
		private final Assignment cConduitsAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cConduitsConduitParserRuleCall_2_1_0 = (RuleCall)cConduitsAssignment_2_1.eContents().get(0);
		
		//Model returns Model:
		//    {Model}
		//    (
		//        'Model' 'description' '{'
		//            'name' '=' name=ID ';'
		//            'function' '=' function=STRING ';'
		//            'equipment' '=' equipmentDescription=STRING ';'
		//            'assumptions' '=' assumptionsOnLocation=STRING ';'
		//        '}'
		//    )?
		//    (
		//        zones+=ClassicalZone |
		//        conduits+=Conduit
		//    )*
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Model}
		//(
		//    'Model' 'description' '{'
		//        'name' '=' name=ID ';'
		//        'function' '=' function=STRING ';'
		//        'equipment' '=' equipmentDescription=STRING ';'
		//        'assumptions' '=' assumptionsOnLocation=STRING ';'
		//    '}'
		//)?
		//(
		//    zones+=ClassicalZone |
		//    conduits+=Conduit
		//)*
		public Group getGroup() { return cGroup; }
		
		//{Model}
		public Action getModelAction_0() { return cModelAction_0; }
		
		//(
		//    'Model' 'description' '{'
		//        'name' '=' name=ID ';'
		//        'function' '=' function=STRING ';'
		//        'equipment' '=' equipmentDescription=STRING ';'
		//        'assumptions' '=' assumptionsOnLocation=STRING ';'
		//    '}'
		//)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'Model'
		public Keyword getModelKeyword_1_0() { return cModelKeyword_1_0; }
		
		//'description'
		public Keyword getDescriptionKeyword_1_1() { return cDescriptionKeyword_1_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_2() { return cLeftCurlyBracketKeyword_1_2; }
		
		//'name'
		public Keyword getNameKeyword_1_3() { return cNameKeyword_1_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_4() { return cEqualsSignKeyword_1_4; }
		
		//name=ID
		public Assignment getNameAssignment_1_5() { return cNameAssignment_1_5; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_5_0() { return cNameIDTerminalRuleCall_1_5_0; }
		
		//';'
		public Keyword getSemicolonKeyword_1_6() { return cSemicolonKeyword_1_6; }
		
		//'function'
		public Keyword getFunctionKeyword_1_7() { return cFunctionKeyword_1_7; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_8() { return cEqualsSignKeyword_1_8; }
		
		//function=STRING
		public Assignment getFunctionAssignment_1_9() { return cFunctionAssignment_1_9; }
		
		//STRING
		public RuleCall getFunctionSTRINGTerminalRuleCall_1_9_0() { return cFunctionSTRINGTerminalRuleCall_1_9_0; }
		
		//';'
		public Keyword getSemicolonKeyword_1_10() { return cSemicolonKeyword_1_10; }
		
		//'equipment'
		public Keyword getEquipmentKeyword_1_11() { return cEquipmentKeyword_1_11; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_12() { return cEqualsSignKeyword_1_12; }
		
		//equipmentDescription=STRING
		public Assignment getEquipmentDescriptionAssignment_1_13() { return cEquipmentDescriptionAssignment_1_13; }
		
		//STRING
		public RuleCall getEquipmentDescriptionSTRINGTerminalRuleCall_1_13_0() { return cEquipmentDescriptionSTRINGTerminalRuleCall_1_13_0; }
		
		//';'
		public Keyword getSemicolonKeyword_1_14() { return cSemicolonKeyword_1_14; }
		
		//'assumptions'
		public Keyword getAssumptionsKeyword_1_15() { return cAssumptionsKeyword_1_15; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_16() { return cEqualsSignKeyword_1_16; }
		
		//assumptionsOnLocation=STRING
		public Assignment getAssumptionsOnLocationAssignment_1_17() { return cAssumptionsOnLocationAssignment_1_17; }
		
		//STRING
		public RuleCall getAssumptionsOnLocationSTRINGTerminalRuleCall_1_17_0() { return cAssumptionsOnLocationSTRINGTerminalRuleCall_1_17_0; }
		
		//';'
		public Keyword getSemicolonKeyword_1_18() { return cSemicolonKeyword_1_18; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_19() { return cRightCurlyBracketKeyword_1_19; }
		
		//(
		//    zones+=ClassicalZone |
		//    conduits+=Conduit
		//)*
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//zones+=ClassicalZone
		public Assignment getZonesAssignment_2_0() { return cZonesAssignment_2_0; }
		
		//ClassicalZone
		public RuleCall getZonesClassicalZoneParserRuleCall_2_0_0() { return cZonesClassicalZoneParserRuleCall_2_0_0; }
		
		//conduits+=Conduit
		public Assignment getConduitsAssignment_2_1() { return cConduitsAssignment_2_1; }
		
		//Conduit
		public RuleCall getConduitsConduitParserRuleCall_2_1_0() { return cConduitsConduitParserRuleCall_2_1_0; }
	}
	public class ComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.Component");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDeviceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSystemParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cApplicationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Component returns Component:
		//    Device | System | Application;
		@Override public ParserRule getRule() { return rule; }
		
		//Device | System | Application
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Device
		public RuleCall getDeviceParserRuleCall_0() { return cDeviceParserRuleCall_0; }
		
		//System
		public RuleCall getSystemParserRuleCall_1() { return cSystemParserRuleCall_1; }
		
		//Application
		public RuleCall getApplicationParserRuleCall_2() { return cApplicationParserRuleCall_2; }
	}
	public class ZoneElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.Zone");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cClassicalZoneParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cConduitParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Zone returns Zone:
		//    ClassicalZone | Conduit
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ClassicalZone | Conduit
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ClassicalZone
		public RuleCall getClassicalZoneParserRuleCall_0() { return cClassicalZoneParserRuleCall_0; }
		
		//Conduit
		public RuleCall getConduitParserRuleCall_1() { return cConduitParserRuleCall_1; }
	}
	public class ClassicalZoneElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.ClassicalZone");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTrustedAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTrustedTrustedKeyword_0_0 = (Keyword)cTrustedAssignment_0.eContents().get(0);
		private final Assignment cPhysicalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cPhysicalPhysicalKeyword_1_0 = (Keyword)cPhysicalAssignment_1.eContents().get(0);
		private final Keyword cZoneKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cTargetKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTargetAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTargetSecurityLevelsParserRuleCall_6_0 = (RuleCall)cTargetAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cSemicolonKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cFurtherDescAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cFurtherDescFurtherZoneDescriptionParserRuleCall_7_1_0 = (RuleCall)cFurtherDescAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cSemicolonKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cComponentsKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_8_2 = (Keyword)cGroup_8.eContents().get(2);
		private final Assignment cComponentsAssignment_8_3 = (Assignment)cGroup_8.eContents().get(3);
		private final RuleCall cComponentsComponentParserRuleCall_8_3_0 = (RuleCall)cComponentsAssignment_8_3.eContents().get(0);
		private final Group cGroup_8_4 = (Group)cGroup_8.eContents().get(4);
		private final Keyword cCommaKeyword_8_4_0 = (Keyword)cGroup_8_4.eContents().get(0);
		private final Assignment cComponentsAssignment_8_4_1 = (Assignment)cGroup_8_4.eContents().get(1);
		private final RuleCall cComponentsComponentParserRuleCall_8_4_1_0 = (RuleCall)cComponentsAssignment_8_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_5 = (Keyword)cGroup_8.eContents().get(5);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cSemicolonKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cCountermeasuresKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_9_2 = (Keyword)cGroup_9.eContents().get(2);
		private final Assignment cCountermeasuresAssignment_9_3 = (Assignment)cGroup_9.eContents().get(3);
		private final RuleCall cCountermeasuresCounterMeasureParserRuleCall_9_3_0 = (RuleCall)cCountermeasuresAssignment_9_3.eContents().get(0);
		private final Group cGroup_9_4 = (Group)cGroup_9.eContents().get(4);
		private final Keyword cCommaKeyword_9_4_0 = (Keyword)cGroup_9_4.eContents().get(0);
		private final Assignment cCountermeasuresAssignment_9_4_1 = (Assignment)cGroup_9_4.eContents().get(1);
		private final RuleCall cCountermeasuresCounterMeasureParserRuleCall_9_4_1_0 = (RuleCall)cCountermeasuresAssignment_9_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9_5 = (Keyword)cGroup_9.eContents().get(5);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cSemicolonKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cSubzonesKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_10_2 = (Keyword)cGroup_10.eContents().get(2);
		private final Assignment cSubZonesAssignment_10_3 = (Assignment)cGroup_10.eContents().get(3);
		private final RuleCall cSubZonesZoneParserRuleCall_10_3_0 = (RuleCall)cSubZonesAssignment_10_3.eContents().get(0);
		private final Group cGroup_10_4 = (Group)cGroup_10.eContents().get(4);
		private final Keyword cSemicolonKeyword_10_4_0 = (Keyword)cGroup_10_4.eContents().get(0);
		private final Assignment cSubZonesAssignment_10_4_1 = (Assignment)cGroup_10_4.eContents().get(1);
		private final RuleCall cSubZonesZoneParserRuleCall_10_4_1_0 = (RuleCall)cSubZonesAssignment_10_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10_5 = (Keyword)cGroup_10.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//ClassicalZone returns ClassicalZone:
		//    (trusted?='trusted')?
		//    (physical?='physical')?
		//    'Zone'
		//    name=ID
		//    '{'
		//        'target' target=SecurityLevels
		//        (';' furtherDesc=FurtherZoneDescription)?
		//        (';' 'components' '{' components+=Component ( "," components+=Component)* '}')?
		//        (';' 'countermeasures' '{' countermeasures+=counterMeasure ( "," countermeasures+=counterMeasure)* '}' )?
		//        (";" 'subzones' '{' subZones+=Zone (';' subZones+=Zone)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//(trusted?='trusted')?
		//(physical?='physical')?
		//'Zone'
		//name=ID
		//'{'
		//    'target' target=SecurityLevels
		//    (';' furtherDesc=FurtherZoneDescription)?
		//    (';' 'components' '{' components+=Component ( "," components+=Component)* '}')?
		//    (';' 'countermeasures' '{' countermeasures+=counterMeasure ( "," countermeasures+=counterMeasure)* '}' )?
		//    (";" 'subzones' '{' subZones+=Zone (';' subZones+=Zone)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//(trusted?='trusted')?
		public Assignment getTrustedAssignment_0() { return cTrustedAssignment_0; }
		
		//'trusted'
		public Keyword getTrustedTrustedKeyword_0_0() { return cTrustedTrustedKeyword_0_0; }
		
		//(physical?='physical')?
		public Assignment getPhysicalAssignment_1() { return cPhysicalAssignment_1; }
		
		//'physical'
		public Keyword getPhysicalPhysicalKeyword_1_0() { return cPhysicalPhysicalKeyword_1_0; }
		
		//'Zone'
		public Keyword getZoneKeyword_2() { return cZoneKeyword_2; }
		
		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//'target'
		public Keyword getTargetKeyword_5() { return cTargetKeyword_5; }
		
		//target=SecurityLevels
		public Assignment getTargetAssignment_6() { return cTargetAssignment_6; }
		
		//SecurityLevels
		public RuleCall getTargetSecurityLevelsParserRuleCall_6_0() { return cTargetSecurityLevelsParserRuleCall_6_0; }
		
		//(';' furtherDesc=FurtherZoneDescription)?
		public Group getGroup_7() { return cGroup_7; }
		
		//';'
		public Keyword getSemicolonKeyword_7_0() { return cSemicolonKeyword_7_0; }
		
		//furtherDesc=FurtherZoneDescription
		public Assignment getFurtherDescAssignment_7_1() { return cFurtherDescAssignment_7_1; }
		
		//FurtherZoneDescription
		public RuleCall getFurtherDescFurtherZoneDescriptionParserRuleCall_7_1_0() { return cFurtherDescFurtherZoneDescriptionParserRuleCall_7_1_0; }
		
		//(';' 'components' '{' components+=Component ( "," components+=Component)* '}')?
		public Group getGroup_8() { return cGroup_8; }
		
		//';'
		public Keyword getSemicolonKeyword_8_0() { return cSemicolonKeyword_8_0; }
		
		//'components'
		public Keyword getComponentsKeyword_8_1() { return cComponentsKeyword_8_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8_2() { return cLeftCurlyBracketKeyword_8_2; }
		
		//components+=Component
		public Assignment getComponentsAssignment_8_3() { return cComponentsAssignment_8_3; }
		
		//Component
		public RuleCall getComponentsComponentParserRuleCall_8_3_0() { return cComponentsComponentParserRuleCall_8_3_0; }
		
		//( "," components+=Component)*
		public Group getGroup_8_4() { return cGroup_8_4; }
		
		//","
		public Keyword getCommaKeyword_8_4_0() { return cCommaKeyword_8_4_0; }
		
		//components+=Component
		public Assignment getComponentsAssignment_8_4_1() { return cComponentsAssignment_8_4_1; }
		
		//Component
		public RuleCall getComponentsComponentParserRuleCall_8_4_1_0() { return cComponentsComponentParserRuleCall_8_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8_5() { return cRightCurlyBracketKeyword_8_5; }
		
		//(';' 'countermeasures' '{' countermeasures+=counterMeasure ( "," countermeasures+=counterMeasure)* '}' )?
		public Group getGroup_9() { return cGroup_9; }
		
		//';'
		public Keyword getSemicolonKeyword_9_0() { return cSemicolonKeyword_9_0; }
		
		//'countermeasures'
		public Keyword getCountermeasuresKeyword_9_1() { return cCountermeasuresKeyword_9_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9_2() { return cLeftCurlyBracketKeyword_9_2; }
		
		//countermeasures+=counterMeasure
		public Assignment getCountermeasuresAssignment_9_3() { return cCountermeasuresAssignment_9_3; }
		
		//counterMeasure
		public RuleCall getCountermeasuresCounterMeasureParserRuleCall_9_3_0() { return cCountermeasuresCounterMeasureParserRuleCall_9_3_0; }
		
		//( "," countermeasures+=counterMeasure)*
		public Group getGroup_9_4() { return cGroup_9_4; }
		
		//","
		public Keyword getCommaKeyword_9_4_0() { return cCommaKeyword_9_4_0; }
		
		//countermeasures+=counterMeasure
		public Assignment getCountermeasuresAssignment_9_4_1() { return cCountermeasuresAssignment_9_4_1; }
		
		//counterMeasure
		public RuleCall getCountermeasuresCounterMeasureParserRuleCall_9_4_1_0() { return cCountermeasuresCounterMeasureParserRuleCall_9_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9_5() { return cRightCurlyBracketKeyword_9_5; }
		
		//(";" 'subzones' '{' subZones+=Zone (';' subZones+=Zone)* '}' )?
		public Group getGroup_10() { return cGroup_10; }
		
		//";"
		public Keyword getSemicolonKeyword_10_0() { return cSemicolonKeyword_10_0; }
		
		//'subzones'
		public Keyword getSubzonesKeyword_10_1() { return cSubzonesKeyword_10_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10_2() { return cLeftCurlyBracketKeyword_10_2; }
		
		//subZones+=Zone
		public Assignment getSubZonesAssignment_10_3() { return cSubZonesAssignment_10_3; }
		
		//Zone
		public RuleCall getSubZonesZoneParserRuleCall_10_3_0() { return cSubZonesZoneParserRuleCall_10_3_0; }
		
		//(';' subZones+=Zone)*
		public Group getGroup_10_4() { return cGroup_10_4; }
		
		//';'
		public Keyword getSemicolonKeyword_10_4_0() { return cSemicolonKeyword_10_4_0; }
		
		//subZones+=Zone
		public Assignment getSubZonesAssignment_10_4_1() { return cSubZonesAssignment_10_4_1; }
		
		//Zone
		public RuleCall getSubZonesZoneParserRuleCall_10_4_1_0() { return cSubZonesZoneParserRuleCall_10_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10_5() { return cRightCurlyBracketKeyword_10_5; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class SecurityLevelsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.SecurityLevels");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAccessControlAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAccessControlSecurityLevelEnumRuleCall_1_0 = (RuleCall)cAccessControlAssignment_1.eContents().get(0);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cUseControlAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cUseControlSecurityLevelEnumRuleCall_3_0 = (RuleCall)cUseControlAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSystemIntegrityAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSystemIntegritySecurityLevelEnumRuleCall_5_0 = (RuleCall)cSystemIntegrityAssignment_5.eContents().get(0);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cDataConfidentialityAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDataConfidentialitySecurityLevelEnumRuleCall_7_0 = (RuleCall)cDataConfidentialityAssignment_7.eContents().get(0);
		private final Keyword cCommaKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cRestrictedDataFlowAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cRestrictedDataFlowSecurityLevelEnumRuleCall_9_0 = (RuleCall)cRestrictedDataFlowAssignment_9.eContents().get(0);
		private final Keyword cCommaKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cTimelyResponseAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cTimelyResponseSecurityLevelEnumRuleCall_11_0 = (RuleCall)cTimelyResponseAssignment_11.eContents().get(0);
		private final Keyword cCommaKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cResourceAvailabilityAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cResourceAvailabilitySecurityLevelEnumRuleCall_13_0 = (RuleCall)cResourceAvailabilityAssignment_13.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//SecurityLevels returns SecurityLevels:
		//    '['
		//        accessControl=SecurityLevel ','
		//        useControl=SecurityLevel ','
		//        systemIntegrity=SecurityLevel ','
		//        dataConfidentiality=SecurityLevel ','
		//        restrictedDataFlow=SecurityLevel ','
		//        timelyResponse=SecurityLevel ','
		//        resourceAvailability=SecurityLevel
		//    ']';
		@Override public ParserRule getRule() { return rule; }
		
		//'['
		//    accessControl=SecurityLevel ','
		//    useControl=SecurityLevel ','
		//    systemIntegrity=SecurityLevel ','
		//    dataConfidentiality=SecurityLevel ','
		//    restrictedDataFlow=SecurityLevel ','
		//    timelyResponse=SecurityLevel ','
		//    resourceAvailability=SecurityLevel
		//']'
		public Group getGroup() { return cGroup; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }
		
		//accessControl=SecurityLevel
		public Assignment getAccessControlAssignment_1() { return cAccessControlAssignment_1; }
		
		//SecurityLevel
		public RuleCall getAccessControlSecurityLevelEnumRuleCall_1_0() { return cAccessControlSecurityLevelEnumRuleCall_1_0; }
		
		//','
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }
		
		//useControl=SecurityLevel
		public Assignment getUseControlAssignment_3() { return cUseControlAssignment_3; }
		
		//SecurityLevel
		public RuleCall getUseControlSecurityLevelEnumRuleCall_3_0() { return cUseControlSecurityLevelEnumRuleCall_3_0; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//systemIntegrity=SecurityLevel
		public Assignment getSystemIntegrityAssignment_5() { return cSystemIntegrityAssignment_5; }
		
		//SecurityLevel
		public RuleCall getSystemIntegritySecurityLevelEnumRuleCall_5_0() { return cSystemIntegritySecurityLevelEnumRuleCall_5_0; }
		
		//','
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }
		
		//dataConfidentiality=SecurityLevel
		public Assignment getDataConfidentialityAssignment_7() { return cDataConfidentialityAssignment_7; }
		
		//SecurityLevel
		public RuleCall getDataConfidentialitySecurityLevelEnumRuleCall_7_0() { return cDataConfidentialitySecurityLevelEnumRuleCall_7_0; }
		
		//','
		public Keyword getCommaKeyword_8() { return cCommaKeyword_8; }
		
		//restrictedDataFlow=SecurityLevel
		public Assignment getRestrictedDataFlowAssignment_9() { return cRestrictedDataFlowAssignment_9; }
		
		//SecurityLevel
		public RuleCall getRestrictedDataFlowSecurityLevelEnumRuleCall_9_0() { return cRestrictedDataFlowSecurityLevelEnumRuleCall_9_0; }
		
		//','
		public Keyword getCommaKeyword_10() { return cCommaKeyword_10; }
		
		//timelyResponse=SecurityLevel
		public Assignment getTimelyResponseAssignment_11() { return cTimelyResponseAssignment_11; }
		
		//SecurityLevel
		public RuleCall getTimelyResponseSecurityLevelEnumRuleCall_11_0() { return cTimelyResponseSecurityLevelEnumRuleCall_11_0; }
		
		//','
		public Keyword getCommaKeyword_12() { return cCommaKeyword_12; }
		
		//resourceAvailability=SecurityLevel
		public Assignment getResourceAvailabilityAssignment_13() { return cResourceAvailabilityAssignment_13; }
		
		//SecurityLevel
		public RuleCall getResourceAvailabilitySecurityLevelEnumRuleCall_13_0() { return cResourceAvailabilitySecurityLevelEnumRuleCall_13_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_14() { return cRightSquareBracketKeyword_14; }
	}
	public class CounterMeasureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.counterMeasure");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cInactiveAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cInactiveInactiveKeyword_1_0 = (Keyword)cInactiveAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cCapabilityKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cCapabilityAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cCapabilitySecurityLevelsParserRuleCall_5_0 = (RuleCall)cCapabilityAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cSemicolonKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cCostKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cCostAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cCostPositiveIntegerValueParserRuleCall_6_2_0 = (RuleCall)cCostAssignment_6_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//counterMeasure returns CounterMeasure:
		//    '('
		//    (inactive?='inactive')? name=ID ';'
		//        'capability' capability=SecurityLevels
		//        (';' 'cost' cost = PositiveIntegerValue)?
		//    ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'('
		//(inactive?='inactive')? name=ID ';'
		//    'capability' capability=SecurityLevels
		//    (';' 'cost' cost = PositiveIntegerValue)?
		//')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//(inactive?='inactive')?
		public Assignment getInactiveAssignment_1() { return cInactiveAssignment_1; }
		
		//'inactive'
		public Keyword getInactiveInactiveKeyword_1_0() { return cInactiveInactiveKeyword_1_0; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
		
		//'capability'
		public Keyword getCapabilityKeyword_4() { return cCapabilityKeyword_4; }
		
		//capability=SecurityLevels
		public Assignment getCapabilityAssignment_5() { return cCapabilityAssignment_5; }
		
		//SecurityLevels
		public RuleCall getCapabilitySecurityLevelsParserRuleCall_5_0() { return cCapabilitySecurityLevelsParserRuleCall_5_0; }
		
		//(';' 'cost' cost = PositiveIntegerValue)?
		public Group getGroup_6() { return cGroup_6; }
		
		//';'
		public Keyword getSemicolonKeyword_6_0() { return cSemicolonKeyword_6_0; }
		
		//'cost'
		public Keyword getCostKeyword_6_1() { return cCostKeyword_6_1; }
		
		//cost = PositiveIntegerValue
		public Assignment getCostAssignment_6_2() { return cCostAssignment_6_2; }
		
		//PositiveIntegerValue
		public RuleCall getCostPositiveIntegerValueParserRuleCall_6_2_0() { return cCostPositiveIntegerValueParserRuleCall_6_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}
	public class ConduitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.Conduit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTrustedAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTrustedTrustedKeyword_0_0 = (Keyword)cTrustedAssignment_0.eContents().get(0);
		private final Assignment cPhysicalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cPhysicalPhysicalKeyword_1_0 = (Keyword)cPhysicalAssignment_1.eContents().get(0);
		private final Keyword cConduitKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cConnectsKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cConnectsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cConnectsClassicalZoneCrossReference_7_0 = (CrossReference)cConnectsAssignment_7.eContents().get(0);
		private final RuleCall cConnectsClassicalZoneIDTerminalRuleCall_7_0_1 = (RuleCall)cConnectsClassicalZoneCrossReference_7_0.eContents().get(1);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cConnectsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final CrossReference cConnectsClassicalZoneCrossReference_8_1_0 = (CrossReference)cConnectsAssignment_8_1.eContents().get(0);
		private final RuleCall cConnectsClassicalZoneIDTerminalRuleCall_8_1_0_1 = (RuleCall)cConnectsClassicalZoneCrossReference_8_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cSemicolonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cTargetKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cTargetAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cTargetSecurityLevelsParserRuleCall_12_0 = (RuleCall)cTargetAssignment_12.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cSemicolonKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cFurtherDescAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cFurtherDescFurtherZoneDescriptionParserRuleCall_13_1_0 = (RuleCall)cFurtherDescAssignment_13_1.eContents().get(0);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final Keyword cSemicolonKeyword_14_0 = (Keyword)cGroup_14.eContents().get(0);
		private final Keyword cComponentsKeyword_14_1 = (Keyword)cGroup_14.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_14_2 = (Keyword)cGroup_14.eContents().get(2);
		private final Assignment cComponentsAssignment_14_3 = (Assignment)cGroup_14.eContents().get(3);
		private final RuleCall cComponentsComponentParserRuleCall_14_3_0 = (RuleCall)cComponentsAssignment_14_3.eContents().get(0);
		private final Group cGroup_14_4 = (Group)cGroup_14.eContents().get(4);
		private final Keyword cCommaKeyword_14_4_0 = (Keyword)cGroup_14_4.eContents().get(0);
		private final Assignment cComponentsAssignment_14_4_1 = (Assignment)cGroup_14_4.eContents().get(1);
		private final RuleCall cComponentsComponentParserRuleCall_14_4_1_0 = (RuleCall)cComponentsAssignment_14_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14_5 = (Keyword)cGroup_14.eContents().get(5);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final Keyword cSemicolonKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Keyword cCountermeasuresKeyword_15_1 = (Keyword)cGroup_15.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_15_2 = (Keyword)cGroup_15.eContents().get(2);
		private final Assignment cCountermeasuresAssignment_15_3 = (Assignment)cGroup_15.eContents().get(3);
		private final RuleCall cCountermeasuresCounterMeasureParserRuleCall_15_3_0 = (RuleCall)cCountermeasuresAssignment_15_3.eContents().get(0);
		private final Group cGroup_15_4 = (Group)cGroup_15.eContents().get(4);
		private final Keyword cCommaKeyword_15_4_0 = (Keyword)cGroup_15_4.eContents().get(0);
		private final Assignment cCountermeasuresAssignment_15_4_1 = (Assignment)cGroup_15_4.eContents().get(1);
		private final RuleCall cCountermeasuresCounterMeasureParserRuleCall_15_4_1_0 = (RuleCall)cCountermeasuresAssignment_15_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_15_5 = (Keyword)cGroup_15.eContents().get(5);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Keyword cSemicolonKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Keyword cChannelsKeyword_16_1 = (Keyword)cGroup_16.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_16_2 = (Keyword)cGroup_16.eContents().get(2);
		private final Assignment cChannelsAssignment_16_3 = (Assignment)cGroup_16.eContents().get(3);
		private final RuleCall cChannelsChannelParserRuleCall_16_3_0 = (RuleCall)cChannelsAssignment_16_3.eContents().get(0);
		private final Group cGroup_16_4 = (Group)cGroup_16.eContents().get(4);
		private final Keyword cCommaKeyword_16_4_0 = (Keyword)cGroup_16_4.eContents().get(0);
		private final Assignment cChannelsAssignment_16_4_1 = (Assignment)cGroup_16_4.eContents().get(1);
		private final RuleCall cChannelsChannelParserRuleCall_16_4_1_0 = (RuleCall)cChannelsAssignment_16_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_16_5 = (Keyword)cGroup_16.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		
		//Conduit returns Conduit:
		//    (trusted?='trusted')?
		//    (physical?='physical')?
		//    'Conduit'
		//    name=ID
		//    '{'
		//        'connects' '(' connects+=[ClassicalZone] ( "," connects+=[ClassicalZone])* ')'  ';'
		//        'target' target=SecurityLevels
		//        (';' furtherDesc=FurtherZoneDescription)?
		//        (';' 'components' '{' components+=Component ( "," components+=Component)* '}' )?
		//        (';' 'countermeasures' '{' countermeasures+=counterMeasure ( "," countermeasures+=counterMeasure)* '}' )?
		//        (';' 'channels' '{' channels+=Channel ( "," channels+=Channel)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//(trusted?='trusted')?
		//(physical?='physical')?
		//'Conduit'
		//name=ID
		//'{'
		//    'connects' '(' connects+=[ClassicalZone] ( "," connects+=[ClassicalZone])* ')'  ';'
		//    'target' target=SecurityLevels
		//    (';' furtherDesc=FurtherZoneDescription)?
		//    (';' 'components' '{' components+=Component ( "," components+=Component)* '}' )?
		//    (';' 'countermeasures' '{' countermeasures+=counterMeasure ( "," countermeasures+=counterMeasure)* '}' )?
		//    (';' 'channels' '{' channels+=Channel ( "," channels+=Channel)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//(trusted?='trusted')?
		public Assignment getTrustedAssignment_0() { return cTrustedAssignment_0; }
		
		//'trusted'
		public Keyword getTrustedTrustedKeyword_0_0() { return cTrustedTrustedKeyword_0_0; }
		
		//(physical?='physical')?
		public Assignment getPhysicalAssignment_1() { return cPhysicalAssignment_1; }
		
		//'physical'
		public Keyword getPhysicalPhysicalKeyword_1_0() { return cPhysicalPhysicalKeyword_1_0; }
		
		//'Conduit'
		public Keyword getConduitKeyword_2() { return cConduitKeyword_2; }
		
		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//'connects'
		public Keyword getConnectsKeyword_5() { return cConnectsKeyword_5; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_6() { return cLeftParenthesisKeyword_6; }
		
		//connects+=[ClassicalZone]
		public Assignment getConnectsAssignment_7() { return cConnectsAssignment_7; }
		
		//[ClassicalZone]
		public CrossReference getConnectsClassicalZoneCrossReference_7_0() { return cConnectsClassicalZoneCrossReference_7_0; }
		
		//ID
		public RuleCall getConnectsClassicalZoneIDTerminalRuleCall_7_0_1() { return cConnectsClassicalZoneIDTerminalRuleCall_7_0_1; }
		
		//( "," connects+=[ClassicalZone])*
		public Group getGroup_8() { return cGroup_8; }
		
		//","
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }
		
		//connects+=[ClassicalZone]
		public Assignment getConnectsAssignment_8_1() { return cConnectsAssignment_8_1; }
		
		//[ClassicalZone]
		public CrossReference getConnectsClassicalZoneCrossReference_8_1_0() { return cConnectsClassicalZoneCrossReference_8_1_0; }
		
		//ID
		public RuleCall getConnectsClassicalZoneIDTerminalRuleCall_8_1_0_1() { return cConnectsClassicalZoneIDTerminalRuleCall_8_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_9() { return cRightParenthesisKeyword_9; }
		
		//';'
		public Keyword getSemicolonKeyword_10() { return cSemicolonKeyword_10; }
		
		//'target'
		public Keyword getTargetKeyword_11() { return cTargetKeyword_11; }
		
		//target=SecurityLevels
		public Assignment getTargetAssignment_12() { return cTargetAssignment_12; }
		
		//SecurityLevels
		public RuleCall getTargetSecurityLevelsParserRuleCall_12_0() { return cTargetSecurityLevelsParserRuleCall_12_0; }
		
		//(';' furtherDesc=FurtherZoneDescription)?
		public Group getGroup_13() { return cGroup_13; }
		
		//';'
		public Keyword getSemicolonKeyword_13_0() { return cSemicolonKeyword_13_0; }
		
		//furtherDesc=FurtherZoneDescription
		public Assignment getFurtherDescAssignment_13_1() { return cFurtherDescAssignment_13_1; }
		
		//FurtherZoneDescription
		public RuleCall getFurtherDescFurtherZoneDescriptionParserRuleCall_13_1_0() { return cFurtherDescFurtherZoneDescriptionParserRuleCall_13_1_0; }
		
		//(';' 'components' '{' components+=Component ( "," components+=Component)* '}' )?
		public Group getGroup_14() { return cGroup_14; }
		
		//';'
		public Keyword getSemicolonKeyword_14_0() { return cSemicolonKeyword_14_0; }
		
		//'components'
		public Keyword getComponentsKeyword_14_1() { return cComponentsKeyword_14_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_14_2() { return cLeftCurlyBracketKeyword_14_2; }
		
		//components+=Component
		public Assignment getComponentsAssignment_14_3() { return cComponentsAssignment_14_3; }
		
		//Component
		public RuleCall getComponentsComponentParserRuleCall_14_3_0() { return cComponentsComponentParserRuleCall_14_3_0; }
		
		//( "," components+=Component)*
		public Group getGroup_14_4() { return cGroup_14_4; }
		
		//","
		public Keyword getCommaKeyword_14_4_0() { return cCommaKeyword_14_4_0; }
		
		//components+=Component
		public Assignment getComponentsAssignment_14_4_1() { return cComponentsAssignment_14_4_1; }
		
		//Component
		public RuleCall getComponentsComponentParserRuleCall_14_4_1_0() { return cComponentsComponentParserRuleCall_14_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14_5() { return cRightCurlyBracketKeyword_14_5; }
		
		//(';' 'countermeasures' '{' countermeasures+=counterMeasure ( "," countermeasures+=counterMeasure)* '}' )?
		public Group getGroup_15() { return cGroup_15; }
		
		//';'
		public Keyword getSemicolonKeyword_15_0() { return cSemicolonKeyword_15_0; }
		
		//'countermeasures'
		public Keyword getCountermeasuresKeyword_15_1() { return cCountermeasuresKeyword_15_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_15_2() { return cLeftCurlyBracketKeyword_15_2; }
		
		//countermeasures+=counterMeasure
		public Assignment getCountermeasuresAssignment_15_3() { return cCountermeasuresAssignment_15_3; }
		
		//counterMeasure
		public RuleCall getCountermeasuresCounterMeasureParserRuleCall_15_3_0() { return cCountermeasuresCounterMeasureParserRuleCall_15_3_0; }
		
		//( "," countermeasures+=counterMeasure)*
		public Group getGroup_15_4() { return cGroup_15_4; }
		
		//","
		public Keyword getCommaKeyword_15_4_0() { return cCommaKeyword_15_4_0; }
		
		//countermeasures+=counterMeasure
		public Assignment getCountermeasuresAssignment_15_4_1() { return cCountermeasuresAssignment_15_4_1; }
		
		//counterMeasure
		public RuleCall getCountermeasuresCounterMeasureParserRuleCall_15_4_1_0() { return cCountermeasuresCounterMeasureParserRuleCall_15_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_15_5() { return cRightCurlyBracketKeyword_15_5; }
		
		//(';' 'channels' '{' channels+=Channel ( "," channels+=Channel)* '}' )?
		public Group getGroup_16() { return cGroup_16; }
		
		//';'
		public Keyword getSemicolonKeyword_16_0() { return cSemicolonKeyword_16_0; }
		
		//'channels'
		public Keyword getChannelsKeyword_16_1() { return cChannelsKeyword_16_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_16_2() { return cLeftCurlyBracketKeyword_16_2; }
		
		//channels+=Channel
		public Assignment getChannelsAssignment_16_3() { return cChannelsAssignment_16_3; }
		
		//Channel
		public RuleCall getChannelsChannelParserRuleCall_16_3_0() { return cChannelsChannelParserRuleCall_16_3_0; }
		
		//( "," channels+=Channel)*
		public Group getGroup_16_4() { return cGroup_16_4; }
		
		//","
		public Keyword getCommaKeyword_16_4_0() { return cCommaKeyword_16_4_0; }
		
		//channels+=Channel
		public Assignment getChannelsAssignment_16_4_1() { return cChannelsAssignment_16_4_1; }
		
		//Channel
		public RuleCall getChannelsChannelParserRuleCall_16_4_1_0() { return cChannelsChannelParserRuleCall_16_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_16_5() { return cRightCurlyBracketKeyword_16_5; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_17() { return cRightCurlyBracketKeyword_17; }
	}
	public class FurtherZoneDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.FurtherZoneDescription");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLogicalBoundaryAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cLogicalBoundarySTRINGTerminalRuleCall_0_0 = (RuleCall)cLogicalBoundaryAssignment_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPhysicalBoundaryAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPhysicalBoundarySTRINGTerminalRuleCall_2_0 = (RuleCall)cPhysicalBoundaryAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSemicolonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cOrganisationsKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cOrganizationsAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cOrganizationsSTRINGTerminalRuleCall_3_3_0 = (RuleCall)cOrganizationsAssignment_3_3.eContents().get(0);
		private final Group cGroup_3_4 = (Group)cGroup_3.eContents().get(4);
		private final Keyword cCommaKeyword_3_4_0 = (Keyword)cGroup_3_4.eContents().get(0);
		private final Assignment cOrganizationsAssignment_3_4_1 = (Assignment)cGroup_3_4.eContents().get(1);
		private final RuleCall cOrganizationsSTRINGTerminalRuleCall_3_4_1_0 = (RuleCall)cOrganizationsAssignment_3_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_5 = (Keyword)cGroup_3.eContents().get(5);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSemicolonKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cAccessPointsKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cPhysicalAccessPointsAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cPhysicalAccessPointsSTRINGTerminalRuleCall_4_3_0 = (RuleCall)cPhysicalAccessPointsAssignment_4_3.eContents().get(0);
		private final Group cGroup_4_4 = (Group)cGroup_4.eContents().get(4);
		private final Keyword cCommaKeyword_4_4_0 = (Keyword)cGroup_4_4.eContents().get(0);
		private final Assignment cPhysicalAccessPointsAssignment_4_4_1 = (Assignment)cGroup_4_4.eContents().get(1);
		private final RuleCall cPhysicalAccessPointsSTRINGTerminalRuleCall_4_4_1_0 = (RuleCall)cPhysicalAccessPointsAssignment_4_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_5 = (Keyword)cGroup_4.eContents().get(5);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSemicolonKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cPoliciesKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Assignment cSecurityPoliciesAssignment_5_3 = (Assignment)cGroup_5.eContents().get(3);
		private final RuleCall cSecurityPoliciesSTRINGTerminalRuleCall_5_3_0 = (RuleCall)cSecurityPoliciesAssignment_5_3.eContents().get(0);
		private final Group cGroup_5_4 = (Group)cGroup_5.eContents().get(4);
		private final Keyword cCommaKeyword_5_4_0 = (Keyword)cGroup_5_4.eContents().get(0);
		private final Assignment cSecurityPoliciesAssignment_5_4_1 = (Assignment)cGroup_5_4.eContents().get(1);
		private final RuleCall cSecurityPoliciesSTRINGTerminalRuleCall_5_4_1_0 = (RuleCall)cSecurityPoliciesAssignment_5_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_5 = (Keyword)cGroup_5.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cSemicolonKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cDataflowsKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cDataflowsAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final RuleCall cDataflowsDataflowParserRuleCall_6_3_0 = (RuleCall)cDataflowsAssignment_6_3.eContents().get(0);
		private final Group cGroup_6_4 = (Group)cGroup_6.eContents().get(4);
		private final Keyword cCommaKeyword_6_4_0 = (Keyword)cGroup_6_4.eContents().get(0);
		private final Assignment cDataflowsAssignment_6_4_1 = (Assignment)cGroup_6_4.eContents().get(1);
		private final RuleCall cDataflowsDataflowParserRuleCall_6_4_1_0 = (RuleCall)cDataflowsAssignment_6_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_5 = (Keyword)cGroup_6.eContents().get(5);
		
		//FurtherZoneDescription returns ZoneCharacteristics:
		//    logicalBoundary = STRING ';'
		//    physicalBoundary = STRING
		//    (';' 'organisations' '{' organizations+=STRING (',' organizations+=STRING)*'}')?
		//    (';' 'accessPoints' '{' physicalAccessPoints+=STRING (',' physicalAccessPoints+=STRING)*'}')?
		//    (';' 'policies' '{' securityPolicies+=STRING (',' securityPolicies+=STRING)*'}')?
		//    (';' 'dataflows' '{' dataflows+=Dataflow (',' dataflows+=Dataflow)*'}')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//logicalBoundary = STRING ';'
		//physicalBoundary = STRING
		//(';' 'organisations' '{' organizations+=STRING (',' organizations+=STRING)*'}')?
		//(';' 'accessPoints' '{' physicalAccessPoints+=STRING (',' physicalAccessPoints+=STRING)*'}')?
		//(';' 'policies' '{' securityPolicies+=STRING (',' securityPolicies+=STRING)*'}')?
		//(';' 'dataflows' '{' dataflows+=Dataflow (',' dataflows+=Dataflow)*'}')?
		public Group getGroup() { return cGroup; }
		
		//logicalBoundary = STRING
		public Assignment getLogicalBoundaryAssignment_0() { return cLogicalBoundaryAssignment_0; }
		
		//STRING
		public RuleCall getLogicalBoundarySTRINGTerminalRuleCall_0_0() { return cLogicalBoundarySTRINGTerminalRuleCall_0_0; }
		
		//';'
		public Keyword getSemicolonKeyword_1() { return cSemicolonKeyword_1; }
		
		//physicalBoundary = STRING
		public Assignment getPhysicalBoundaryAssignment_2() { return cPhysicalBoundaryAssignment_2; }
		
		//STRING
		public RuleCall getPhysicalBoundarySTRINGTerminalRuleCall_2_0() { return cPhysicalBoundarySTRINGTerminalRuleCall_2_0; }
		
		//(';' 'organisations' '{' organizations+=STRING (',' organizations+=STRING)*'}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//';'
		public Keyword getSemicolonKeyword_3_0() { return cSemicolonKeyword_3_0; }
		
		//'organisations'
		public Keyword getOrganisationsKeyword_3_1() { return cOrganisationsKeyword_3_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_2() { return cLeftCurlyBracketKeyword_3_2; }
		
		//organizations+=STRING
		public Assignment getOrganizationsAssignment_3_3() { return cOrganizationsAssignment_3_3; }
		
		//STRING
		public RuleCall getOrganizationsSTRINGTerminalRuleCall_3_3_0() { return cOrganizationsSTRINGTerminalRuleCall_3_3_0; }
		
		//(',' organizations+=STRING)*
		public Group getGroup_3_4() { return cGroup_3_4; }
		
		//','
		public Keyword getCommaKeyword_3_4_0() { return cCommaKeyword_3_4_0; }
		
		//organizations+=STRING
		public Assignment getOrganizationsAssignment_3_4_1() { return cOrganizationsAssignment_3_4_1; }
		
		//STRING
		public RuleCall getOrganizationsSTRINGTerminalRuleCall_3_4_1_0() { return cOrganizationsSTRINGTerminalRuleCall_3_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_5() { return cRightCurlyBracketKeyword_3_5; }
		
		//(';' 'accessPoints' '{' physicalAccessPoints+=STRING (',' physicalAccessPoints+=STRING)*'}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//';'
		public Keyword getSemicolonKeyword_4_0() { return cSemicolonKeyword_4_0; }
		
		//'accessPoints'
		public Keyword getAccessPointsKeyword_4_1() { return cAccessPointsKeyword_4_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_2() { return cLeftCurlyBracketKeyword_4_2; }
		
		//physicalAccessPoints+=STRING
		public Assignment getPhysicalAccessPointsAssignment_4_3() { return cPhysicalAccessPointsAssignment_4_3; }
		
		//STRING
		public RuleCall getPhysicalAccessPointsSTRINGTerminalRuleCall_4_3_0() { return cPhysicalAccessPointsSTRINGTerminalRuleCall_4_3_0; }
		
		//(',' physicalAccessPoints+=STRING)*
		public Group getGroup_4_4() { return cGroup_4_4; }
		
		//','
		public Keyword getCommaKeyword_4_4_0() { return cCommaKeyword_4_4_0; }
		
		//physicalAccessPoints+=STRING
		public Assignment getPhysicalAccessPointsAssignment_4_4_1() { return cPhysicalAccessPointsAssignment_4_4_1; }
		
		//STRING
		public RuleCall getPhysicalAccessPointsSTRINGTerminalRuleCall_4_4_1_0() { return cPhysicalAccessPointsSTRINGTerminalRuleCall_4_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_5() { return cRightCurlyBracketKeyword_4_5; }
		
		//(';' 'policies' '{' securityPolicies+=STRING (',' securityPolicies+=STRING)*'}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//';'
		public Keyword getSemicolonKeyword_5_0() { return cSemicolonKeyword_5_0; }
		
		//'policies'
		public Keyword getPoliciesKeyword_5_1() { return cPoliciesKeyword_5_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_2() { return cLeftCurlyBracketKeyword_5_2; }
		
		//securityPolicies+=STRING
		public Assignment getSecurityPoliciesAssignment_5_3() { return cSecurityPoliciesAssignment_5_3; }
		
		//STRING
		public RuleCall getSecurityPoliciesSTRINGTerminalRuleCall_5_3_0() { return cSecurityPoliciesSTRINGTerminalRuleCall_5_3_0; }
		
		//(',' securityPolicies+=STRING)*
		public Group getGroup_5_4() { return cGroup_5_4; }
		
		//','
		public Keyword getCommaKeyword_5_4_0() { return cCommaKeyword_5_4_0; }
		
		//securityPolicies+=STRING
		public Assignment getSecurityPoliciesAssignment_5_4_1() { return cSecurityPoliciesAssignment_5_4_1; }
		
		//STRING
		public RuleCall getSecurityPoliciesSTRINGTerminalRuleCall_5_4_1_0() { return cSecurityPoliciesSTRINGTerminalRuleCall_5_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_5() { return cRightCurlyBracketKeyword_5_5; }
		
		//(';' 'dataflows' '{' dataflows+=Dataflow (',' dataflows+=Dataflow)*'}')?
		public Group getGroup_6() { return cGroup_6; }
		
		//';'
		public Keyword getSemicolonKeyword_6_0() { return cSemicolonKeyword_6_0; }
		
		//'dataflows'
		public Keyword getDataflowsKeyword_6_1() { return cDataflowsKeyword_6_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_2() { return cLeftCurlyBracketKeyword_6_2; }
		
		//dataflows+=Dataflow
		public Assignment getDataflowsAssignment_6_3() { return cDataflowsAssignment_6_3; }
		
		//Dataflow
		public RuleCall getDataflowsDataflowParserRuleCall_6_3_0() { return cDataflowsDataflowParserRuleCall_6_3_0; }
		
		//(',' dataflows+=Dataflow)*
		public Group getGroup_6_4() { return cGroup_6_4; }
		
		//','
		public Keyword getCommaKeyword_6_4_0() { return cCommaKeyword_6_4_0; }
		
		//dataflows+=Dataflow
		public Assignment getDataflowsAssignment_6_4_1() { return cDataflowsAssignment_6_4_1; }
		
		//Dataflow
		public RuleCall getDataflowsDataflowParserRuleCall_6_4_1_0() { return cDataflowsDataflowParserRuleCall_6_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_5() { return cRightCurlyBracketKeyword_6_5; }
	}
	public class DataflowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.Dataflow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSourceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSourceComponentCrossReference_1_0 = (CrossReference)cSourceAssignment_1.eContents().get(0);
		private final RuleCall cSourceComponentIDTerminalRuleCall_1_0_1 = (RuleCall)cSourceComponentCrossReference_1_0.eContents().get(1);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDestinationAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cDestinationComponentCrossReference_3_0 = (CrossReference)cDestinationAssignment_3.eContents().get(0);
		private final RuleCall cDestinationComponentIDTerminalRuleCall_3_0_1 = (RuleCall)cDestinationComponentCrossReference_3_0.eContents().get(1);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cProtocolAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cProtocolSTRINGTerminalRuleCall_5_0 = (RuleCall)cProtocolAssignment_5.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//// Will need to define a specific scope for this rule
		//Dataflow returns DataFlow:
		//    "("
		//        source=[Component]  ','
		//        destination=[Component]','
		//        protocol=STRING
		//    ")"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//"("
		//    source=[Component]  ','
		//    destination=[Component]','
		//    protocol=STRING
		//")"
		public Group getGroup() { return cGroup; }
		
		//"("
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//source=[Component]
		public Assignment getSourceAssignment_1() { return cSourceAssignment_1; }
		
		//[Component]
		public CrossReference getSourceComponentCrossReference_1_0() { return cSourceComponentCrossReference_1_0; }
		
		//ID
		public RuleCall getSourceComponentIDTerminalRuleCall_1_0_1() { return cSourceComponentIDTerminalRuleCall_1_0_1; }
		
		//','
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }
		
		//destination=[Component]
		public Assignment getDestinationAssignment_3() { return cDestinationAssignment_3; }
		
		//[Component]
		public CrossReference getDestinationComponentCrossReference_3_0() { return cDestinationComponentCrossReference_3_0; }
		
		//ID
		public RuleCall getDestinationComponentIDTerminalRuleCall_3_0_1() { return cDestinationComponentIDTerminalRuleCall_3_0_1; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//protocol=STRING
		public Assignment getProtocolAssignment_5() { return cProtocolAssignment_5; }
		
		//STRING
		public RuleCall getProtocolSTRINGTerminalRuleCall_5_0() { return cProtocolSTRINGTerminalRuleCall_5_0; }
		
		//")"
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}
	public class DeviceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.Device");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cNetworkAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cNetworkNetworkKeyword_1_0_0 = (Keyword)cNetworkAssignment_1_0.eContents().get(0);
		private final Assignment cEmbeddedAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Keyword cEmbeddedEmbeddedKeyword_1_1_0 = (Keyword)cEmbeddedAssignment_1_1.eContents().get(0);
		private final Assignment cHostAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final Keyword cHostHostKeyword_1_2_0 = (Keyword)cHostAssignment_1_2.eContents().get(0);
		private final Keyword cDeviceKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cCapabilityKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cCapabilityAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cCapabilitySecurityLevelsParserRuleCall_5_0 = (RuleCall)cCapabilityAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cSemicolonKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cPropertiesKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cPropertiesAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final RuleCall cPropertiesPropertyParserRuleCall_6_3_0 = (RuleCall)cPropertiesAssignment_6_3.eContents().get(0);
		private final Group cGroup_6_4 = (Group)cGroup_6.eContents().get(4);
		private final Keyword cCommaKeyword_6_4_0 = (Keyword)cGroup_6_4.eContents().get(0);
		private final Assignment cPropertiesAssignment_6_4_1 = (Assignment)cGroup_6_4.eContents().get(1);
		private final RuleCall cPropertiesPropertyParserRuleCall_6_4_1_0 = (RuleCall)cPropertiesAssignment_6_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_5 = (Keyword)cGroup_6.eContents().get(5);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Device returns Device:
		//    '('
		//        (
		//            (network?='network')?
		//            (embedded?='embedded')?
		//            (host?='host')?
		//            'device'
		//        )?
		//        name=ID ';'
		//        'capability' capability=SecurityLevels
		//        (';' 'properties' '{' properties +=Property ( "," properties+=Property)*'}')?
		//    ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'('
		//    (
		//        (network?='network')?
		//        (embedded?='embedded')?
		//        (host?='host')?
		//        'device'
		//    )?
		//    name=ID ';'
		//    'capability' capability=SecurityLevels
		//    (';' 'properties' '{' properties +=Property ( "," properties+=Property)*'}')?
		//')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//(
		//    (network?='network')?
		//    (embedded?='embedded')?
		//    (host?='host')?
		//    'device'
		//)?
		public Group getGroup_1() { return cGroup_1; }
		
		//(network?='network')?
		public Assignment getNetworkAssignment_1_0() { return cNetworkAssignment_1_0; }
		
		//'network'
		public Keyword getNetworkNetworkKeyword_1_0_0() { return cNetworkNetworkKeyword_1_0_0; }
		
		//(embedded?='embedded')?
		public Assignment getEmbeddedAssignment_1_1() { return cEmbeddedAssignment_1_1; }
		
		//'embedded'
		public Keyword getEmbeddedEmbeddedKeyword_1_1_0() { return cEmbeddedEmbeddedKeyword_1_1_0; }
		
		//(host?='host')?
		public Assignment getHostAssignment_1_2() { return cHostAssignment_1_2; }
		
		//'host'
		public Keyword getHostHostKeyword_1_2_0() { return cHostHostKeyword_1_2_0; }
		
		//'device'
		public Keyword getDeviceKeyword_1_3() { return cDeviceKeyword_1_3; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
		
		//'capability'
		public Keyword getCapabilityKeyword_4() { return cCapabilityKeyword_4; }
		
		//capability=SecurityLevels
		public Assignment getCapabilityAssignment_5() { return cCapabilityAssignment_5; }
		
		//SecurityLevels
		public RuleCall getCapabilitySecurityLevelsParserRuleCall_5_0() { return cCapabilitySecurityLevelsParserRuleCall_5_0; }
		
		//(';' 'properties' '{' properties +=Property ( "," properties+=Property)*'}')?
		public Group getGroup_6() { return cGroup_6; }
		
		//';'
		public Keyword getSemicolonKeyword_6_0() { return cSemicolonKeyword_6_0; }
		
		//'properties'
		public Keyword getPropertiesKeyword_6_1() { return cPropertiesKeyword_6_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_2() { return cLeftCurlyBracketKeyword_6_2; }
		
		//properties +=Property
		public Assignment getPropertiesAssignment_6_3() { return cPropertiesAssignment_6_3; }
		
		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_6_3_0() { return cPropertiesPropertyParserRuleCall_6_3_0; }
		
		//( "," properties+=Property)*
		public Group getGroup_6_4() { return cGroup_6_4; }
		
		//","
		public Keyword getCommaKeyword_6_4_0() { return cCommaKeyword_6_4_0; }
		
		//properties+=Property
		public Assignment getPropertiesAssignment_6_4_1() { return cPropertiesAssignment_6_4_1; }
		
		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_6_4_1_0() { return cPropertiesPropertyParserRuleCall_6_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_5() { return cRightCurlyBracketKeyword_6_5; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}
	public class PropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.Property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//Property returns Property:
		//    name=ID '=' value=Value
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID '=' value=Value
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//value=Value
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_2_0() { return cValueValueParserRuleCall_2_0; }
	}
	public class SystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.System");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cSystemKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cCapabilityKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cCapabilityAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cCapabilitySecurityLevelsParserRuleCall_5_0 = (RuleCall)cCapabilityAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cSemicolonKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cDevicesKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cDevicesAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final RuleCall cDevicesDeviceParserRuleCall_6_3_0 = (RuleCall)cDevicesAssignment_6_3.eContents().get(0);
		private final Group cGroup_6_4 = (Group)cGroup_6.eContents().get(4);
		private final Keyword cCommaKeyword_6_4_0 = (Keyword)cGroup_6_4.eContents().get(0);
		private final Assignment cDevicesAssignment_6_4_1 = (Assignment)cGroup_6_4.eContents().get(1);
		private final RuleCall cDevicesDeviceParserRuleCall_6_4_1_0 = (RuleCall)cDevicesAssignment_6_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_5 = (Keyword)cGroup_6.eContents().get(5);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cSemicolonKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cPropertiesKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		private final Assignment cPropertiesAssignment_7_3 = (Assignment)cGroup_7.eContents().get(3);
		private final RuleCall cPropertiesPropertyParserRuleCall_7_3_0 = (RuleCall)cPropertiesAssignment_7_3.eContents().get(0);
		private final Group cGroup_7_4 = (Group)cGroup_7.eContents().get(4);
		private final Keyword cCommaKeyword_7_4_0 = (Keyword)cGroup_7_4.eContents().get(0);
		private final Assignment cPropertiesAssignment_7_4_1 = (Assignment)cGroup_7_4.eContents().get(1);
		private final RuleCall cPropertiesPropertyParserRuleCall_7_4_1_0 = (RuleCall)cPropertiesAssignment_7_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_5 = (Keyword)cGroup_7.eContents().get(5);
		private final Keyword cRightParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//System returns System:
		//    '('
		//        'system' name=ID ';'
		//        'capability' capability=SecurityLevels
		//        (';' 'devices' '{' devices+=Device ( "," devices+=Device)* '}' )?
		//        (';' 'properties' '{' properties +=Property ( "," properties+=Property)*'}')?
		//    ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'('
		//    'system' name=ID ';'
		//    'capability' capability=SecurityLevels
		//    (';' 'devices' '{' devices+=Device ( "," devices+=Device)* '}' )?
		//    (';' 'properties' '{' properties +=Property ( "," properties+=Property)*'}')?
		//')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//'system'
		public Keyword getSystemKeyword_1() { return cSystemKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
		
		//'capability'
		public Keyword getCapabilityKeyword_4() { return cCapabilityKeyword_4; }
		
		//capability=SecurityLevels
		public Assignment getCapabilityAssignment_5() { return cCapabilityAssignment_5; }
		
		//SecurityLevels
		public RuleCall getCapabilitySecurityLevelsParserRuleCall_5_0() { return cCapabilitySecurityLevelsParserRuleCall_5_0; }
		
		//(';' 'devices' '{' devices+=Device ( "," devices+=Device)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//';'
		public Keyword getSemicolonKeyword_6_0() { return cSemicolonKeyword_6_0; }
		
		//'devices'
		public Keyword getDevicesKeyword_6_1() { return cDevicesKeyword_6_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_2() { return cLeftCurlyBracketKeyword_6_2; }
		
		//devices+=Device
		public Assignment getDevicesAssignment_6_3() { return cDevicesAssignment_6_3; }
		
		//Device
		public RuleCall getDevicesDeviceParserRuleCall_6_3_0() { return cDevicesDeviceParserRuleCall_6_3_0; }
		
		//( "," devices+=Device)*
		public Group getGroup_6_4() { return cGroup_6_4; }
		
		//","
		public Keyword getCommaKeyword_6_4_0() { return cCommaKeyword_6_4_0; }
		
		//devices+=Device
		public Assignment getDevicesAssignment_6_4_1() { return cDevicesAssignment_6_4_1; }
		
		//Device
		public RuleCall getDevicesDeviceParserRuleCall_6_4_1_0() { return cDevicesDeviceParserRuleCall_6_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_5() { return cRightCurlyBracketKeyword_6_5; }
		
		//(';' 'properties' '{' properties +=Property ( "," properties+=Property)*'}')?
		public Group getGroup_7() { return cGroup_7; }
		
		//';'
		public Keyword getSemicolonKeyword_7_0() { return cSemicolonKeyword_7_0; }
		
		//'properties'
		public Keyword getPropertiesKeyword_7_1() { return cPropertiesKeyword_7_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_2() { return cLeftCurlyBracketKeyword_7_2; }
		
		//properties +=Property
		public Assignment getPropertiesAssignment_7_3() { return cPropertiesAssignment_7_3; }
		
		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_7_3_0() { return cPropertiesPropertyParserRuleCall_7_3_0; }
		
		//( "," properties+=Property)*
		public Group getGroup_7_4() { return cGroup_7_4; }
		
		//","
		public Keyword getCommaKeyword_7_4_0() { return cCommaKeyword_7_4_0; }
		
		//properties+=Property
		public Assignment getPropertiesAssignment_7_4_1() { return cPropertiesAssignment_7_4_1; }
		
		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_7_4_1_0() { return cPropertiesPropertyParserRuleCall_7_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_5() { return cRightCurlyBracketKeyword_7_5; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8() { return cRightParenthesisKeyword_8; }
	}
	public class ApplicationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.Application");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cApplicationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cExecutedKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cOnKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Assignment cExecutedOnAssignment_6_0 = (Assignment)cAlternatives_6.eContents().get(0);
		private final CrossReference cExecutedOnDeviceCrossReference_6_0_0 = (CrossReference)cExecutedOnAssignment_6_0.eContents().get(0);
		private final RuleCall cExecutedOnDeviceIDTerminalRuleCall_6_0_0_1 = (RuleCall)cExecutedOnDeviceCrossReference_6_0_0.eContents().get(1);
		private final Keyword cNothingKeyword_6_1 = (Keyword)cAlternatives_6.eContents().get(1);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cCapabilityKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cCapabilityAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cCapabilitySecurityLevelsParserRuleCall_9_0 = (RuleCall)cCapabilityAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cSemicolonKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cScoreCalcKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_10_2 = (Keyword)cGroup_10.eContents().get(2);
		private final Assignment cScoreExprAssignment_10_3 = (Assignment)cGroup_10.eContents().get(3);
		private final RuleCall cScoreExprNumberExpressionParserRuleCall_10_3_0 = (RuleCall)cScoreExprAssignment_10_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_10_4 = (Keyword)cGroup_10.eContents().get(4);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cSemicolonKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cConstraintsKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_11_2 = (Keyword)cGroup_11.eContents().get(2);
		private final Assignment cConstraintsAssignment_11_3 = (Assignment)cGroup_11.eContents().get(3);
		private final RuleCall cConstraintsConstraintParserRuleCall_11_3_0 = (RuleCall)cConstraintsAssignment_11_3.eContents().get(0);
		private final Group cGroup_11_4 = (Group)cGroup_11.eContents().get(4);
		private final Keyword cCommaKeyword_11_4_0 = (Keyword)cGroup_11_4.eContents().get(0);
		private final Assignment cConstraintsAssignment_11_4_1 = (Assignment)cGroup_11_4.eContents().get(1);
		private final RuleCall cConstraintsConstraintParserRuleCall_11_4_1_0 = (RuleCall)cConstraintsAssignment_11_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11_5 = (Keyword)cGroup_11.eContents().get(5);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cSemicolonKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cNeedsKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Keyword cLevelKeyword_12_2 = (Keyword)cGroup_12.eContents().get(2);
		private final Assignment cSLevelConstraintAssignment_12_3 = (Assignment)cGroup_12.eContents().get(3);
		private final RuleCall cSLevelConstraintSecurityLevelsParserRuleCall_12_3_0 = (RuleCall)cSLevelConstraintAssignment_12_3.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cSemicolonKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Keyword cCommunicatesKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Keyword cWithKeyword_13_2 = (Keyword)cGroup_13.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_13_3 = (Keyword)cGroup_13.eContents().get(3);
		private final Assignment cCommunicatesWithAssignment_13_4 = (Assignment)cGroup_13.eContents().get(4);
		private final CrossReference cCommunicatesWithComponentCrossReference_13_4_0 = (CrossReference)cCommunicatesWithAssignment_13_4.eContents().get(0);
		private final RuleCall cCommunicatesWithComponentIDTerminalRuleCall_13_4_0_1 = (RuleCall)cCommunicatesWithComponentCrossReference_13_4_0.eContents().get(1);
		private final Group cGroup_13_5 = (Group)cGroup_13.eContents().get(5);
		private final Keyword cCommaKeyword_13_5_0 = (Keyword)cGroup_13_5.eContents().get(0);
		private final Assignment cCommunicatesWithAssignment_13_5_1 = (Assignment)cGroup_13_5.eContents().get(1);
		private final CrossReference cCommunicatesWithComponentCrossReference_13_5_1_0 = (CrossReference)cCommunicatesWithAssignment_13_5_1.eContents().get(0);
		private final RuleCall cCommunicatesWithComponentIDTerminalRuleCall_13_5_1_0_1 = (RuleCall)cCommunicatesWithComponentCrossReference_13_5_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_13_6 = (Keyword)cGroup_13.eContents().get(6);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final Keyword cSemicolonKeyword_14_0 = (Keyword)cGroup_14.eContents().get(0);
		private final Keyword cPropertiesKeyword_14_1 = (Keyword)cGroup_14.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_14_2 = (Keyword)cGroup_14.eContents().get(2);
		private final Assignment cPropertiesAssignment_14_3 = (Assignment)cGroup_14.eContents().get(3);
		private final RuleCall cPropertiesPropertyParserRuleCall_14_3_0 = (RuleCall)cPropertiesAssignment_14_3.eContents().get(0);
		private final Group cGroup_14_4 = (Group)cGroup_14.eContents().get(4);
		private final Keyword cCommaKeyword_14_4_0 = (Keyword)cGroup_14_4.eContents().get(0);
		private final Assignment cPropertiesAssignment_14_4_1 = (Assignment)cGroup_14_4.eContents().get(1);
		private final RuleCall cPropertiesPropertyParserRuleCall_14_4_1_0 = (RuleCall)cPropertiesAssignment_14_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14_5 = (Keyword)cGroup_14.eContents().get(5);
		private final Keyword cRightParenthesisKeyword_15 = (Keyword)cGroup.eContents().get(15);
		
		//Application returns Application:
		//    '('
		//        'application' name=ID ';'
		//        'executed' 'on' (executedOn=[Device] | 'nothing') ';'
		//        'capability' capability=SecurityLevels
		//        (';' 'scoreCalc' '(' scoreExpr=NumberExpression ')' )?
		//        (';' 'constraints' '{' constraints +=Constraint ( "," constraints+=Constraint)*'}')?
		//        (';' 'needs' 'level' sLevelConstraint=SecurityLevels )?
		//        (';' 'communicates' 'with' '{' communicatesWith+=[Component] ( "," communicatesWith+=[Component])*'}')?
		//        (';' 'properties' '{' properties +=Property ( "," properties+=Property)*'}')?
		//    ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'('
		//    'application' name=ID ';'
		//    'executed' 'on' (executedOn=[Device] | 'nothing') ';'
		//    'capability' capability=SecurityLevels
		//    (';' 'scoreCalc' '(' scoreExpr=NumberExpression ')' )?
		//    (';' 'constraints' '{' constraints +=Constraint ( "," constraints+=Constraint)*'}')?
		//    (';' 'needs' 'level' sLevelConstraint=SecurityLevels )?
		//    (';' 'communicates' 'with' '{' communicatesWith+=[Component] ( "," communicatesWith+=[Component])*'}')?
		//    (';' 'properties' '{' properties +=Property ( "," properties+=Property)*'}')?
		//')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//'application'
		public Keyword getApplicationKeyword_1() { return cApplicationKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
		
		//'executed'
		public Keyword getExecutedKeyword_4() { return cExecutedKeyword_4; }
		
		//'on'
		public Keyword getOnKeyword_5() { return cOnKeyword_5; }
		
		//(executedOn=[Device] | 'nothing')
		public Alternatives getAlternatives_6() { return cAlternatives_6; }
		
		//executedOn=[Device]
		public Assignment getExecutedOnAssignment_6_0() { return cExecutedOnAssignment_6_0; }
		
		//[Device]
		public CrossReference getExecutedOnDeviceCrossReference_6_0_0() { return cExecutedOnDeviceCrossReference_6_0_0; }
		
		//ID
		public RuleCall getExecutedOnDeviceIDTerminalRuleCall_6_0_0_1() { return cExecutedOnDeviceIDTerminalRuleCall_6_0_0_1; }
		
		//'nothing'
		public Keyword getNothingKeyword_6_1() { return cNothingKeyword_6_1; }
		
		//';'
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
		
		//'capability'
		public Keyword getCapabilityKeyword_8() { return cCapabilityKeyword_8; }
		
		//capability=SecurityLevels
		public Assignment getCapabilityAssignment_9() { return cCapabilityAssignment_9; }
		
		//SecurityLevels
		public RuleCall getCapabilitySecurityLevelsParserRuleCall_9_0() { return cCapabilitySecurityLevelsParserRuleCall_9_0; }
		
		//(';' 'scoreCalc' '(' scoreExpr=NumberExpression ')' )?
		public Group getGroup_10() { return cGroup_10; }
		
		//';'
		public Keyword getSemicolonKeyword_10_0() { return cSemicolonKeyword_10_0; }
		
		//'scoreCalc'
		public Keyword getScoreCalcKeyword_10_1() { return cScoreCalcKeyword_10_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_10_2() { return cLeftParenthesisKeyword_10_2; }
		
		//scoreExpr=NumberExpression
		public Assignment getScoreExprAssignment_10_3() { return cScoreExprAssignment_10_3; }
		
		//NumberExpression
		public RuleCall getScoreExprNumberExpressionParserRuleCall_10_3_0() { return cScoreExprNumberExpressionParserRuleCall_10_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_10_4() { return cRightParenthesisKeyword_10_4; }
		
		//(';' 'constraints' '{' constraints +=Constraint ( "," constraints+=Constraint)*'}')?
		public Group getGroup_11() { return cGroup_11; }
		
		//';'
		public Keyword getSemicolonKeyword_11_0() { return cSemicolonKeyword_11_0; }
		
		//'constraints'
		public Keyword getConstraintsKeyword_11_1() { return cConstraintsKeyword_11_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_11_2() { return cLeftCurlyBracketKeyword_11_2; }
		
		//constraints +=Constraint
		public Assignment getConstraintsAssignment_11_3() { return cConstraintsAssignment_11_3; }
		
		//Constraint
		public RuleCall getConstraintsConstraintParserRuleCall_11_3_0() { return cConstraintsConstraintParserRuleCall_11_3_0; }
		
		//( "," constraints+=Constraint)*
		public Group getGroup_11_4() { return cGroup_11_4; }
		
		//","
		public Keyword getCommaKeyword_11_4_0() { return cCommaKeyword_11_4_0; }
		
		//constraints+=Constraint
		public Assignment getConstraintsAssignment_11_4_1() { return cConstraintsAssignment_11_4_1; }
		
		//Constraint
		public RuleCall getConstraintsConstraintParserRuleCall_11_4_1_0() { return cConstraintsConstraintParserRuleCall_11_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11_5() { return cRightCurlyBracketKeyword_11_5; }
		
		//(';' 'needs' 'level' sLevelConstraint=SecurityLevels )?
		public Group getGroup_12() { return cGroup_12; }
		
		//';'
		public Keyword getSemicolonKeyword_12_0() { return cSemicolonKeyword_12_0; }
		
		//'needs'
		public Keyword getNeedsKeyword_12_1() { return cNeedsKeyword_12_1; }
		
		//'level'
		public Keyword getLevelKeyword_12_2() { return cLevelKeyword_12_2; }
		
		//sLevelConstraint=SecurityLevels
		public Assignment getSLevelConstraintAssignment_12_3() { return cSLevelConstraintAssignment_12_3; }
		
		//SecurityLevels
		public RuleCall getSLevelConstraintSecurityLevelsParserRuleCall_12_3_0() { return cSLevelConstraintSecurityLevelsParserRuleCall_12_3_0; }
		
		//(';' 'communicates' 'with' '{' communicatesWith+=[Component] ( "," communicatesWith+=[Component])*'}')?
		public Group getGroup_13() { return cGroup_13; }
		
		//';'
		public Keyword getSemicolonKeyword_13_0() { return cSemicolonKeyword_13_0; }
		
		//'communicates'
		public Keyword getCommunicatesKeyword_13_1() { return cCommunicatesKeyword_13_1; }
		
		//'with'
		public Keyword getWithKeyword_13_2() { return cWithKeyword_13_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_13_3() { return cLeftCurlyBracketKeyword_13_3; }
		
		//communicatesWith+=[Component]
		public Assignment getCommunicatesWithAssignment_13_4() { return cCommunicatesWithAssignment_13_4; }
		
		//[Component]
		public CrossReference getCommunicatesWithComponentCrossReference_13_4_0() { return cCommunicatesWithComponentCrossReference_13_4_0; }
		
		//ID
		public RuleCall getCommunicatesWithComponentIDTerminalRuleCall_13_4_0_1() { return cCommunicatesWithComponentIDTerminalRuleCall_13_4_0_1; }
		
		//( "," communicatesWith+=[Component])*
		public Group getGroup_13_5() { return cGroup_13_5; }
		
		//","
		public Keyword getCommaKeyword_13_5_0() { return cCommaKeyword_13_5_0; }
		
		//communicatesWith+=[Component]
		public Assignment getCommunicatesWithAssignment_13_5_1() { return cCommunicatesWithAssignment_13_5_1; }
		
		//[Component]
		public CrossReference getCommunicatesWithComponentCrossReference_13_5_1_0() { return cCommunicatesWithComponentCrossReference_13_5_1_0; }
		
		//ID
		public RuleCall getCommunicatesWithComponentIDTerminalRuleCall_13_5_1_0_1() { return cCommunicatesWithComponentIDTerminalRuleCall_13_5_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13_6() { return cRightCurlyBracketKeyword_13_6; }
		
		//(';' 'properties' '{' properties +=Property ( "," properties+=Property)*'}')?
		public Group getGroup_14() { return cGroup_14; }
		
		//';'
		public Keyword getSemicolonKeyword_14_0() { return cSemicolonKeyword_14_0; }
		
		//'properties'
		public Keyword getPropertiesKeyword_14_1() { return cPropertiesKeyword_14_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_14_2() { return cLeftCurlyBracketKeyword_14_2; }
		
		//properties +=Property
		public Assignment getPropertiesAssignment_14_3() { return cPropertiesAssignment_14_3; }
		
		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_14_3_0() { return cPropertiesPropertyParserRuleCall_14_3_0; }
		
		//( "," properties+=Property)*
		public Group getGroup_14_4() { return cGroup_14_4; }
		
		//","
		public Keyword getCommaKeyword_14_4_0() { return cCommaKeyword_14_4_0; }
		
		//properties+=Property
		public Assignment getPropertiesAssignment_14_4_1() { return cPropertiesAssignment_14_4_1; }
		
		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_14_4_1_0() { return cPropertiesPropertyParserRuleCall_14_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14_5() { return cRightCurlyBracketKeyword_14_5; }
		
		//')'
		public Keyword getRightParenthesisKeyword_15() { return cRightParenthesisKeyword_15; }
	}
	public class NumberExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.NumberExpression");
		private final RuleCall cAdditionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//NumberExpression returns NumberExpression:
		//    Addition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Addition
		public RuleCall getAdditionParserRuleCall() { return cAdditionParserRuleCall; }
	}
	public class TernaryOpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.TernaryOp");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cIfKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOp1Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOp1ExpressionParserRuleCall_2_0 = (RuleCall)cOp1Assignment_2.eContents().get(0);
		private final Keyword cThenKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOp2Assignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOp2ExpressionParserRuleCall_4_0 = (RuleCall)cOp2Assignment_4.eContents().get(0);
		private final Keyword cElseKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cOp3Assignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cOp3ExpressionParserRuleCall_6_0 = (RuleCall)cOp3Assignment_6.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//TernaryOp returns TernaryOp:
		//    '(' 'if' op1=Expression 'then' op2=Expression 'else' op3 = Expression ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'(' 'if' op1=Expression 'then' op2=Expression 'else' op3 = Expression ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//'if'
		public Keyword getIfKeyword_1() { return cIfKeyword_1; }
		
		//op1=Expression
		public Assignment getOp1Assignment_2() { return cOp1Assignment_2; }
		
		//Expression
		public RuleCall getOp1ExpressionParserRuleCall_2_0() { return cOp1ExpressionParserRuleCall_2_0; }
		
		//'then'
		public Keyword getThenKeyword_3() { return cThenKeyword_3; }
		
		//op2=Expression
		public Assignment getOp2Assignment_4() { return cOp2Assignment_4; }
		
		//Expression
		public RuleCall getOp2ExpressionParserRuleCall_4_0() { return cOp2ExpressionParserRuleCall_4_0; }
		
		//'else'
		public Keyword getElseKeyword_5() { return cElseKeyword_5; }
		
		//op3 = Expression
		public Assignment getOp3Assignment_6() { return cOp3Assignment_6; }
		
		//Expression
		public RuleCall getOp3ExpressionParserRuleCall_6_0() { return cOp3ExpressionParserRuleCall_6_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}
	public class NumberOperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.NumberOperation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOperationAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOperationNumberOperationStartEnumRuleCall_0_0 = (RuleCall)cOperationAssignment_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOp1Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOp1NumberExpressionParserRuleCall_2_0 = (RuleCall)cOp1Assignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOp2Assignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOp2NumberExpressionParserRuleCall_4_0 = (RuleCall)cOp2Assignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//NumberOperation returns OperationNumber:
		//    operation=NumberOperationStart '(' op1=NumberExpression ',' op2=NumberExpression ')'
		////    |
		////    '(' op1=NumberExpression operation=NumberOperationMiddle op2=NumberExpression ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//operation=NumberOperationStart '(' op1=NumberExpression ',' op2=NumberExpression ')'
		public Group getGroup() { return cGroup; }
		
		//operation=NumberOperationStart
		public Assignment getOperationAssignment_0() { return cOperationAssignment_0; }
		
		//NumberOperationStart
		public RuleCall getOperationNumberOperationStartEnumRuleCall_0_0() { return cOperationNumberOperationStartEnumRuleCall_0_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//op1=NumberExpression
		public Assignment getOp1Assignment_2() { return cOp1Assignment_2; }
		
		//NumberExpression
		public RuleCall getOp1NumberExpressionParserRuleCall_2_0() { return cOp1NumberExpressionParserRuleCall_2_0; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//op2=NumberExpression
		public Assignment getOp2Assignment_4() { return cOp2Assignment_4; }
		
		//NumberExpression
		public RuleCall getOp2NumberExpressionParserRuleCall_4_0() { return cOp2NumberExpressionParserRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class AdditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.Addition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOpsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOpsSoustractionParserRuleCall_0_0 = (RuleCall)cOpsAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cOperationAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOperationNumberOperation1EnumRuleCall_1_0_0 = (RuleCall)cOperationAssignment_1_0.eContents().get(0);
		private final Assignment cOpsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOpsSoustractionParserRuleCall_1_1_0 = (RuleCall)cOpsAssignment_1_1.eContents().get(0);
		
		//Addition returns OperationNumberNary:
		//    ops+=Soustraction (operation=NumberOperation1 ops+=Soustraction)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ops+=Soustraction (operation=NumberOperation1 ops+=Soustraction)*
		public Group getGroup() { return cGroup; }
		
		//ops+=Soustraction
		public Assignment getOpsAssignment_0() { return cOpsAssignment_0; }
		
		//Soustraction
		public RuleCall getOpsSoustractionParserRuleCall_0_0() { return cOpsSoustractionParserRuleCall_0_0; }
		
		//(operation=NumberOperation1 ops+=Soustraction)*
		public Group getGroup_1() { return cGroup_1; }
		
		//operation=NumberOperation1
		public Assignment getOperationAssignment_1_0() { return cOperationAssignment_1_0; }
		
		//NumberOperation1
		public RuleCall getOperationNumberOperation1EnumRuleCall_1_0_0() { return cOperationNumberOperation1EnumRuleCall_1_0_0; }
		
		//ops+=Soustraction
		public Assignment getOpsAssignment_1_1() { return cOpsAssignment_1_1; }
		
		//Soustraction
		public RuleCall getOpsSoustractionParserRuleCall_1_1_0() { return cOpsSoustractionParserRuleCall_1_1_0; }
	}
	public class SoustractionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.Soustraction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOpsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOpsMultiplicationParserRuleCall_0_0 = (RuleCall)cOpsAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cOperationAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOperationNumberOperation2EnumRuleCall_1_0_0 = (RuleCall)cOperationAssignment_1_0.eContents().get(0);
		private final Assignment cOpsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOpsMultiplicationParserRuleCall_1_1_0 = (RuleCall)cOpsAssignment_1_1.eContents().get(0);
		
		//Soustraction returns OperationNumberNary:
		//    ops+=Multiplication (operation=NumberOperation2  ops+=Multiplication)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ops+=Multiplication (operation=NumberOperation2  ops+=Multiplication)*
		public Group getGroup() { return cGroup; }
		
		//ops+=Multiplication
		public Assignment getOpsAssignment_0() { return cOpsAssignment_0; }
		
		//Multiplication
		public RuleCall getOpsMultiplicationParserRuleCall_0_0() { return cOpsMultiplicationParserRuleCall_0_0; }
		
		//(operation=NumberOperation2  ops+=Multiplication)*
		public Group getGroup_1() { return cGroup_1; }
		
		//operation=NumberOperation2
		public Assignment getOperationAssignment_1_0() { return cOperationAssignment_1_0; }
		
		//NumberOperation2
		public RuleCall getOperationNumberOperation2EnumRuleCall_1_0_0() { return cOperationNumberOperation2EnumRuleCall_1_0_0; }
		
		//ops+=Multiplication
		public Assignment getOpsAssignment_1_1() { return cOpsAssignment_1_1; }
		
		//Multiplication
		public RuleCall getOpsMultiplicationParserRuleCall_1_1_0() { return cOpsMultiplicationParserRuleCall_1_1_0; }
	}
	public class MultiplicationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.Multiplication");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOpsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOpsDivisionParserRuleCall_0_0 = (RuleCall)cOpsAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cOperationAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOperationNumberOperation3EnumRuleCall_1_0_0 = (RuleCall)cOperationAssignment_1_0.eContents().get(0);
		private final Assignment cOpsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOpsDivisionParserRuleCall_1_1_0 = (RuleCall)cOpsAssignment_1_1.eContents().get(0);
		
		//Multiplication returns OperationNumberNary:
		//    ops+=Division (operation=NumberOperation3  ops+=Division)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ops+=Division (operation=NumberOperation3  ops+=Division)*
		public Group getGroup() { return cGroup; }
		
		//ops+=Division
		public Assignment getOpsAssignment_0() { return cOpsAssignment_0; }
		
		//Division
		public RuleCall getOpsDivisionParserRuleCall_0_0() { return cOpsDivisionParserRuleCall_0_0; }
		
		//(operation=NumberOperation3  ops+=Division)*
		public Group getGroup_1() { return cGroup_1; }
		
		//operation=NumberOperation3
		public Assignment getOperationAssignment_1_0() { return cOperationAssignment_1_0; }
		
		//NumberOperation3
		public RuleCall getOperationNumberOperation3EnumRuleCall_1_0_0() { return cOperationNumberOperation3EnumRuleCall_1_0_0; }
		
		//ops+=Division
		public Assignment getOpsAssignment_1_1() { return cOpsAssignment_1_1; }
		
		//Division
		public RuleCall getOpsDivisionParserRuleCall_1_1_0() { return cOpsDivisionParserRuleCall_1_1_0; }
	}
	public class DivisionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.Division");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOpsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOpsNumberParserRuleCall_0_0 = (RuleCall)cOpsAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cOperationAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOperationNumberOperation4EnumRuleCall_1_0_0 = (RuleCall)cOperationAssignment_1_0.eContents().get(0);
		private final Assignment cOpsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOpsNumberParserRuleCall_1_1_0 = (RuleCall)cOpsAssignment_1_1.eContents().get(0);
		
		//Division returns OperationNumberNary:
		//    ops+=Number (operation=NumberOperation4  ops+=Number)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ops+=Number (operation=NumberOperation4  ops+=Number)*
		public Group getGroup() { return cGroup; }
		
		//ops+=Number
		public Assignment getOpsAssignment_0() { return cOpsAssignment_0; }
		
		//Number
		public RuleCall getOpsNumberParserRuleCall_0_0() { return cOpsNumberParserRuleCall_0_0; }
		
		//(operation=NumberOperation4  ops+=Number)*
		public Group getGroup_1() { return cGroup_1; }
		
		//operation=NumberOperation4
		public Assignment getOperationAssignment_1_0() { return cOperationAssignment_1_0; }
		
		//NumberOperation4
		public RuleCall getOperationNumberOperation4EnumRuleCall_1_0_0() { return cOperationNumberOperation4EnumRuleCall_1_0_0; }
		
		//ops+=Number
		public Assignment getOpsAssignment_1_1() { return cOpsAssignment_1_1; }
		
		//Number
		public RuleCall getOpsNumberParserRuleCall_1_1_0() { return cOpsNumberParserRuleCall_1_1_0; }
	}
	public class NumberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.Number");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIntegerValueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFloatValueParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cNumericalKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cReferenceParserRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final RuleCall cTernaryOpParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Keyword cLeftParenthesisKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cAdditionParserRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final RuleCall cNumberOperationParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//Number returns NumberExpression:
		//    IntegerValue | FloatValue | 'numerical' Reference | TernaryOp | '('Addition')' | NumberOperation
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//IntegerValue | FloatValue | 'numerical' Reference | TernaryOp | '('Addition')' | NumberOperation
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//IntegerValue
		public RuleCall getIntegerValueParserRuleCall_0() { return cIntegerValueParserRuleCall_0; }
		
		//FloatValue
		public RuleCall getFloatValueParserRuleCall_1() { return cFloatValueParserRuleCall_1; }
		
		//'numerical' Reference
		public Group getGroup_2() { return cGroup_2; }
		
		//'numerical'
		public Keyword getNumericalKeyword_2_0() { return cNumericalKeyword_2_0; }
		
		//Reference
		public RuleCall getReferenceParserRuleCall_2_1() { return cReferenceParserRuleCall_2_1; }
		
		//TernaryOp
		public RuleCall getTernaryOpParserRuleCall_3() { return cTernaryOpParserRuleCall_3; }
		
		//'('Addition')'
		public Group getGroup_4() { return cGroup_4; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4_0() { return cLeftParenthesisKeyword_4_0; }
		
		//Addition
		public RuleCall getAdditionParserRuleCall_4_1() { return cAdditionParserRuleCall_4_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4_2() { return cRightParenthesisKeyword_4_2; }
		
		//NumberOperation
		public RuleCall getNumberOperationParserRuleCall_5() { return cNumberOperationParserRuleCall_5; }
	}
	public class ExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.Expression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNumberExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBooleanExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cStringExpressionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cReferenceParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Expression returns Expression:
		//    NumberExpression  | BooleanExpression | StringExpression | Reference
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//NumberExpression  | BooleanExpression | StringExpression | Reference
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NumberExpression
		public RuleCall getNumberExpressionParserRuleCall_0() { return cNumberExpressionParserRuleCall_0; }
		
		//BooleanExpression
		public RuleCall getBooleanExpressionParserRuleCall_1() { return cBooleanExpressionParserRuleCall_1; }
		
		//StringExpression
		public RuleCall getStringExpressionParserRuleCall_2() { return cStringExpressionParserRuleCall_2; }
		
		//Reference
		public RuleCall getReferenceParserRuleCall_3() { return cReferenceParserRuleCall_3; }
	}
	public class StringExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.StringExpression");
		private final RuleCall cStringValueParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//StringExpression returns StringExpression:
		//    StringValue
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//StringValue
		public RuleCall getStringValueParserRuleCall() { return cStringValueParserRuleCall; }
	}
	public class BooleanExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.BooleanExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBooleanValueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cComparisonParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//BooleanExpression returns BooleanExpression:
		//    BooleanValue | Comparison
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//BooleanValue | Comparison
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BooleanValue
		public RuleCall getBooleanValueParserRuleCall_0() { return cBooleanValueParserRuleCall_0; }
		
		//Comparison
		public RuleCall getComparisonParserRuleCall_1() { return cComparisonParserRuleCall_1; }
	}
	public class ComparisonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.Comparison");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cCmpKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOp1Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOp1ExpressionParserRuleCall_2_0 = (RuleCall)cOp1Assignment_2.eContents().get(0);
		private final Assignment cOperationAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOperationOperationEnumRuleCall_3_0 = (RuleCall)cOperationAssignment_3.eContents().get(0);
		private final Assignment cOp2Assignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOp2ExpressionParserRuleCall_4_0 = (RuleCall)cOp2Assignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Comparison returns Comparison:
		//    '(' 'cmp' op1 = Expression operation=Operation op2 = Expression ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'(' 'cmp' op1 = Expression operation=Operation op2 = Expression ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//'cmp'
		public Keyword getCmpKeyword_1() { return cCmpKeyword_1; }
		
		//op1 = Expression
		public Assignment getOp1Assignment_2() { return cOp1Assignment_2; }
		
		//Expression
		public RuleCall getOp1ExpressionParserRuleCall_2_0() { return cOp1ExpressionParserRuleCall_2_0; }
		
		//operation=Operation
		public Assignment getOperationAssignment_3() { return cOperationAssignment_3; }
		
		//Operation
		public RuleCall getOperationOperationEnumRuleCall_3_0() { return cOperationOperationEnumRuleCall_3_0; }
		
		//op2 = Expression
		public Assignment getOp2Assignment_4() { return cOp2Assignment_4; }
		
		//Expression
		public RuleCall getOp2ExpressionParserRuleCall_4_0() { return cOp2ExpressionParserRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class ChannelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.Channel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cConnectsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cConnectsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cConnectsComponentCrossReference_5_0 = (CrossReference)cConnectsAssignment_5.eContents().get(0);
		private final RuleCall cConnectsComponentIDTerminalRuleCall_5_0_1 = (RuleCall)cConnectsComponentCrossReference_5_0.eContents().get(1);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cConnectsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cConnectsComponentCrossReference_7_0 = (CrossReference)cConnectsAssignment_7.eContents().get(0);
		private final RuleCall cConnectsComponentIDTerminalRuleCall_7_0_1 = (RuleCall)cConnectsComponentCrossReference_7_0.eContents().get(1);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cConnectsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final CrossReference cConnectsComponentCrossReference_8_1_0 = (CrossReference)cConnectsAssignment_8_1.eContents().get(0);
		private final RuleCall cConnectsComponentIDTerminalRuleCall_8_1_0_1 = (RuleCall)cConnectsComponentCrossReference_8_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cRightParenthesisKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Channel returns Channel:
		//    '('
		//        name=ID ';'
		//        'connects' '{' connects+=[Component] "," connects+=[Component]  ( "," connects+=[Component])* '}'
		//    ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'('
		//    name=ID ';'
		//    'connects' '{' connects+=[Component] "," connects+=[Component]  ( "," connects+=[Component])* '}'
		//')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
		
		//'connects'
		public Keyword getConnectsKeyword_3() { return cConnectsKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//connects+=[Component]
		public Assignment getConnectsAssignment_5() { return cConnectsAssignment_5; }
		
		//[Component]
		public CrossReference getConnectsComponentCrossReference_5_0() { return cConnectsComponentCrossReference_5_0; }
		
		//ID
		public RuleCall getConnectsComponentIDTerminalRuleCall_5_0_1() { return cConnectsComponentIDTerminalRuleCall_5_0_1; }
		
		//","
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }
		
		//connects+=[Component]
		public Assignment getConnectsAssignment_7() { return cConnectsAssignment_7; }
		
		//[Component]
		public CrossReference getConnectsComponentCrossReference_7_0() { return cConnectsComponentCrossReference_7_0; }
		
		//ID
		public RuleCall getConnectsComponentIDTerminalRuleCall_7_0_1() { return cConnectsComponentIDTerminalRuleCall_7_0_1; }
		
		//( "," connects+=[Component])*
		public Group getGroup_8() { return cGroup_8; }
		
		//","
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }
		
		//connects+=[Component]
		public Assignment getConnectsAssignment_8_1() { return cConnectsAssignment_8_1; }
		
		//[Component]
		public CrossReference getConnectsComponentCrossReference_8_1_0() { return cConnectsComponentCrossReference_8_1_0; }
		
		//ID
		public RuleCall getConnectsComponentIDTerminalRuleCall_8_1_0_1() { return cConnectsComponentIDTerminalRuleCall_8_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
		
		//')'
		public Keyword getRightParenthesisKeyword_10() { return cRightParenthesisKeyword_10; }
	}
	public class ConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.Constraint");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPresenceConstraintParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cOperationConstraintParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Constraint returns Constraint:
		//    PresenceConstraint | OperationConstraint
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PresenceConstraint | OperationConstraint
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PresenceConstraint
		public RuleCall getPresenceConstraintParserRuleCall_0() { return cPresenceConstraintParserRuleCall_0; }
		
		//OperationConstraint
		public RuleCall getOperationConstraintParserRuleCall_1() { return cOperationConstraintParserRuleCall_1; }
	}
	public class PresenceConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.PresenceConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOptionalAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cOptionalOptionalKeyword_0_0 = (Keyword)cOptionalAssignment_0.eContents().get(0);
		private final Keyword cNeedsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPropertyNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPropertyNameIDTerminalRuleCall_2_0 = (RuleCall)cPropertyNameAssignment_2.eContents().get(0);
		
		//PresenceConstraint returns PresenceConstraint:
		//    (optional?='optional')?  'needs' propertyName=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(optional?='optional')?  'needs' propertyName=ID
		public Group getGroup() { return cGroup; }
		
		//(optional?='optional')?
		public Assignment getOptionalAssignment_0() { return cOptionalAssignment_0; }
		
		//'optional'
		public Keyword getOptionalOptionalKeyword_0_0() { return cOptionalOptionalKeyword_0_0; }
		
		//'needs'
		public Keyword getNeedsKeyword_1() { return cNeedsKeyword_1; }
		
		//propertyName=ID
		public Assignment getPropertyNameAssignment_2() { return cPropertyNameAssignment_2; }
		
		//ID
		public RuleCall getPropertyNameIDTerminalRuleCall_2_0() { return cPropertyNameIDTerminalRuleCall_2_0; }
	}
	public class OperationConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.OperationConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOptionalAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cOptionalOptionalKeyword_0_0 = (Keyword)cOptionalAssignment_0.eContents().get(0);
		private final Assignment cPropertyNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPropertyNameIDTerminalRuleCall_1_0 = (RuleCall)cPropertyNameAssignment_1.eContents().get(0);
		private final Assignment cOperationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOperationOperationEnumRuleCall_2_0 = (RuleCall)cOperationAssignment_2.eContents().get(0);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueValueOrReferenceParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		
		//OperationConstraint returns OperationConstraint:
		//    (optional?='optional')?  propertyName=ID operation=Operation value=ValueOrReference
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(optional?='optional')?  propertyName=ID operation=Operation value=ValueOrReference
		public Group getGroup() { return cGroup; }
		
		//(optional?='optional')?
		public Assignment getOptionalAssignment_0() { return cOptionalAssignment_0; }
		
		//'optional'
		public Keyword getOptionalOptionalKeyword_0_0() { return cOptionalOptionalKeyword_0_0; }
		
		//propertyName=ID
		public Assignment getPropertyNameAssignment_1() { return cPropertyNameAssignment_1; }
		
		//ID
		public RuleCall getPropertyNameIDTerminalRuleCall_1_0() { return cPropertyNameIDTerminalRuleCall_1_0; }
		
		//operation=Operation
		public Assignment getOperationAssignment_2() { return cOperationAssignment_2; }
		
		//Operation
		public RuleCall getOperationOperationEnumRuleCall_2_0() { return cOperationOperationEnumRuleCall_2_0; }
		
		//value=ValueOrReference
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//ValueOrReference
		public RuleCall getValueValueOrReferenceParserRuleCall_3_0() { return cValueValueOrReferenceParserRuleCall_3_0; }
	}
	public class ValueOrReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.ValueOrReference");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cValueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cReferenceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ValueOrReference returns ValueOrReference:
		//    Value | Reference
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Value | Reference
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Value
		public RuleCall getValueParserRuleCall_0() { return cValueParserRuleCall_0; }
		
		//Reference
		public RuleCall getReferenceParserRuleCall_1() { return cReferenceParserRuleCall_1; }
	}
	public class ReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.Reference");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSelfReferenceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDeviceReferenceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Reference returns Reference:
		//    SelfReference | DeviceReference
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//SelfReference | DeviceReference
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SelfReference
		public RuleCall getSelfReferenceParserRuleCall_0() { return cSelfReferenceParserRuleCall_0; }
		
		//DeviceReference
		public RuleCall getDeviceReferenceParserRuleCall_1() { return cDeviceReferenceParserRuleCall_1; }
	}
	public class DeviceReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.DeviceReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cReferenceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cReferenceSTRINGTerminalRuleCall_1_0 = (RuleCall)cReferenceAssignment_1.eContents().get(0);
		
		//DeviceReference returns DeviceReference:
		//    'ref' reference=STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'ref' reference=STRING
		public Group getGroup() { return cGroup; }
		
		//'ref'
		public Keyword getRefKeyword_0() { return cRefKeyword_0; }
		
		//reference=STRING
		public Assignment getReferenceAssignment_1() { return cReferenceAssignment_1; }
		
		//STRING
		public RuleCall getReferenceSTRINGTerminalRuleCall_1_0() { return cReferenceSTRINGTerminalRuleCall_1_0; }
	}
	public class SelfReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.SelfReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSelfKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cReferenceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cReferenceSTRINGTerminalRuleCall_1_0 = (RuleCall)cReferenceAssignment_1.eContents().get(0);
		
		//SelfReference returns SelfReference:
		//    'self' reference=STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'self' reference=STRING
		public Group getGroup() { return cGroup; }
		
		//'self'
		public Keyword getSelfKeyword_0() { return cSelfKeyword_0; }
		
		//reference=STRING
		public Assignment getReferenceAssignment_1() { return cReferenceAssignment_1; }
		
		//STRING
		public RuleCall getReferenceSTRINGTerminalRuleCall_1_0() { return cReferenceSTRINGTerminalRuleCall_1_0; }
	}
	public class ValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.Value");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBooleanValueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIntegerValueParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFloatValueParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cStringValueParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Value returns Value:
		//    BooleanValue | IntegerValue | FloatValue | StringValue
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//BooleanValue | IntegerValue | FloatValue | StringValue
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BooleanValue
		public RuleCall getBooleanValueParserRuleCall_0() { return cBooleanValueParserRuleCall_0; }
		
		//IntegerValue
		public RuleCall getIntegerValueParserRuleCall_1() { return cIntegerValueParserRuleCall_1; }
		
		//FloatValue
		public RuleCall getFloatValueParserRuleCall_2() { return cFloatValueParserRuleCall_2; }
		
		//StringValue
		public RuleCall getStringValueParserRuleCall_3() { return cStringValueParserRuleCall_3; }
	}
	public class BooleanValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.BooleanValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueBOOLTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//BooleanValue returns BooleanValue:
		//    value=BOOL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//value=BOOL
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//BOOL
		public RuleCall getValueBOOLTerminalRuleCall_0() { return cValueBOOLTerminalRuleCall_0; }
	}
	public class StringValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.StringValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//StringValue returns StringValue:
		//    value=STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//value=STRING
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_0() { return cValueSTRINGTerminalRuleCall_0; }
	}
	public class FloatValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.FloatValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueFLOATTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//FloatValue returns FloatValue:
		//    value=FLOAT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//value=FLOAT
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//FLOAT
		public RuleCall getValueFLOATTerminalRuleCall_0() { return cValueFLOATTerminalRuleCall_0; }
	}
	public class IntegerValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.IntegerValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueSINTTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//IntegerValue returns IntegerValue:
		//    value=SINT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//value=SINT
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//SINT
		public RuleCall getValueSINTTerminalRuleCall_0() { return cValueSINTTerminalRuleCall_0; }
	}
	public class PositiveIntegerValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.PositiveIntegerValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueSINTTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//PositiveIntegerValue returns IntegerValue:
		//    value=SINT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//value=SINT
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//SINT
		public RuleCall getValueSINTTerminalRuleCall_0() { return cValueSINTTerminalRuleCall_0; }
	}
	
	public class SecurityLevelElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.SecurityLevel");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSL0EnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSL0SL0Keyword_0_0 = (Keyword)cSL0EnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSL1EnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSL1SL1Keyword_1_0 = (Keyword)cSL1EnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSL2EnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSL2SL2Keyword_2_0 = (Keyword)cSL2EnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cSL3EnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cSL3SL3Keyword_3_0 = (Keyword)cSL3EnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cSL4EnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cSL4SL4Keyword_4_0 = (Keyword)cSL4EnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cNREnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cNRNRKeyword_5_0 = (Keyword)cNREnumLiteralDeclaration_5.eContents().get(0);
		
		//enum SecurityLevel returns SecurityLevel:
		//                SL0 = 'SL0' | SL1 = 'SL1' | SL2 = 'SL2' | SL3 = 'SL3' | SL4 = 'SL4' | NR = "NR";
		public EnumRule getRule() { return rule; }
		
		//SL0 = 'SL0' | SL1 = 'SL1' | SL2 = 'SL2' | SL3 = 'SL3' | SL4 = 'SL4' | NR = "NR"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SL0 = 'SL0'
		public EnumLiteralDeclaration getSL0EnumLiteralDeclaration_0() { return cSL0EnumLiteralDeclaration_0; }
		
		//'SL0'
		public Keyword getSL0SL0Keyword_0_0() { return cSL0SL0Keyword_0_0; }
		
		//SL1 = 'SL1'
		public EnumLiteralDeclaration getSL1EnumLiteralDeclaration_1() { return cSL1EnumLiteralDeclaration_1; }
		
		//'SL1'
		public Keyword getSL1SL1Keyword_1_0() { return cSL1SL1Keyword_1_0; }
		
		//SL2 = 'SL2'
		public EnumLiteralDeclaration getSL2EnumLiteralDeclaration_2() { return cSL2EnumLiteralDeclaration_2; }
		
		//'SL2'
		public Keyword getSL2SL2Keyword_2_0() { return cSL2SL2Keyword_2_0; }
		
		//SL3 = 'SL3'
		public EnumLiteralDeclaration getSL3EnumLiteralDeclaration_3() { return cSL3EnumLiteralDeclaration_3; }
		
		//'SL3'
		public Keyword getSL3SL3Keyword_3_0() { return cSL3SL3Keyword_3_0; }
		
		//SL4 = 'SL4'
		public EnumLiteralDeclaration getSL4EnumLiteralDeclaration_4() { return cSL4EnumLiteralDeclaration_4; }
		
		//'SL4'
		public Keyword getSL4SL4Keyword_4_0() { return cSL4SL4Keyword_4_0; }
		
		//NR = "NR"
		public EnumLiteralDeclaration getNREnumLiteralDeclaration_5() { return cNREnumLiteralDeclaration_5; }
		
		//"NR"
		public Keyword getNRNRKeyword_5_0() { return cNRNRKeyword_5_0; }
	}
	public class OperationElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.Operation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cEqEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cEqEqualsSignKeyword_0_0 = (Keyword)cEqEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNeEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNeExclamationMarkEqualsSignKeyword_1_0 = (Keyword)cNeEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cGtEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cGtGreaterThanSignKeyword_2_0 = (Keyword)cGtEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cGeEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cGeGreaterThanSignEqualsSignKeyword_3_0 = (Keyword)cGeEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cLeEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cLeLessThanSignEqualsSignKeyword_4_0 = (Keyword)cLeEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cLtEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cLtLessThanSignKeyword_5_0 = (Keyword)cLtEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum Operation returns Operation:
		//    eq = "=" | ne = "!=" | gt = ">" | ge = ">=" | le = "<=" | lt = "<"
		//;
		public EnumRule getRule() { return rule; }
		
		//eq = "=" | ne = "!=" | gt = ">" | ge = ">=" | le = "<=" | lt = "<"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//eq = "="
		public EnumLiteralDeclaration getEqEnumLiteralDeclaration_0() { return cEqEnumLiteralDeclaration_0; }
		
		//"="
		public Keyword getEqEqualsSignKeyword_0_0() { return cEqEqualsSignKeyword_0_0; }
		
		//ne = "!="
		public EnumLiteralDeclaration getNeEnumLiteralDeclaration_1() { return cNeEnumLiteralDeclaration_1; }
		
		//"!="
		public Keyword getNeExclamationMarkEqualsSignKeyword_1_0() { return cNeExclamationMarkEqualsSignKeyword_1_0; }
		
		//gt = ">"
		public EnumLiteralDeclaration getGtEnumLiteralDeclaration_2() { return cGtEnumLiteralDeclaration_2; }
		
		//">"
		public Keyword getGtGreaterThanSignKeyword_2_0() { return cGtGreaterThanSignKeyword_2_0; }
		
		//ge = ">="
		public EnumLiteralDeclaration getGeEnumLiteralDeclaration_3() { return cGeEnumLiteralDeclaration_3; }
		
		//">="
		public Keyword getGeGreaterThanSignEqualsSignKeyword_3_0() { return cGeGreaterThanSignEqualsSignKeyword_3_0; }
		
		//le = "<="
		public EnumLiteralDeclaration getLeEnumLiteralDeclaration_4() { return cLeEnumLiteralDeclaration_4; }
		
		//"<="
		public Keyword getLeLessThanSignEqualsSignKeyword_4_0() { return cLeLessThanSignEqualsSignKeyword_4_0; }
		
		//lt = "<"
		public EnumLiteralDeclaration getLtEnumLiteralDeclaration_5() { return cLtEnumLiteralDeclaration_5; }
		
		//"<"
		public Keyword getLtLessThanSignKeyword_5_0() { return cLtLessThanSignKeyword_5_0; }
	}
	public class NumberOperationMiddleElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.NumberOperationMiddle");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAddEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAddPlusSignKeyword_0_0 = (Keyword)cAddEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMinusEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMinusHyphenMinusKeyword_1_0 = (Keyword)cMinusEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMulEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMulAsteriskKeyword_2_0 = (Keyword)cMulEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDivEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDivSolidusKeyword_3_0 = (Keyword)cDivEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum NumberOperationMiddle returns NumberOperation:
		//    add = "+" | minus = "-" | mul = "*" | div = "/"
		//;
		public EnumRule getRule() { return rule; }
		
		//add = "+" | minus = "-" | mul = "*" | div = "/"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//add = "+"
		public EnumLiteralDeclaration getAddEnumLiteralDeclaration_0() { return cAddEnumLiteralDeclaration_0; }
		
		//"+"
		public Keyword getAddPlusSignKeyword_0_0() { return cAddPlusSignKeyword_0_0; }
		
		//minus = "-"
		public EnumLiteralDeclaration getMinusEnumLiteralDeclaration_1() { return cMinusEnumLiteralDeclaration_1; }
		
		//"-"
		public Keyword getMinusHyphenMinusKeyword_1_0() { return cMinusHyphenMinusKeyword_1_0; }
		
		//mul = "*"
		public EnumLiteralDeclaration getMulEnumLiteralDeclaration_2() { return cMulEnumLiteralDeclaration_2; }
		
		//"*"
		public Keyword getMulAsteriskKeyword_2_0() { return cMulAsteriskKeyword_2_0; }
		
		//div = "/"
		public EnumLiteralDeclaration getDivEnumLiteralDeclaration_3() { return cDivEnumLiteralDeclaration_3; }
		
		//"/"
		public Keyword getDivSolidusKeyword_3_0() { return cDivSolidusKeyword_3_0; }
	}
	public class NumberOperation1Elements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.NumberOperation1");
		private final EnumLiteralDeclaration cAddEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cAddPlusSignKeyword_0 = (Keyword)cAddEnumLiteralDeclaration.eContents().get(0);
		
		//enum NumberOperation1 returns NumberOperation:
		//    add = "+"
		//;
		public EnumRule getRule() { return rule; }
		
		//add = "+"
		public EnumLiteralDeclaration getAddEnumLiteralDeclaration() { return cAddEnumLiteralDeclaration; }
		
		//"+"
		public Keyword getAddPlusSignKeyword_0() { return cAddPlusSignKeyword_0; }
	}
	public class NumberOperation2Elements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.NumberOperation2");
		private final EnumLiteralDeclaration cMinusEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cMinusHyphenMinusKeyword_0 = (Keyword)cMinusEnumLiteralDeclaration.eContents().get(0);
		
		//enum NumberOperation2 returns NumberOperation:
		//    minus = "-"
		//;
		public EnumRule getRule() { return rule; }
		
		//minus = "-"
		public EnumLiteralDeclaration getMinusEnumLiteralDeclaration() { return cMinusEnumLiteralDeclaration; }
		
		//"-"
		public Keyword getMinusHyphenMinusKeyword_0() { return cMinusHyphenMinusKeyword_0; }
	}
	public class NumberOperation3Elements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.NumberOperation3");
		private final EnumLiteralDeclaration cMulEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cMulAsteriskKeyword_0 = (Keyword)cMulEnumLiteralDeclaration.eContents().get(0);
		
		//enum NumberOperation3 returns NumberOperation:
		//    mul = "*"
		//;
		public EnumRule getRule() { return rule; }
		
		//mul = "*"
		public EnumLiteralDeclaration getMulEnumLiteralDeclaration() { return cMulEnumLiteralDeclaration; }
		
		//"*"
		public Keyword getMulAsteriskKeyword_0() { return cMulAsteriskKeyword_0; }
	}
	public class NumberOperation4Elements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.NumberOperation4");
		private final EnumLiteralDeclaration cDivEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cDivSolidusKeyword_0 = (Keyword)cDivEnumLiteralDeclaration.eContents().get(0);
		
		//enum NumberOperation4 returns NumberOperation:
		//    div = "/"
		//;
		public EnumRule getRule() { return rule; }
		
		//div = "/"
		public EnumLiteralDeclaration getDivEnumLiteralDeclaration() { return cDivEnumLiteralDeclaration; }
		
		//"/"
		public Keyword getDivSolidusKeyword_0() { return cDivSolidusKeyword_0; }
	}
	public class NumberOperationStartElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.NumberOperationStart");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMaxEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMaxMaxKeyword_0_0 = (Keyword)cMaxEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMinEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMinMinKeyword_1_0 = (Keyword)cMinEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum NumberOperationStart returns NumberOperationFunction:
		//    max = "max" | min = "min"
		//;
		public EnumRule getRule() { return rule; }
		
		//max = "max" | min = "min"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//max = "max"
		public EnumLiteralDeclaration getMaxEnumLiteralDeclaration_0() { return cMaxEnumLiteralDeclaration_0; }
		
		//"max"
		public Keyword getMaxMaxKeyword_0_0() { return cMaxMaxKeyword_0_0; }
		
		//min = "min"
		public EnumLiteralDeclaration getMinEnumLiteralDeclaration_1() { return cMinEnumLiteralDeclaration_1; }
		
		//"min"
		public Keyword getMinMinKeyword_1_0() { return cMinMinKeyword_1_0; }
	}
	
	private final ModelElements pModel;
	private final ComponentElements pComponent;
	private final ZoneElements pZone;
	private final ClassicalZoneElements pClassicalZone;
	private final SecurityLevelsElements pSecurityLevels;
	private final CounterMeasureElements pCounterMeasure;
	private final ConduitElements pConduit;
	private final FurtherZoneDescriptionElements pFurtherZoneDescription;
	private final DataflowElements pDataflow;
	private final SecurityLevelElements eSecurityLevel;
	private final DeviceElements pDevice;
	private final PropertyElements pProperty;
	private final SystemElements pSystem;
	private final ApplicationElements pApplication;
	private final NumberExpressionElements pNumberExpression;
	private final TernaryOpElements pTernaryOp;
	private final NumberOperationElements pNumberOperation;
	private final AdditionElements pAddition;
	private final SoustractionElements pSoustraction;
	private final MultiplicationElements pMultiplication;
	private final DivisionElements pDivision;
	private final NumberElements pNumber;
	private final ExpressionElements pExpression;
	private final StringExpressionElements pStringExpression;
	private final BooleanExpressionElements pBooleanExpression;
	private final ComparisonElements pComparison;
	private final ChannelElements pChannel;
	private final ConstraintElements pConstraint;
	private final PresenceConstraintElements pPresenceConstraint;
	private final OperationConstraintElements pOperationConstraint;
	private final ValueOrReferenceElements pValueOrReference;
	private final ReferenceElements pReference;
	private final DeviceReferenceElements pDeviceReference;
	private final SelfReferenceElements pSelfReference;
	private final ValueElements pValue;
	private final BooleanValueElements pBooleanValue;
	private final StringValueElements pStringValue;
	private final FloatValueElements pFloatValue;
	private final IntegerValueElements pIntegerValue;
	private final TerminalRule tBOOL;
	private final TerminalRule tSINT;
	private final TerminalRule tFLOAT;
	private final OperationElements eOperation;
	private final NumberOperationMiddleElements eNumberOperationMiddle;
	private final NumberOperation1Elements eNumberOperation1;
	private final NumberOperation2Elements eNumberOperation2;
	private final NumberOperation3Elements eNumberOperation3;
	private final NumberOperation4Elements eNumberOperation4;
	private final NumberOperationStartElements eNumberOperationStart;
	private final PositiveIntegerValueElements pPositiveIntegerValue;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MiecGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pComponent = new ComponentElements();
		this.pZone = new ZoneElements();
		this.pClassicalZone = new ClassicalZoneElements();
		this.pSecurityLevels = new SecurityLevelsElements();
		this.pCounterMeasure = new CounterMeasureElements();
		this.pConduit = new ConduitElements();
		this.pFurtherZoneDescription = new FurtherZoneDescriptionElements();
		this.pDataflow = new DataflowElements();
		this.eSecurityLevel = new SecurityLevelElements();
		this.pDevice = new DeviceElements();
		this.pProperty = new PropertyElements();
		this.pSystem = new SystemElements();
		this.pApplication = new ApplicationElements();
		this.pNumberExpression = new NumberExpressionElements();
		this.pTernaryOp = new TernaryOpElements();
		this.pNumberOperation = new NumberOperationElements();
		this.pAddition = new AdditionElements();
		this.pSoustraction = new SoustractionElements();
		this.pMultiplication = new MultiplicationElements();
		this.pDivision = new DivisionElements();
		this.pNumber = new NumberElements();
		this.pExpression = new ExpressionElements();
		this.pStringExpression = new StringExpressionElements();
		this.pBooleanExpression = new BooleanExpressionElements();
		this.pComparison = new ComparisonElements();
		this.pChannel = new ChannelElements();
		this.pConstraint = new ConstraintElements();
		this.pPresenceConstraint = new PresenceConstraintElements();
		this.pOperationConstraint = new OperationConstraintElements();
		this.pValueOrReference = new ValueOrReferenceElements();
		this.pReference = new ReferenceElements();
		this.pDeviceReference = new DeviceReferenceElements();
		this.pSelfReference = new SelfReferenceElements();
		this.pValue = new ValueElements();
		this.pBooleanValue = new BooleanValueElements();
		this.pStringValue = new StringValueElements();
		this.pFloatValue = new FloatValueElements();
		this.pIntegerValue = new IntegerValueElements();
		this.tBOOL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.BOOL");
		this.tSINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.SINT");
		this.tFLOAT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.iec62443.baseModel.Miec.FLOAT");
		this.eOperation = new OperationElements();
		this.eNumberOperationMiddle = new NumberOperationMiddleElements();
		this.eNumberOperation1 = new NumberOperation1Elements();
		this.eNumberOperation2 = new NumberOperation2Elements();
		this.eNumberOperation3 = new NumberOperation3Elements();
		this.eNumberOperation4 = new NumberOperation4Elements();
		this.eNumberOperationStart = new NumberOperationStartElements();
		this.pPositiveIntegerValue = new PositiveIntegerValueElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.iec62443.baseModel.Miec".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model returns Model:
	//    {Model}
	//    (
	//        'Model' 'description' '{'
	//            'name' '=' name=ID ';'
	//            'function' '=' function=STRING ';'
	//            'equipment' '=' equipmentDescription=STRING ';'
	//            'assumptions' '=' assumptionsOnLocation=STRING ';'
	//        '}'
	//    )?
	//    (
	//        zones+=ClassicalZone |
	//        conduits+=Conduit
	//    )*
	//    ;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Component returns Component:
	//    Device | System | Application;
	public ComponentElements getComponentAccess() {
		return pComponent;
	}
	
	public ParserRule getComponentRule() {
		return getComponentAccess().getRule();
	}
	
	//Zone returns Zone:
	//    ClassicalZone | Conduit
	//;
	public ZoneElements getZoneAccess() {
		return pZone;
	}
	
	public ParserRule getZoneRule() {
		return getZoneAccess().getRule();
	}
	
	//ClassicalZone returns ClassicalZone:
	//    (trusted?='trusted')?
	//    (physical?='physical')?
	//    'Zone'
	//    name=ID
	//    '{'
	//        'target' target=SecurityLevels
	//        (';' furtherDesc=FurtherZoneDescription)?
	//        (';' 'components' '{' components+=Component ( "," components+=Component)* '}')?
	//        (';' 'countermeasures' '{' countermeasures+=counterMeasure ( "," countermeasures+=counterMeasure)* '}' )?
	//        (";" 'subzones' '{' subZones+=Zone (';' subZones+=Zone)* '}' )?
	//    '}';
	public ClassicalZoneElements getClassicalZoneAccess() {
		return pClassicalZone;
	}
	
	public ParserRule getClassicalZoneRule() {
		return getClassicalZoneAccess().getRule();
	}
	
	//SecurityLevels returns SecurityLevels:
	//    '['
	//        accessControl=SecurityLevel ','
	//        useControl=SecurityLevel ','
	//        systemIntegrity=SecurityLevel ','
	//        dataConfidentiality=SecurityLevel ','
	//        restrictedDataFlow=SecurityLevel ','
	//        timelyResponse=SecurityLevel ','
	//        resourceAvailability=SecurityLevel
	//    ']';
	public SecurityLevelsElements getSecurityLevelsAccess() {
		return pSecurityLevels;
	}
	
	public ParserRule getSecurityLevelsRule() {
		return getSecurityLevelsAccess().getRule();
	}
	
	//counterMeasure returns CounterMeasure:
	//    '('
	//    (inactive?='inactive')? name=ID ';'
	//        'capability' capability=SecurityLevels
	//        (';' 'cost' cost = PositiveIntegerValue)?
	//    ')';
	public CounterMeasureElements getCounterMeasureAccess() {
		return pCounterMeasure;
	}
	
	public ParserRule getCounterMeasureRule() {
		return getCounterMeasureAccess().getRule();
	}
	
	//Conduit returns Conduit:
	//    (trusted?='trusted')?
	//    (physical?='physical')?
	//    'Conduit'
	//    name=ID
	//    '{'
	//        'connects' '(' connects+=[ClassicalZone] ( "," connects+=[ClassicalZone])* ')'  ';'
	//        'target' target=SecurityLevels
	//        (';' furtherDesc=FurtherZoneDescription)?
	//        (';' 'components' '{' components+=Component ( "," components+=Component)* '}' )?
	//        (';' 'countermeasures' '{' countermeasures+=counterMeasure ( "," countermeasures+=counterMeasure)* '}' )?
	//        (';' 'channels' '{' channels+=Channel ( "," channels+=Channel)* '}' )?
	//    '}';
	public ConduitElements getConduitAccess() {
		return pConduit;
	}
	
	public ParserRule getConduitRule() {
		return getConduitAccess().getRule();
	}
	
	//FurtherZoneDescription returns ZoneCharacteristics:
	//    logicalBoundary = STRING ';'
	//    physicalBoundary = STRING
	//    (';' 'organisations' '{' organizations+=STRING (',' organizations+=STRING)*'}')?
	//    (';' 'accessPoints' '{' physicalAccessPoints+=STRING (',' physicalAccessPoints+=STRING)*'}')?
	//    (';' 'policies' '{' securityPolicies+=STRING (',' securityPolicies+=STRING)*'}')?
	//    (';' 'dataflows' '{' dataflows+=Dataflow (',' dataflows+=Dataflow)*'}')?
	//;
	public FurtherZoneDescriptionElements getFurtherZoneDescriptionAccess() {
		return pFurtherZoneDescription;
	}
	
	public ParserRule getFurtherZoneDescriptionRule() {
		return getFurtherZoneDescriptionAccess().getRule();
	}
	
	//// Will need to define a specific scope for this rule
	//Dataflow returns DataFlow:
	//    "("
	//        source=[Component]  ','
	//        destination=[Component]','
	//        protocol=STRING
	//    ")"
	//;
	public DataflowElements getDataflowAccess() {
		return pDataflow;
	}
	
	public ParserRule getDataflowRule() {
		return getDataflowAccess().getRule();
	}
	
	//enum SecurityLevel returns SecurityLevel:
	//                SL0 = 'SL0' | SL1 = 'SL1' | SL2 = 'SL2' | SL3 = 'SL3' | SL4 = 'SL4' | NR = "NR";
	public SecurityLevelElements getSecurityLevelAccess() {
		return eSecurityLevel;
	}
	
	public EnumRule getSecurityLevelRule() {
		return getSecurityLevelAccess().getRule();
	}
	
	//Device returns Device:
	//    '('
	//        (
	//            (network?='network')?
	//            (embedded?='embedded')?
	//            (host?='host')?
	//            'device'
	//        )?
	//        name=ID ';'
	//        'capability' capability=SecurityLevels
	//        (';' 'properties' '{' properties +=Property ( "," properties+=Property)*'}')?
	//    ')';
	public DeviceElements getDeviceAccess() {
		return pDevice;
	}
	
	public ParserRule getDeviceRule() {
		return getDeviceAccess().getRule();
	}
	
	//Property returns Property:
	//    name=ID '=' value=Value
	//;
	public PropertyElements getPropertyAccess() {
		return pProperty;
	}
	
	public ParserRule getPropertyRule() {
		return getPropertyAccess().getRule();
	}
	
	//System returns System:
	//    '('
	//        'system' name=ID ';'
	//        'capability' capability=SecurityLevels
	//        (';' 'devices' '{' devices+=Device ( "," devices+=Device)* '}' )?
	//        (';' 'properties' '{' properties +=Property ( "," properties+=Property)*'}')?
	//    ')';
	public SystemElements getSystemAccess() {
		return pSystem;
	}
	
	public ParserRule getSystemRule() {
		return getSystemAccess().getRule();
	}
	
	//Application returns Application:
	//    '('
	//        'application' name=ID ';'
	//        'executed' 'on' (executedOn=[Device] | 'nothing') ';'
	//        'capability' capability=SecurityLevels
	//        (';' 'scoreCalc' '(' scoreExpr=NumberExpression ')' )?
	//        (';' 'constraints' '{' constraints +=Constraint ( "," constraints+=Constraint)*'}')?
	//        (';' 'needs' 'level' sLevelConstraint=SecurityLevels )?
	//        (';' 'communicates' 'with' '{' communicatesWith+=[Component] ( "," communicatesWith+=[Component])*'}')?
	//        (';' 'properties' '{' properties +=Property ( "," properties+=Property)*'}')?
	//    ')'
	//;
	public ApplicationElements getApplicationAccess() {
		return pApplication;
	}
	
	public ParserRule getApplicationRule() {
		return getApplicationAccess().getRule();
	}
	
	//NumberExpression returns NumberExpression:
	//    Addition
	//;
	public NumberExpressionElements getNumberExpressionAccess() {
		return pNumberExpression;
	}
	
	public ParserRule getNumberExpressionRule() {
		return getNumberExpressionAccess().getRule();
	}
	
	//TernaryOp returns TernaryOp:
	//    '(' 'if' op1=Expression 'then' op2=Expression 'else' op3 = Expression ')'
	//;
	public TernaryOpElements getTernaryOpAccess() {
		return pTernaryOp;
	}
	
	public ParserRule getTernaryOpRule() {
		return getTernaryOpAccess().getRule();
	}
	
	//NumberOperation returns OperationNumber:
	//    operation=NumberOperationStart '(' op1=NumberExpression ',' op2=NumberExpression ')'
	////    |
	////    '(' op1=NumberExpression operation=NumberOperationMiddle op2=NumberExpression ')'
	//;
	public NumberOperationElements getNumberOperationAccess() {
		return pNumberOperation;
	}
	
	public ParserRule getNumberOperationRule() {
		return getNumberOperationAccess().getRule();
	}
	
	//Addition returns OperationNumberNary:
	//    ops+=Soustraction (operation=NumberOperation1 ops+=Soustraction)*
	//;
	public AdditionElements getAdditionAccess() {
		return pAddition;
	}
	
	public ParserRule getAdditionRule() {
		return getAdditionAccess().getRule();
	}
	
	//Soustraction returns OperationNumberNary:
	//    ops+=Multiplication (operation=NumberOperation2  ops+=Multiplication)*
	//;
	public SoustractionElements getSoustractionAccess() {
		return pSoustraction;
	}
	
	public ParserRule getSoustractionRule() {
		return getSoustractionAccess().getRule();
	}
	
	//Multiplication returns OperationNumberNary:
	//    ops+=Division (operation=NumberOperation3  ops+=Division)*
	//;
	public MultiplicationElements getMultiplicationAccess() {
		return pMultiplication;
	}
	
	public ParserRule getMultiplicationRule() {
		return getMultiplicationAccess().getRule();
	}
	
	//Division returns OperationNumberNary:
	//    ops+=Number (operation=NumberOperation4  ops+=Number)*
	//;
	public DivisionElements getDivisionAccess() {
		return pDivision;
	}
	
	public ParserRule getDivisionRule() {
		return getDivisionAccess().getRule();
	}
	
	//Number returns NumberExpression:
	//    IntegerValue | FloatValue | 'numerical' Reference | TernaryOp | '('Addition')' | NumberOperation
	//;
	public NumberElements getNumberAccess() {
		return pNumber;
	}
	
	public ParserRule getNumberRule() {
		return getNumberAccess().getRule();
	}
	
	//Expression returns Expression:
	//    NumberExpression  | BooleanExpression | StringExpression | Reference
	//;
	public ExpressionElements getExpressionAccess() {
		return pExpression;
	}
	
	public ParserRule getExpressionRule() {
		return getExpressionAccess().getRule();
	}
	
	//StringExpression returns StringExpression:
	//    StringValue
	//;
	public StringExpressionElements getStringExpressionAccess() {
		return pStringExpression;
	}
	
	public ParserRule getStringExpressionRule() {
		return getStringExpressionAccess().getRule();
	}
	
	//BooleanExpression returns BooleanExpression:
	//    BooleanValue | Comparison
	//;
	public BooleanExpressionElements getBooleanExpressionAccess() {
		return pBooleanExpression;
	}
	
	public ParserRule getBooleanExpressionRule() {
		return getBooleanExpressionAccess().getRule();
	}
	
	//Comparison returns Comparison:
	//    '(' 'cmp' op1 = Expression operation=Operation op2 = Expression ')'
	//;
	public ComparisonElements getComparisonAccess() {
		return pComparison;
	}
	
	public ParserRule getComparisonRule() {
		return getComparisonAccess().getRule();
	}
	
	//Channel returns Channel:
	//    '('
	//        name=ID ';'
	//        'connects' '{' connects+=[Component] "," connects+=[Component]  ( "," connects+=[Component])* '}'
	//    ')';
	public ChannelElements getChannelAccess() {
		return pChannel;
	}
	
	public ParserRule getChannelRule() {
		return getChannelAccess().getRule();
	}
	
	//Constraint returns Constraint:
	//    PresenceConstraint | OperationConstraint
	//;
	public ConstraintElements getConstraintAccess() {
		return pConstraint;
	}
	
	public ParserRule getConstraintRule() {
		return getConstraintAccess().getRule();
	}
	
	//PresenceConstraint returns PresenceConstraint:
	//    (optional?='optional')?  'needs' propertyName=ID
	//;
	public PresenceConstraintElements getPresenceConstraintAccess() {
		return pPresenceConstraint;
	}
	
	public ParserRule getPresenceConstraintRule() {
		return getPresenceConstraintAccess().getRule();
	}
	
	//OperationConstraint returns OperationConstraint:
	//    (optional?='optional')?  propertyName=ID operation=Operation value=ValueOrReference
	//;
	public OperationConstraintElements getOperationConstraintAccess() {
		return pOperationConstraint;
	}
	
	public ParserRule getOperationConstraintRule() {
		return getOperationConstraintAccess().getRule();
	}
	
	//ValueOrReference returns ValueOrReference:
	//    Value | Reference
	//;
	public ValueOrReferenceElements getValueOrReferenceAccess() {
		return pValueOrReference;
	}
	
	public ParserRule getValueOrReferenceRule() {
		return getValueOrReferenceAccess().getRule();
	}
	
	//Reference returns Reference:
	//    SelfReference | DeviceReference
	//;
	public ReferenceElements getReferenceAccess() {
		return pReference;
	}
	
	public ParserRule getReferenceRule() {
		return getReferenceAccess().getRule();
	}
	
	//DeviceReference returns DeviceReference:
	//    'ref' reference=STRING
	//;
	public DeviceReferenceElements getDeviceReferenceAccess() {
		return pDeviceReference;
	}
	
	public ParserRule getDeviceReferenceRule() {
		return getDeviceReferenceAccess().getRule();
	}
	
	//SelfReference returns SelfReference:
	//    'self' reference=STRING
	//;
	public SelfReferenceElements getSelfReferenceAccess() {
		return pSelfReference;
	}
	
	public ParserRule getSelfReferenceRule() {
		return getSelfReferenceAccess().getRule();
	}
	
	//Value returns Value:
	//    BooleanValue | IntegerValue | FloatValue | StringValue
	//;
	public ValueElements getValueAccess() {
		return pValue;
	}
	
	public ParserRule getValueRule() {
		return getValueAccess().getRule();
	}
	
	//BooleanValue returns BooleanValue:
	//    value=BOOL
	//;
	public BooleanValueElements getBooleanValueAccess() {
		return pBooleanValue;
	}
	
	public ParserRule getBooleanValueRule() {
		return getBooleanValueAccess().getRule();
	}
	
	//StringValue returns StringValue:
	//    value=STRING
	//;
	public StringValueElements getStringValueAccess() {
		return pStringValue;
	}
	
	public ParserRule getStringValueRule() {
		return getStringValueAccess().getRule();
	}
	
	//FloatValue returns FloatValue:
	//    value=FLOAT
	//;
	public FloatValueElements getFloatValueAccess() {
		return pFloatValue;
	}
	
	public ParserRule getFloatValueRule() {
		return getFloatValueAccess().getRule();
	}
	
	//IntegerValue returns IntegerValue:
	//    value=SINT
	//;
	public IntegerValueElements getIntegerValueAccess() {
		return pIntegerValue;
	}
	
	public ParserRule getIntegerValueRule() {
		return getIntegerValueAccess().getRule();
	}
	
	//terminal BOOL returns ecore::EBoolean:
	//    'true' | 'false'
	//;
	public TerminalRule getBOOLRule() {
		return tBOOL;
	}
	
	//terminal SINT returns ecore::EInt:
	//    ('-')? INT
	//;
	public TerminalRule getSINTRule() {
		return tSINT;
	}
	
	//terminal FLOAT returns ecore::EFloat:
	//    SINT '.' INT
	//;
	public TerminalRule getFLOATRule() {
		return tFLOAT;
	}
	
	//enum Operation returns Operation:
	//    eq = "=" | ne = "!=" | gt = ">" | ge = ">=" | le = "<=" | lt = "<"
	//;
	public OperationElements getOperationAccess() {
		return eOperation;
	}
	
	public EnumRule getOperationRule() {
		return getOperationAccess().getRule();
	}
	
	//enum NumberOperationMiddle returns NumberOperation:
	//    add = "+" | minus = "-" | mul = "*" | div = "/"
	//;
	public NumberOperationMiddleElements getNumberOperationMiddleAccess() {
		return eNumberOperationMiddle;
	}
	
	public EnumRule getNumberOperationMiddleRule() {
		return getNumberOperationMiddleAccess().getRule();
	}
	
	//enum NumberOperation1 returns NumberOperation:
	//    add = "+"
	//;
	public NumberOperation1Elements getNumberOperation1Access() {
		return eNumberOperation1;
	}
	
	public EnumRule getNumberOperation1Rule() {
		return getNumberOperation1Access().getRule();
	}
	
	//enum NumberOperation2 returns NumberOperation:
	//    minus = "-"
	//;
	public NumberOperation2Elements getNumberOperation2Access() {
		return eNumberOperation2;
	}
	
	public EnumRule getNumberOperation2Rule() {
		return getNumberOperation2Access().getRule();
	}
	
	//enum NumberOperation3 returns NumberOperation:
	//    mul = "*"
	//;
	public NumberOperation3Elements getNumberOperation3Access() {
		return eNumberOperation3;
	}
	
	public EnumRule getNumberOperation3Rule() {
		return getNumberOperation3Access().getRule();
	}
	
	//enum NumberOperation4 returns NumberOperation:
	//    div = "/"
	//;
	public NumberOperation4Elements getNumberOperation4Access() {
		return eNumberOperation4;
	}
	
	public EnumRule getNumberOperation4Rule() {
		return getNumberOperation4Access().getRule();
	}
	
	//enum NumberOperationStart returns NumberOperationFunction:
	//    max = "max" | min = "min"
	//;
	public NumberOperationStartElements getNumberOperationStartAccess() {
		return eNumberOperationStart;
	}
	
	public EnumRule getNumberOperationStartRule() {
		return getNumberOperationStartAccess().getRule();
	}
	
	//PositiveIntegerValue returns IntegerValue:
	//    value=SINT
	//;
	public PositiveIntegerValueElements getPositiveIntegerValueAccess() {
		return pPositiveIntegerValue;
	}
	
	public ParserRule getPositiveIntegerValueRule() {
		return getPositiveIntegerValueAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
