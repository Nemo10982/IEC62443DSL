/*
 * generated by Xtext 2.32.0
 */
package org.xtext.iec62443.baseModel.scoping;

import java.util.List;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.EcoreUtil2;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.Scopes;
import org.xtext.iec62443.baseModel.mIEC.*;

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
public class MiecScopeProvider extends AbstractMiecScopeProvider {
	public IScope getScope(EObject context, EReference reference) {
	    // We want to define the Scope for the Element's superElement cross-reference
		
	    if ((context instanceof Channel && reference == MIECPackage.Literals.CHANNEL__CONNECTS)) {
	        // Collect a list of candidates by going through the model
	        // EcoreUtil2 provides useful functionality to do that
	        // For example searching for all elements within the root Object's tree
	        EObject rootElement = EcoreUtil2.getRootContainer(context);
	        List<Component> candidates = EcoreUtil2.getAllContentsOfType(rootElement, Component.class);
	        // Create IEObjectDescriptions and puts them into an IScope instance
	        return Scopes.scopeFor(candidates);
	    }
	    else if ((context instanceof Application && reference == MIECPackage.Literals.APPLICATION__COMMUNICATES_WITH)) {
	        EObject rootElement = EcoreUtil2.getRootContainer(context);
	        List<Component> candidates = EcoreUtil2.getAllContentsOfType(rootElement, Component.class);
	        return Scopes.scopeFor(candidates);
	    }
	    // If we are looking for references in a constraint right part, we should restrain ourself to the available ones
	    else if ((context instanceof SelfReference)) {
	        EObject app = context.eContainer().eContainer();
	        List<Property> candidates = ((Application) app).getProperties();
	        return Scopes.scopeFor(candidates);
	    }
	    else if ((context instanceof DeviceReference)) {
	        EObject app = context.eContainer().eContainer();
	        List<Property> candidates = ((Application) app).getExecutedOn().getProperties();
	        return Scopes.scopeFor(candidates);
	    }
	    
	    
	    return super.getScope(context, reference);
	}
}
